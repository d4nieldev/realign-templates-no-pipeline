[
  {
    "instruction": "List detection options for MITRE 'Compromise Infrastructure: Server' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Compromise Infrastructure: Server:\nOnce adversaries have provisioned software on a compromised server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Compromise Infrastructure: Server' ",
      "answer": "Sure! Here are the detection options for MITRE Compromise Infrastructure: Server:\nOnce adversaries have provisioned software on a compromised server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Deleting Windows event logs (via native binaries , API functions , or PowerShell ) may also generate an alterable event (Event ID 1102: \"The audit log was cleared\").",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Indicator Removal: Clear Windows Event Logs",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Deleting Windows event logs (via native binaries , API functions , or PowerShell ) may also generate an alterable event (Event ID 1102: \"The audit log was cleared\").",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Indicator Removal: Clear Windows Event Logs",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Plist File Modification?",
    "context": "",
    "output": "Here are some possible detections for 'Plist File Modification':\n\nMonitor for common command-line editors used to modify plist files located in auto-run locations, such as <code>\\~/LaunchAgents</code>, <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>, and an application's <code>Info.plist</code>. \n\nMonitor for plist file modification immediately followed by code execution from <code>\\~/Library/Scripts</code> and <code>~/Library/Preferences</code>. Also, monitor for significant changes to any path pointers in a modified plist.\n\nIdentify new services executed from plist modified in the previous user's session.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Plist File Modification",
      "answer": "Here are some possible detections for 'Plist File Modification':\n\nMonitor for common command-line editors used to modify plist files located in auto-run locations, such as <code>\\~/LaunchAgents</code>, <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>, and an application's <code>Info.plist</code>. \n\nMonitor for plist file modification immediately followed by code execution from <code>\\~/Library/Scripts</code> and <code>~/Library/Preferences</code>. Also, monitor for significant changes to any path pointers in a modified plist.\n\nIdentify new services executed from plist modified in the previous user's session.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Acquire Infrastructure: DNS Server - T1583.002, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Acquire Infrastructure: DNS Server' are:\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Acquire Infrastructure: DNS Server - T1583.002, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Acquire Infrastructure: DNS Server' are:\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Brute Force: Password Spraying (T1110.003)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor authentication logs for system and application login failures of Valid Accounts. Specifically, monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.\n\nConsider the following event IDs:\n\n* Domain Controllers: \"Audit Logon\" (Success & Failure) for event ID 4625.\n* Domain Controllers: \"Audit Kerberos Authentication Service\" (Success & Failure) for event ID 4771.\n* All systems: \"Audit Logon\" (Success & Failure) for event ID 4648.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Brute Force: Password Spraying (T1110.003)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor authentication logs for system and application login failures of Valid Accounts. Specifically, monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.\n\nConsider the following event IDs:\n\n* Domain Controllers: \"Audit Logon\" (Success & Failure) for event ID 4625.\n* Domain Controllers: \"Audit Kerberos Authentication Service\" (Success & Failure) for event ID 4771.\n* All systems: \"Audit Logon\" (Success & Failure) for event ID 4648.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: File and Directory Permissions Modification: Windows File and Directory Permissions Modification (T1222.001)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor and investigate attempts to modify DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: File and Directory Permissions Modification: Windows File and Directory Permissions Modification (T1222.001)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor and investigate attempts to modify DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Exploitation for Privilege Escalation - T1068",
    "context": "",
    "output": "In order to detect Exploitation for Privilege Escalation (T1068), you can apply the following detection options:\nDetecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution or evidence of Discovery. Consider monitoring for the presence or loading (ex: Sysmon Event ID 6) of known vulnerable drivers that adversaries may drop and exploit to execute code in kernel mode.\n\nHigher privileges are often necessary to perform additional actions such as some methods of OS Credential Dumping. Look for additional activity that may indicate an adversary has gained higher privileges.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Exploitation for Privilege Escalation - T1068",
      "answer": "In order to detect Exploitation for Privilege Escalation (T1068), you can apply the following detection options:\nDetecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution or evidence of Discovery. Consider monitoring for the presence or loading (ex: Sysmon Event ID 6) of known vulnerable drivers that adversaries may drop and exploit to execute code in kernel mode.\n\nHigher privileges are often necessary to perform additional actions such as some methods of OS Credential Dumping. Look for additional activity that may indicate an adversary has gained higher privileges.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Data Encoding: Standard Encoding' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Data Encoding: Standard Encoding:\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Data Encoding: Standard Encoding' ",
      "answer": "Sure! Here are the detection options for MITRE Data Encoding: Standard Encoding:\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Command and Scripting Interpreter: Unix Shell' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Command and Scripting Interpreter: Unix Shell:\nUnix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Command and Scripting Interpreter: Unix Shell' ",
      "answer": "Sure! Here are the detection options for MITRE Command and Scripting Interpreter: Unix Shell:\nUnix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Remote Service Session Hijacking (T1563)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nUse of these services may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with that service. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.\n\nMonitor for processes and command-line arguments associated with hijacking service sessions.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Remote Service Session Hijacking (T1563)",
      "answer": "Detections for the following MITRE attack technique:\n\nUse of these services may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with that service. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.\n\nMonitor for processes and command-line arguments associated with hijacking service sessions.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Obfuscated Files or Information: Indicator Removal from Tools",
    "context": "",
    "output": "Here are some possible detections for 'Obfuscated Files or Information: Indicator Removal from Tools':\n\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Obfuscated Files or Information: Indicator Removal from Tools",
      "answer": "Here are some possible detections for 'Obfuscated Files or Information: Indicator Removal from Tools':\n\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Encrypted Channel: Asymmetric Cryptography (T1573.002)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nSSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels. SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Encrypted Channel: Asymmetric Cryptography (T1573.002)",
      "answer": "Detections for the following MITRE attack technique:\n\nSSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels. SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Consider monitoring processes for `tscon.exe` usage and monitor service creation that uses `cmd.exe /k` or `cmd.exe /c` in its arguments to detect RDP session hijacking.\n\nUse of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Remote Service Session Hijacking: RDP Hijacking",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Consider monitoring processes for `tscon.exe` usage and monitor service creation that uses `cmd.exe /k` or `cmd.exe /c` in its arguments to detect RDP session hijacking.\n\nUse of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Remote Service Session Hijacking: RDP Hijacking",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol",
    "context": "",
    "output": "Here are some possible detections for 'Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol':\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.  \n\nFor network infrastructure devices, collect AAA logging to monitor for `copy` commands being run to exfiltrate configuration files to non-standard destinations over unencrypted protocols such as TFTP.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol",
      "answer": "Here are some possible detections for 'Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol':\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.  \n\nFor network infrastructure devices, collect AAA logging to monitor for `copy` commands being run to exfiltrate configuration files to non-standard destinations over unencrypted protocols such as TFTP.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Remote Service Session Hijacking: SSH Hijacking (T1563.001)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Remote Service Session Hijacking: SSH Hijacking:\n\nUse of SSH may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Remote Service Session Hijacking: SSH Hijacking (T1563.001)",
      "answer": "Certainly. Here are some possible detection methods for Remote Service Session Hijacking: SSH Hijacking:\n\nUse of SSH may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Data Obfuscation: Junk Data' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Data Obfuscation: Junk Data:\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Data Obfuscation: Junk Data' ",
      "answer": "Sure! Here are the detection options for MITRE Data Obfuscation: Junk Data:\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Dynamic Resolution: DNS Calculation (T1568.003)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Dynamic Resolution: DNS Calculation:\n\nDetection for this technique is difficult because it would require knowledge of the specific implementation of the port calculation algorithm. Detection may be possible by analyzing DNS records if the algorithm is known.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Dynamic Resolution: DNS Calculation (T1568.003)",
      "answer": "Certainly. Here are some possible detection methods for Dynamic Resolution: DNS Calculation:\n\nDetection for this technique is difficult because it would require knowledge of the specific implementation of the port calculation algorithm. Detection may be possible by analyzing DNS records if the algorithm is known.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Use Alternate Authentication Material: Pass the Hash (T1550.002)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Use Alternate Authentication Material: Pass the Hash:\n\nAudit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.\n\nEvent ID 4768 and 4769 will also be generated on the Domain Controller when a user requests a new ticket granting ticket or service ticket. These events combined with the above activity may be indicative of an overpass the hash attempt.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Use Alternate Authentication Material: Pass the Hash (T1550.002)",
      "answer": "Certainly. Here are some possible detection methods for Use Alternate Authentication Material: Pass the Hash:\n\nAudit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.\n\nEvent ID 4768 and 4769 will also be generated on the Domain Controller when a user requests a new ticket granting ticket or service ticket. These events combined with the above activity may be indicative of an overpass the hash attempt.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Input Capture (T1056)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nDetection may vary depending on how input is captured but may include monitoring for certain Windows API calls (e.g. `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`), monitoring for malicious instances of Command and Scripting Interpreter, and ensuring no unauthorized drivers or kernel modules that could indicate keylogging or API hooking are present.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Input Capture (T1056)",
      "answer": "Detections for the following MITRE attack technique:\n\nDetection may vary depending on how input is captured but may include monitoring for certain Windows API calls (e.g. `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`), monitoring for malicious instances of Command and Scripting Interpreter, and ensuring no unauthorized drivers or kernel modules that could indicate keylogging or API hooking are present.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Active Scanning: Scanning IP Blocks",
    "context": "",
    "output": "Here are some possible detections for 'Active Scanning: Scanning IP Blocks':\n\nMonitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet).\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Active Scanning: Scanning IP Blocks",
      "answer": "Here are some possible detections for 'Active Scanning: Scanning IP Blocks':\n\nMonitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet).\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Data Encoding: Non-Standard Encoding?",
    "context": "",
    "output": "Here are some possible detections for 'Data Encoding: Non-Standard Encoding':\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Data Encoding: Non-Standard Encoding",
      "answer": "Here are some possible detections for 'Data Encoding: Non-Standard Encoding':\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.\n\nMonitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Exfiltration Over Other Network Medium",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.\n\nMonitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Exfiltration Over Other Network Medium",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Modify Authentication Process: Pluggable Authentication Modules - T1556.003, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Modify Authentication Process: Pluggable Authentication Modules' are:\n\nMonitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.\n\nLook for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Modify Authentication Process: Pluggable Authentication Modules - T1556.003, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Modify Authentication Process: Pluggable Authentication Modules' are:\n\nMonitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.\n\nLook for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Deploy Container (T1610)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Deploy Container:\n\nMonitor for suspicious or unknown container images and pods in your environment. Deploy logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application pods to detect malicious activity at the cluster level. In Docker, the daemon log provides insight into remote API calls, including those that deploy containers. Logs for management services or applications used to deploy containers other than the native technologies themselves should also be monitored.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Deploy Container (T1610)",
      "answer": "Certainly. Here are some possible detection methods for Deploy Container:\n\nMonitor for suspicious or unknown container images and pods in your environment. Deploy logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application pods to detect malicious activity at the cluster level. In Docker, the daemon log provides insight into remote API calls, including those that deploy containers. Logs for management services or applications used to deploy containers other than the native technologies themselves should also be monitored.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Detection of HTML Smuggling is difficult as HTML5 and JavaScript attributes are used by legitimate services and applications. HTML Smuggling can be performed in many ways via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Detecting specific JavaScript and/or HTML5 attribute strings such as <code>Blob</code>, <code>msSaveOrOpenBlob</code>, and/or <code>download</code> may be a good indicator of HTML Smuggling. These strings may also be used by legitimate services therefore it is possible to raise false positives.\n\nConsider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Obfuscated Files or Information: HTML Smuggling",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Detection of HTML Smuggling is difficult as HTML5 and JavaScript attributes are used by legitimate services and applications. HTML Smuggling can be performed in many ways via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Detecting specific JavaScript and/or HTML5 attribute strings such as <code>Blob</code>, <code>msSaveOrOpenBlob</code>, and/or <code>download</code> may be a good indicator of HTML Smuggling. These strings may also be used by legitimate services therefore it is possible to raise false positives.\n\nConsider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Obfuscated Files or Information: HTML Smuggling",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Event Triggered Execution: Accessibility Features - T1546.008",
    "context": "",
    "output": "In order to detect Event Triggered Execution: Accessibility Features (T1546.008), you can apply the following detection options:\nChanges to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code>.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Event Triggered Execution: Accessibility Features - T1546.008",
      "answer": "In order to detect Event Triggered Execution: Accessibility Features (T1546.008), you can apply the following detection options:\nChanges to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code>.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Web Service: Bidirectional Communication (T1102.002)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nHost data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Web Service: Bidirectional Communication (T1102.002)",
      "answer": "Detections for the following MITRE attack technique:\n\nHost data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Gather Victim Host Information: Client Configurations' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Gather Victim Host Information: Client Configurations:\nInternet scanners may be used to look for patterns associated with malicious content designed to collect client configuration information from visitors.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Gather Victim Host Information: Client Configurations' ",
      "answer": "Sure! Here are the detection options for MITRE Gather Victim Host Information: Client Configurations:\nInternet scanners may be used to look for patterns associated with malicious content designed to collect client configuration information from visitors.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Server Software Component: SQL Stored Procedures - T1505.001?",
    "context": "",
    "output": "In order to detect Server Software Component: SQL Stored Procedures (T1505.001), you can apply the following detection options:\nOn a MSSQL Server, consider monitoring for xp_cmdshell usage. Consider enabling audit features that can log malicious startup activities.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Server Software Component: SQL Stored Procedures - T1505.001",
      "answer": "In order to detect Server Software Component: SQL Stored Procedures (T1505.001), you can apply the following detection options:\nOn a MSSQL Server, consider monitoring for xp_cmdshell usage. Consider enabling audit features that can log malicious startup activities.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Data from Information Repositories: Confluence' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Data from Information Repositories: Confluence:\nMonitor access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.\n\nUser access logging within Atlassian's Confluence can be configured to report access to certain pages and documents through AccessLogFilter.  Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Data from Information Repositories: Confluence' ",
      "answer": "Sure! Here are the detection options for MITRE Data from Information Repositories: Confluence:\nMonitor access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.\n\nUser access logging within Atlassian's Confluence can be configured to report access to certain pages and documents through AccessLogFilter.  Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Boot or Logon Autostart Execution: Time Providers",
    "context": "",
    "output": "Here are some possible detections for 'Boot or Logon Autostart Execution: Time Providers':\n\nBaseline values and monitor/analyze activity related to modifying W32Time information in the Registry, including application programming interface (API) calls such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code> as well as execution of the W32tm.exe utility. There is no restriction on the number of custom time providers registrations, though each may require a DLL payload written to disk.\n\nThe Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Boot or Logon Autostart Execution: Time Providers",
      "answer": "Here are some possible detections for 'Boot or Logon Autostart Execution: Time Providers':\n\nBaseline values and monitor/analyze activity related to modifying W32Time information in the Registry, including application programming interface (API) calls such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code> as well as execution of the W32tm.exe utility. There is no restriction on the number of custom time providers registrations, though each may require a DLL payload written to disk.\n\nThe Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Develop Capabilities: Code Signing Certificates?",
    "context": "",
    "output": "Here are some possible detections for 'Develop Capabilities: Code Signing Certificates':\n\nConsider analyzing self-signed code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, and common name. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in crafting self-signed code signing certificates.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as Code Signing or Install Root Certificate.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Develop Capabilities: Code Signing Certificates",
      "answer": "Here are some possible detections for 'Develop Capabilities: Code Signing Certificates':\n\nConsider analyzing self-signed code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, and common name. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in crafting self-signed code signing certificates.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as Code Signing or Install Root Certificate.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. New processes may not be created and no additional software dropped to disk. Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior. Monitor for Process Injection against browser applications.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Browser Session Hijacking",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. New processes may not be created and no additional software dropped to disk. Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior. Monitor for Process Injection against browser applications.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Browser Session Hijacking",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Compromise Infrastructure: Botnet' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Compromise Infrastructure: Botnet:\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Phishing, Endpoint Denial of Service, or Network Denial of Service.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Compromise Infrastructure: Botnet' ",
      "answer": "Sure! Here are the detection options for MITRE Compromise Infrastructure: Botnet:\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Phishing, Endpoint Denial of Service, or Network Denial of Service.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Obtain Capabilities: Malware' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Obtain Capabilities: Malware:\nConsider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific MaaS offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Obtain Capabilities: Malware' ",
      "answer": "Sure! Here are the detection options for MITRE Obtain Capabilities: Malware:\nConsider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific MaaS offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Phishing: Spearphishing Voice - T1566.004?",
    "context": "",
    "output": "In order to detect Phishing: Spearphishing Voice (T1566.004), you can apply the following detection options:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Phishing: Spearphishing Voice - T1566.004",
      "answer": "In order to detect Phishing: Spearphishing Voice (T1566.004), you can apply the following detection options:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: User Execution",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).",
      "answer": "A technique that can be detected with the MITRE detections listed above is: User Execution",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Native API?",
    "context": "",
    "output": "Here are some possible detections for 'Native API':\n\nMonitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient. \n\nUtilization of the Windows APIs may involve processes loading/accessing system DLLs associated with providing called functions (ex: ntdll.dll, kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Native API",
      "answer": "Here are some possible detections for 'Native API':\n\nMonitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient. \n\nUtilization of the Windows APIs may involve processes loading/accessing system DLLs associated with providing called functions (ex: ntdll.dll, kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Cloud Service Dashboard (T1538)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor account activity logs to see actions performed and activity associated with the cloud service management console. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Cloud Service Dashboard (T1538)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor account activity logs to see actions performed and activity associated with the cloud service management console. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Indicator Removal: Clear Command History - T1070.003, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Indicator Removal: Clear Command History' are:\n\nUser authentication, especially via remote terminal services like SSH, without new entries in that user's <code>~/.bash_history</code> is suspicious. Additionally, the removal/clearing of the <code>~/.bash_history</code> file can be an indicator of suspicious activity.\n\nMonitor for suspicious modifications or deletion of <code>ConsoleHost_history.txt</code> and use of the <code>Clear-History</code> command.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Indicator Removal: Clear Command History - T1070.003, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Indicator Removal: Clear Command History' are:\n\nUser authentication, especially via remote terminal services like SSH, without new entries in that user's <code>~/.bash_history</code> is suspicious. Additionally, the removal/clearing of the <code>~/.bash_history</code> file can be an indicator of suspicious activity.\n\nMonitor for suspicious modifications or deletion of <code>ConsoleHost_history.txt</code> and use of the <code>Clear-History</code> command.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Gather Victim Identity Information: Employee Names",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Gather Victim Identity Information: Employee Names",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'User Execution: Malicious Link' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE User Execution: Malicious Link:\nInspect network traffic for indications that a user visited a malicious site, such as links included in phishing campaigns directed at your organization.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded from a link and executed on the user's computer.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'User Execution: Malicious Link' ",
      "answer": "Sure! Here are the detection options for MITRE User Execution: Malicious Link:\nInspect network traffic for indications that a user visited a malicious site, such as links included in phishing campaigns directed at your organization.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded from a link and executed on the user's computer.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Supply Chain Compromise: Compromise Hardware Supply Chain",
    "context": "",
    "output": "Here are some possible detections for 'Supply Chain Compromise: Compromise Hardware Supply Chain':\n\nPerform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Supply Chain Compromise: Compromise Hardware Supply Chain",
      "answer": "Here are some possible detections for 'Supply Chain Compromise: Compromise Hardware Supply Chain':\n\nPerform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Search Open Technical Databases' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Search Open Technical Databases:\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Search Open Technical Databases' ",
      "answer": "Sure! Here are the detection options for MITRE Search Open Technical Databases:\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Remote Services (T1021)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Remote Services:\n\nCorrelate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. \n\nUse of applications such as ARD may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using these applications. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. \n\nIn macOS, you can review logs for \"screensharingd\" and \"Authentication\" event messages. Monitor network connections regarding remote management (ports tcp:3283 and tcp:5900) and for remote login (port tcp:22).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Remote Services (T1021)",
      "answer": "Certainly. Here are some possible detection methods for Remote Services:\n\nCorrelate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. \n\nUse of applications such as ARD may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using these applications. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. \n\nIn macOS, you can review logs for \"screensharingd\" and \"Authentication\" event messages. Monitor network connections regarding remote management (ports tcp:3283 and tcp:5900) and for remote login (port tcp:22).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Remote Services: Direct Cloud VM Connections - T1021.008, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Remote Services: Direct Cloud VM Connections' are:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Remote Services: Direct Cloud VM Connections - T1021.008, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Remote Services: Direct Cloud VM Connections' are:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Unused/Unsupported Cloud Regions",
    "context": "",
    "output": "Here are some possible detections for 'Unused/Unsupported Cloud Regions':\n\nMonitor system logs to review activities occurring across all cloud environments and regions. Configure alerting to notify of activity in normally unused regions or if the number of instances active in a region goes above a certain threshold.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Unused/Unsupported Cloud Regions",
      "answer": "Here are some possible detections for 'Unused/Unsupported Cloud Regions':\n\nMonitor system logs to review activities occurring across all cloud environments and regions. Configure alerting to notify of activity in normally unused regions or if the number of instances active in a region goes above a certain threshold.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Acquire Infrastructure: Virtual Private Server (T1583.003)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nOnce adversaries have provisioned a VPS (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Acquire Infrastructure: Virtual Private Server (T1583.003)",
      "answer": "Detections for the following MITRE attack technique:\n\nOnce adversaries have provisioned a VPS (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Hide Artifacts: File/Path Exclusions - T1564.012, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Hide Artifacts: File/Path Exclusions' are:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Hide Artifacts: File/Path Exclusions - T1564.012, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Hide Artifacts: File/Path Exclusions' are:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Office Application Startup: Outlook Rules' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Office Application Startup: Outlook Rules:\nMicrosoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output. This PowerShell script is ineffective in gathering rules with modified `PRPR_RULE_MSG_NAME` and `PR_RULE_MSG_PROVIDER` properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules. SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Office Application Startup: Outlook Rules' ",
      "answer": "Sure! Here are the detection options for MITRE Office Application Startup: Outlook Rules:\nMicrosoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output. This PowerShell script is ineffective in gathering rules with modified `PRPR_RULE_MSG_NAME` and `PR_RULE_MSG_PROVIDER` properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules. SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Search Closed Sources: Threat Intel Vendors",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Search Closed Sources: Threat Intel Vendors",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Search Closed Sources (T1597)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Search Closed Sources:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Search Closed Sources (T1597)",
      "answer": "Certainly. Here are some possible detection methods for Search Closed Sources:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Cloud Infrastructure Discovery (T1580)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nEstablish centralized logging for the activity of cloud infrastructure components. Monitor logs for actions that could be taken to gather information about cloud infrastructure, including the use of discovery API calls by new or unexpected users and enumerations from unknown or malicious IP addresses. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Cloud Infrastructure Discovery (T1580)",
      "answer": "Detections for the following MITRE attack technique:\n\nEstablish centralized logging for the activity of cloud infrastructure components. Monitor logs for actions that could be taken to gather information about cloud infrastructure, including the use of discovery API calls by new or unexpected users and enumerations from unknown or malicious IP addresses. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: User Execution: Malicious Image (T1204.003)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor the local image registry to make sure malicious images are not added. Track the deployment of new containers, especially from newly built images. Monitor the behavior of containers within the environment to detect anomalous behavior or malicious activity after users deploy from malicious images.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: User Execution: Malicious Image (T1204.003)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor the local image registry to make sure malicious images are not added. Track the deployment of new containers, especially from newly built images. Monitor the behavior of containers within the environment to detect anomalous behavior or malicious activity after users deploy from malicious images.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor process execution and command-line parameters of .scr files. Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior.\n\nTools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Suspicious paths and PE files may indicate outliers among legitimate screensavers in a network and should be investigated.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Event Triggered Execution: Screensaver",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor process execution and command-line parameters of .scr files. Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior.\n\nTools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Suspicious paths and PE files may indicate outliers among legitimate screensavers in a network and should be investigated.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Event Triggered Execution: Screensaver",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Traffic Signaling: Socket Filters - T1205.002, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Traffic Signaling: Socket Filters' are:\n\nIdentify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Traffic Signaling: Socket Filters - T1205.002, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Traffic Signaling: Socket Filters' are:\n\nIdentify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'System Binary Proxy Execution: Rundll32' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE System Binary Proxy Execution: Rundll32:\nUse process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.\n\nCommand arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded. Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'System Binary Proxy Execution: Rundll32' ",
      "answer": "Sure! Here are the detection options for MITRE System Binary Proxy Execution: Rundll32:\nUse process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.\n\nCommand arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded. Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Forge Web Credentials: Web Cookies (T1606.001)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Forge Web Credentials: Web Cookies:\n\nMonitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Forge Web Credentials: Web Cookies (T1606.001)",
      "answer": "Certainly. Here are some possible detection methods for Forge Web Credentials: Web Cookies:\n\nMonitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Compromise Infrastructure: Virtual Private Server - T1584.003",
    "context": "",
    "output": "In order to detect Compromise Infrastructure: Virtual Private Server (T1584.003), you can apply the following detection options:\nOnce adversaries have provisioned software on a compromised VPS (ex: for use as a command and control server), internet scans may reveal VPSs that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Compromise Infrastructure: Virtual Private Server - T1584.003",
      "answer": "In order to detect Compromise Infrastructure: Virtual Private Server (T1584.003), you can apply the following detection options:\nOnce adversaries have provisioned software on a compromised VPS (ex: for use as a command and control server), internet scans may reveal VPSs that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Hide Artifacts: Hidden Users - T1564.002, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Hide Artifacts: Hidden Users' are:\n\nMonitor for users that may be hidden from the login screen but still present in additional artifacts of usage such as directories and authentication logs. \n\nMonitor processes and command-line events for actions that could be taken to add a new user and subsequently hide it from login screens. Monitor Registry events for modifications to the <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList</code> key.\n\nIn macOS, monitor for commands, processes, and file activity in combination with a user that has a userID under 500. Monitor for modifications to set the <code>Hide500Users</code> key value to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file. Monitor the command line for usage of the <code>dscl . create</code> command with the <code>IsHidden</code> attribute set to <code>1</code>.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Hide Artifacts: Hidden Users - T1564.002, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Hide Artifacts: Hidden Users' are:\n\nMonitor for users that may be hidden from the login screen but still present in additional artifacts of usage such as directories and authentication logs. \n\nMonitor processes and command-line events for actions that could be taken to add a new user and subsequently hide it from login screens. Monitor Registry events for modifications to the <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList</code> key.\n\nIn macOS, monitor for commands, processes, and file activity in combination with a user that has a userID under 500. Monitor for modifications to set the <code>Hide500Users</code> key value to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file. Monitor the command line for usage of the <code>dscl . create</code> command with the <code>IsHidden</code> attribute set to <code>1</code>.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Direct Volume Access (T1006)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor handle opens on drive volumes that are made by processes to determine when they may directly access logical drives. \n\nMonitor processes and command-line arguments for actions that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through PowerShell, additional logging of PowerShell scripts is recommended.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Direct Volume Access (T1006)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor handle opens on drive volumes that are made by processes to determine when they may directly access logical drives. \n\nMonitor processes and command-line arguments for actions that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through PowerShell, additional logging of PowerShell scripts is recommended.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Hijack Execution Flow: Services Registry Permissions Weakness - T1574.011, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Hijack Execution Flow: Services Registry Permissions Weakness' are:\n\nService changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information.  Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be done to modify services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be changed through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Hijack Execution Flow: Services Registry Permissions Weakness - T1574.011, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Hijack Execution Flow: Services Registry Permissions Weakness' are:\n\nService changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information.  Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be done to modify services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be changed through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Create or Modify System Process: Launch Daemon - T1543.004?",
    "context": "",
    "output": "In order to detect Create or Modify System Process: Launch Daemon (T1543.004), you can apply the following detection options:\nMonitor for new files added to the <code>/Library/LaunchDaemons/</code> folder. The System LaunchDaemons are protected by SIP.\n\nSome legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with the <code>RunAtLoad</code> parameter set to true, ensure the <code>Program</code> parameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such as <code>Program</code> and <code>ProgramArguments</code> parameters but one must be present.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Create or Modify System Process: Launch Daemon - T1543.004",
      "answer": "In order to detect Create or Modify System Process: Launch Daemon (T1543.004), you can apply the following detection options:\nMonitor for new files added to the <code>/Library/LaunchDaemons/</code> folder. The System LaunchDaemons are protected by SIP.\n\nSome legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with the <code>RunAtLoad</code> parameter set to true, ensure the <code>Program</code> parameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such as <code>Program</code> and <code>ProgramArguments</code> parameters but one must be present.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Email Collection: Email Forwarding Rule - T1114.003",
    "context": "",
    "output": "In order to detect Email Collection: Email Forwarding Rule (T1114.003), you can apply the following detection options:\nDetection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.\n\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include `X-MS-Exchange-Organization-AutoForwarded` set to true, `X-MailFwdBy` and `X-Forwarded-To`. The `forwardingSMTPAddress` parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox. High volumes of emails that bear the `X-MS-Exchange-Organization-AutoForwarded` header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Email Collection: Email Forwarding Rule - T1114.003",
      "answer": "In order to detect Email Collection: Email Forwarding Rule (T1114.003), you can apply the following detection options:\nDetection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.\n\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include `X-MS-Exchange-Organization-AutoForwarded` set to true, `X-MailFwdBy` and `X-Forwarded-To`. The `forwardingSMTPAddress` parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox. High volumes of emails that bear the `X-MS-Exchange-Organization-AutoForwarded` header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Use Alternate Authentication Material (T1550)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Use Alternate Authentication Material:\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services. Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Use Alternate Authentication Material (T1550)",
      "answer": "Certainly. Here are some possible detection methods for Use Alternate Authentication Material:\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services. Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Exfiltration Over Physical Medium' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Exfiltration Over Physical Medium:\nMonitor file access on removable media. Detect processes that execute when removable media are mounted.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Exfiltration Over Physical Medium' ",
      "answer": "Sure! Here are the detection options for MITRE Exfiltration Over Physical Medium:\nMonitor file access on removable media. Detect processes that execute when removable media are mounted.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Software Deployment Tools - T1072, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Software Deployment Tools' are:\n\nDetection methods will vary depending on the type of third-party software or system and how it is typically used. \n\nThe same investigation process can be applied here as with other potentially malicious activities where the distribution vector is initially unknown but the resulting activity follows a discernible pattern. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. \n\nOften these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.\n\nPerform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Software Deployment Tools - T1072, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Software Deployment Tools' are:\n\nDetection methods will vary depending on the type of third-party software or system and how it is typically used. \n\nThe same investigation process can be applied here as with other potentially malicious activities where the distribution vector is initially unknown but the resulting activity follows a discernible pattern. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. \n\nOften these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.\n\nPerform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Hide Artifacts: Hidden Window - T1564.003?",
    "context": "",
    "output": "In order to detect Hide Artifacts: Hidden Window (T1564.003), you can apply the following detection options:\nMonitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Hide Artifacts: Hidden Window - T1564.003",
      "answer": "In order to detect Hide Artifacts: Hidden Window (T1564.003), you can apply the following detection options:\nMonitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Create Account' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Create Account:\nMonitor for processes and command-line parameters associated with account creation, such as <code>net user</code> or <code>useradd</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.  Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.\n\nCollect usage logs from cloud administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Create Account' ",
      "answer": "Sure! Here are the detection options for MITRE Create Account:\nMonitor for processes and command-line parameters associated with account creation, such as <code>net user</code> or <code>useradd</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.  Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.\n\nCollect usage logs from cloud administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Data Transfer Size Limits' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Data Transfer Size Limits:\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). If a process maintains a long connection during which it consistently sends fixed size data packets or a process opens connections and sends fixed sized data packets at regular intervals, it may be performing an aggregate data transfer. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Data Transfer Size Limits' ",
      "answer": "Sure! Here are the detection options for MITRE Data Transfer Size Limits:\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). If a process maintains a long connection during which it consistently sends fixed size data packets or a process opens connections and sends fixed sized data packets at regular intervals, it may be performing an aggregate data transfer. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Clipboard Data (T1115)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nAccess to the clipboard is a legitimate function of many applications on an operating system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Clipboard Data (T1115)",
      "answer": "Detections for the following MITRE attack technique:\n\nAccess to the clipboard is a legitimate function of many applications on an operating system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Masquerading: Rename System Utilities - T1036.003",
    "context": "",
    "output": "In order to detect Masquerading: Rename System Utilities (T1036.003), you can apply the following detection options:\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.  Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Masquerading: Rename System Utilities - T1036.003",
      "answer": "In order to detect Masquerading: Rename System Utilities (T1036.003), you can apply the following detection options:\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.  Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Command and Scripting Interpreter: Cloud API - T1059.009, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Command and Scripting Interpreter: Cloud API' are:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Command and Scripting Interpreter: Cloud API - T1059.009, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Command and Scripting Interpreter: Cloud API' are:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: ?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Obtain Capabilities: Artificial Intelligence",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: ",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Obtain Capabilities: Artificial Intelligence",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Subvert Trust Controls: SIP and Trust Provider Hijacking - T1553.003",
    "context": "",
    "output": "In order to detect Subvert Trust Controls: SIP and Trust Provider Hijacking (T1553.003), you can apply the following detection options:\nPeriodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries. \n\nEnable CryptoAPI v2 (CAPI) event logging  to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033). \n\nUtilize Sysmon detection rules and/or enable the Registry (Global Object Access Auditing)  setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers: \n\n* HKLM\\SOFTWARE\\Microsoft\\Cryptography\\OID\n* HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\n* HKLM\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\Trust\n* HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\Trust\n\n**Note:** As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process using Regsvr32. \n\nAnalyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \u201cHide Microsoft Entries\u201d and \u201cHide Windows Entries\u201d are both deselected.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Subvert Trust Controls: SIP and Trust Provider Hijacking - T1553.003",
      "answer": "In order to detect Subvert Trust Controls: SIP and Trust Provider Hijacking (T1553.003), you can apply the following detection options:\nPeriodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries. \n\nEnable CryptoAPI v2 (CAPI) event logging  to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033). \n\nUtilize Sysmon detection rules and/or enable the Registry (Global Object Access Auditing)  setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers: \n\n* HKLM\\SOFTWARE\\Microsoft\\Cryptography\\OID\n* HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\n* HKLM\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\Trust\n* HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\Trust\n\n**Note:** As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process using Regsvr32. \n\nAnalyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \u201cHide Microsoft Entries\u201d and \u201cHide Windows Entries\u201d are both deselected.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. Compare recent invocations of these utilities with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity (ex: URL command line arguments, creation of external network connections, loading of DLLs associated with scripting).   Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded.\n\nThe presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: XSL Script Processing",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. Compare recent invocations of these utilities with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity (ex: URL command line arguments, creation of external network connections, loading of DLLs associated with scripting).   Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded.\n\nThe presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: XSL Script Processing",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Escape to Host (T1611)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor for the deployment of suspicious or unknown container images and pods in your environment, particularly containers running as root. Additionally, monitor for unexpected usage of syscalls such as <code>mount</code> (as well as resulting process activity) that may indicate an attempt to escape from a privileged container to host. In Kubernetes, monitor for cluster-level events associated with changing containers' volume configurations.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Escape to Host (T1611)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor for the deployment of suspicious or unknown container images and pods in your environment, particularly containers running as root. Additionally, monitor for unexpected usage of syscalls such as <code>mount</code> (as well as resulting process activity) that may indicate an attempt to escape from a privileged container to host. In Kubernetes, monitor for cluster-level events associated with changing containers' volume configurations.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Weaken Encryption: Disable Crypto Hardware' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Weaken Encryption: Disable Crypto Hardware:\nThere is no documented method for defenders to directly identify behaviors that disable cryptographic hardware. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Weaken Encryption: Disable Crypto Hardware' ",
      "answer": "Sure! Here are the detection options for MITRE Weaken Encryption: Disable Crypto Hardware:\nThere is no documented method for defenders to directly identify behaviors that disable cryptographic hardware. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Archive Collected Data: Archive via Utility' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Archive Collected Data: Archive via Utility:\nCommon utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Archive Collected Data: Archive via Utility' ",
      "answer": "Sure! Here are the detection options for MITRE Archive Collected Data: Archive via Utility:\nCommon utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Use process monitoring to monitor the execution and command line parameters of binaries involved in shutting down or rebooting systems. Windows event logs may also designate activity associated with a shutdown/reboot, ex. Event ID 1074 and 6006. Unexpected or unauthorized commands from network cli on network devices may also be associated with shutdown/reboot, e.g. the <code>reload</code> command.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: System Shutdown/Reboot",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Use process monitoring to monitor the execution and command line parameters of binaries involved in shutting down or rebooting systems. Windows event logs may also designate activity associated with a shutdown/reboot, ex. Event ID 1074 and 6006. Unexpected or unauthorized commands from network cli on network devices may also be associated with shutdown/reboot, e.g. the <code>reload</code> command.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: System Shutdown/Reboot",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Boot or Logon Autostart Execution: Winlogon Helper DLL - T1547.004, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Boot or Logon Autostart Execution: Winlogon Helper DLL' are:\n\nMonitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values.   New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious.\n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Boot or Logon Autostart Execution: Winlogon Helper DLL - T1547.004, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Boot or Logon Autostart Execution: Winlogon Helper DLL' are:\n\nMonitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values.   New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious.\n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Application Window Discovery' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Application Window Discovery:\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Application Window Discovery' ",
      "answer": "Sure! Here are the detection options for MITRE Application Window Discovery:\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Process Injection: Process Doppelg\u00e4nging - T1055.013",
    "context": "",
    "output": "In order to detect Process Injection: Process Doppelg\u00e4nging (T1055.013), you can apply the following detection options:\nMonitor and analyze calls to <code>CreateTransaction</code>, <code>CreateFileTransacted</code>, <code>RollbackTransaction</code>, and other rarely used functions indicative of TxF activity. Process Doppelg\u00e4nging also invokes an outdated and undocumented implementation of the Windows process loader via calls to <code>NtCreateProcessEx</code> and <code>NtCreateThreadEx</code> as well as API calls used to modify memory within another process, such as <code>WriteProcessMemory</code>.  \n\nScan file objects reported during the PsSetCreateProcessNotifyRoutine,  which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access.  Also consider comparing file objects loaded in memory to the corresponding file on disk. \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Process Injection: Process Doppelg\u00e4nging - T1055.013",
      "answer": "In order to detect Process Injection: Process Doppelg\u00e4nging (T1055.013), you can apply the following detection options:\nMonitor and analyze calls to <code>CreateTransaction</code>, <code>CreateFileTransacted</code>, <code>RollbackTransaction</code>, and other rarely used functions indicative of TxF activity. Process Doppelg\u00e4nging also invokes an outdated and undocumented implementation of the Windows process loader via calls to <code>NtCreateProcessEx</code> and <code>NtCreateThreadEx</code> as well as API calls used to modify memory within another process, such as <code>WriteProcessMemory</code>.  \n\nScan file objects reported during the PsSetCreateProcessNotifyRoutine,  which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access.  Also consider comparing file objects loaded in memory to the corresponding file on disk. \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Abuse Elevation Control Mechanism: Sudo and Sudo Caching' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Abuse Elevation Control Mechanism: Sudo and Sudo Caching:\nOn Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Abuse Elevation Control Mechanism: Sudo and Sudo Caching' ",
      "answer": "Sure! Here are the detection options for MITRE Abuse Elevation Control Mechanism: Sudo and Sudo Caching:\nOn Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Indicator Removal: Network Share Connection Removal (T1070.005)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Indicator Removal: Network Share Connection Removal:\n\nNetwork share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of Windows Admin Shares. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Indicator Removal: Network Share Connection Removal (T1070.005)",
      "answer": "Certainly. Here are some possible detection methods for Indicator Removal: Network Share Connection Removal:\n\nNetwork share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of Windows Admin Shares. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Process Injection: ListPlanting' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Process Injection: ListPlanting:\nMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>FindWindow</code>, <code>FindWindowEx</code>, <code>EnumWindows</code>, <code>EnumChildWindows</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be abused for this technique. \n\nConsider monitoring for excessive use of <code>SendMessage</code> and/or <code>PostMessage</code> API functions with <code>LVM_SETITEMPOSITION</code> and/or <code>LVM_GETITEMPOSITION</code> arguments.\n\nAnalyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Process Injection: ListPlanting' ",
      "answer": "Sure! Here are the detection options for MITRE Process Injection: ListPlanting:\nMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>FindWindow</code>, <code>FindWindowEx</code>, <code>EnumWindows</code>, <code>EnumChildWindows</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be abused for this technique. \n\nConsider monitoring for excessive use of <code>SendMessage</code> and/or <code>PostMessage</code> API functions with <code>LVM_SETITEMPOSITION</code> and/or <code>LVM_GETITEMPOSITION</code> arguments.\n\nAnalyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: ?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: System Script Proxy Execution: SyncAppvPublishingServer",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: ",
      "answer": "A technique that can be detected with the MITRE detections listed above is: System Script Proxy Execution: SyncAppvPublishingServer",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Event Triggered Execution: PowerShell Profile - T1546.013, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Event Triggered Execution: PowerShell Profile' are:\n\nLocations where <code>profile.ps1</code> can be stored should be monitored for new profiles or modifications.  Example profile locations (user defaults as well as program-specific) include:\n\n* <code>$PsHome\\Profile.ps1</code>\n* <code>$PsHome\\Microsoft.{HostProgram}_profile.ps1</code>\n* <code>$Home\\\\\\My Documents\\PowerShell\\Profile.ps1</code>\n* <code>$Home\\\\\\My Documents\\PowerShell\\Microsoft.{HostProgram}_profile.ps1</code>\n\nMonitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules, and/or execution of unknown programs.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Event Triggered Execution: PowerShell Profile - T1546.013, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Event Triggered Execution: PowerShell Profile' are:\n\nLocations where <code>profile.ps1</code> can be stored should be monitored for new profiles or modifications.  Example profile locations (user defaults as well as program-specific) include:\n\n* <code>$PsHome\\Profile.ps1</code>\n* <code>$PsHome\\Microsoft.{HostProgram}_profile.ps1</code>\n* <code>$Home\\\\\\My Documents\\PowerShell\\Profile.ps1</code>\n* <code>$Home\\\\\\My Documents\\PowerShell\\Microsoft.{HostProgram}_profile.ps1</code>\n\nMonitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules, and/or execution of unknown programs.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Obfuscated Files or Information: Fileless Storage - T1027.011, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Obfuscated Files or Information: Fileless Storage' are:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Obfuscated Files or Information: Fileless Storage - T1027.011, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Obfuscated Files or Information: Fileless Storage' are:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Gather Victim Network Information: Domain Properties",
    "context": "",
    "output": "Here are some possible detections for 'Gather Victim Network Information: Domain Properties':\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Gather Victim Network Information: Domain Properties",
      "answer": "Here are some possible detections for 'Gather Victim Network Information: Domain Properties':\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Drive-by Compromise - T1189?",
    "context": "",
    "output": "In order to detect Drive-by Compromise (T1189), you can apply the following detection options:\nFirewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.\n\nNetwork intrusion detection systems, sometimes with SSL/TLS inspection, can be used to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.\n\nDetecting compromise based on the drive-by exploit from a legitimate website may be difficult. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Drive-by Compromise - T1189",
      "answer": "In order to detect Drive-by Compromise (T1189), you can apply the following detection options:\nFirewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.\n\nNetwork intrusion detection systems, sometimes with SSL/TLS inspection, can be used to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.\n\nDetecting compromise based on the drive-by exploit from a legitimate website may be difficult. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Custom archival methods can be very difficult to detect, since many of them use standard programming language concepts, such as bitwise operations.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Archive Collected Data: Archive via Custom Method",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Custom archival methods can be very difficult to detect, since many of them use standard programming language concepts, such as bitwise operations.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Archive Collected Data: Archive via Custom Method",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Adversary-in-the-Middle: DHCP Spoofing (T1557.003)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters. Additionally, monitor Windows logs for Event IDs (EIDs) 1341, 1342, 1020 and 1063, which specify that the IP allocations are low or have run out; these EIDs may indicate a denial of service attack.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Adversary-in-the-Middle: DHCP Spoofing (T1557.003)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters. Additionally, monitor Windows logs for Event IDs (EIDs) 1341, 1342, 1020 and 1063, which specify that the IP allocations are low or have run out; these EIDs may indicate a denial of service attack.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Abuse Elevation Control Mechanism: Setuid and Setgid (T1548.001)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor the file system for files that have the setuid or setgid bits set. Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Abuse Elevation Control Mechanism: Setuid and Setgid (T1548.001)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor the file system for files that have the setuid or setgid bits set. Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Account Manipulation - T1098, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Account Manipulation' are:\n\nCollect events that correlate with changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.\n\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.\n\nMonitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged Valid Accounts",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Account Manipulation - T1098, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Account Manipulation' are:\n\nCollect events that correlate with changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.\n\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.\n\nMonitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged Valid Accounts",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Impair Defenses: Disable or Modify System Firewall",
    "context": "",
    "output": "Here are some possible detections for 'Impair Defenses: Disable or Modify System Firewall':\n\nMonitor processes and command-line arguments to see if firewalls are disabled or modified. Monitor Registry edits to keys that manage firewalls.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Impair Defenses: Disable or Modify System Firewall",
      "answer": "Here are some possible detections for 'Impair Defenses: Disable or Modify System Firewall':\n\nMonitor processes and command-line arguments to see if firewalls are disabled or modified. Monitor Registry edits to keys that manage firewalls.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Exfiltration Over Alternative Protocol: Exfiltration Over Symmetric Encrypted Non-C2 Protocol?",
    "context": "",
    "output": "Here are some possible detections for 'Exfiltration Over Alternative Protocol: Exfiltration Over Symmetric Encrypted Non-C2 Protocol':\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. \n\nArtifacts and evidence of symmetric key exchange may be recoverable by analyzing network traffic or looking for hard-coded values within malware. If recovered, these keys can be used to decrypt network data from command and control channels.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Exfiltration Over Alternative Protocol: Exfiltration Over Symmetric Encrypted Non-C2 Protocol",
      "answer": "Here are some possible detections for 'Exfiltration Over Alternative Protocol: Exfiltration Over Symmetric Encrypted Non-C2 Protocol':\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. \n\nArtifacts and evidence of symmetric key exchange may be recoverable by analyzing network traffic or looking for hard-coded values within malware. If recovered, these keys can be used to decrypt network data from command and control channels.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Application Layer Protocol - T1071, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Application Layer Protocol' are:\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Application Layer Protocol - T1071, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Application Layer Protocol' are:\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Network Denial of Service: Direct Network Flood - T1498.001",
    "context": "",
    "output": "In order to detect Network Denial of Service: Direct Network Flood (T1498.001), you can apply the following detection options:\nDetection of a network flood can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a network flood event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Network Denial of Service: Direct Network Flood - T1498.001",
      "answer": "In order to detect Network Denial of Service: Direct Network Flood (T1498.001), you can apply the following detection options:\nDetection of a network flood can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a network flood event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Build Image on Host' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Build Image on Host:\nMonitor for unexpected Docker image build requests to the Docker daemon on hosts in the environment. Additionally monitor for subsequent network communication with anomalous IPs that have never been seen before in the environment that indicate the download of malicious code.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Build Image on Host' ",
      "answer": "Sure! Here are the detection options for MITRE Build Image on Host:\nMonitor for unexpected Docker image build requests to the Docker daemon on hosts in the environment. Additionally monitor for subsequent network communication with anomalous IPs that have never been seen before in the environment that indicate the download of malicious code.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Network Share Discovery (T1135)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Network Share Discovery (T1135)",
      "answer": "Detections for the following MITRE attack technique:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Create or Modify System Process: Launch Agent' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Create or Modify System Process: Launch Agent:\nMonitor Launch Agent creation through additional plist files and utilities such as Objective-See\u2019s  KnockKnock application. Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.\n\nEnsure Launch Agent's <code> ProgramArguments </code> key pointing to executables located in the <code>/tmp</code> or <code>/shared</code> folders are in alignment with enterprise policy. Ensure all Launch Agents with the <code>RunAtLoad</code> key set to <code>true</code> are in alignment with policy.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Create or Modify System Process: Launch Agent' ",
      "answer": "Sure! Here are the detection options for MITRE Create or Modify System Process: Launch Agent:\nMonitor Launch Agent creation through additional plist files and utilities such as Objective-See\u2019s  KnockKnock application. Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.\n\nEnsure Launch Agent's <code> ProgramArguments </code> key pointing to executables located in the <code>/tmp</code> or <code>/shared</code> folders are in alignment with enterprise policy. Ensure all Launch Agents with the <code>RunAtLoad</code> key set to <code>true</code> are in alignment with policy.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: Transfer Data to Cloud Account).",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Establish Accounts: Cloud Accounts",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: Transfer Data to Cloud Account).",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Establish Accounts: Cloud Accounts",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Search Open Websites/Domains: Social Media",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Search Open Websites/Domains: Social Media",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Windows Management Instrumentation - T1047",
    "context": "",
    "output": "In order to detect Windows Management Instrumentation (T1047), you can apply the following detection options:\nMonitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of \"wmic\" and detect commands that are used to perform remote behavior.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Windows Management Instrumentation - T1047",
      "answer": "In order to detect Windows Management Instrumentation (T1047), you can apply the following detection options:\nMonitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of \"wmic\" and detect commands that are used to perform remote behavior.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Stage Capabilities: Drive-by Target - T1608.004?",
    "context": "",
    "output": "In order to detect Stage Capabilities: Drive-by Target (T1608.004), you can apply the following detection options:\nIf infrastructure or patterns in the malicious web content utilized to deliver a Drive-by Compromise have been previously identified, internet scanning may uncover when an adversary has staged web content for use in a strategic web compromise.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as Drive-by Compromise or Exploitation for Client Execution.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Stage Capabilities: Drive-by Target - T1608.004",
      "answer": "In order to detect Stage Capabilities: Drive-by Target (T1608.004), you can apply the following detection options:\nIf infrastructure or patterns in the malicious web content utilized to deliver a Drive-by Compromise have been previously identified, internet scanning may uncover when an adversary has staged web content for use in a strategic web compromise.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as Drive-by Compromise or Exploitation for Client Execution.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Domain or Tenant Policy Modification (T1484)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Domain or Tenant Policy Modification:\n\nIt may be possible to detect domain policy modifications using Windows event logs. Group policy modifications, for example, may be logged under a variety of Windows event IDs for modifying, creating, undeleting, moving, and deleting directory service objects (Event ID 5136, 5137, 5138, 5139, 5141 respectively). Monitor for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes <code>Set federation settings on domain</code> and <code>Set domain authentication</code>. This may also include monitoring for Event ID 307 which can be correlated to relevant Event ID 510 with the same Instance ID for change details.\n\nConsider monitoring for commands/cmdlets and command-line arguments that may be leveraged to modify domain policy settings. Some domain policy modifications, such as changes to federation settings, are likely to be rare.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Domain or Tenant Policy Modification (T1484)",
      "answer": "Certainly. Here are some possible detection methods for Domain or Tenant Policy Modification:\n\nIt may be possible to detect domain policy modifications using Windows event logs. Group policy modifications, for example, may be logged under a variety of Windows event IDs for modifying, creating, undeleting, moving, and deleting directory service objects (Event ID 5136, 5137, 5138, 5139, 5141 respectively). Monitor for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes <code>Set federation settings on domain</code> and <code>Set domain authentication</code>. This may also include monitoring for Event ID 307 which can be correlated to relevant Event ID 510 with the same Instance ID for change details.\n\nConsider monitoring for commands/cmdlets and command-line arguments that may be leveraged to modify domain policy settings. Some domain policy modifications, such as changes to federation settings, are likely to be rare.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Use process monitoring to monitor the execution and command-line parameters of binaries that could be involved in data destruction activity, such as SDelete. Monitor for the creation of suspicious files as well as high unusual file modification activity. In particular, look for large quantities of file modifications in user directories and under <code>C:\\Windows\\System32\\</code>.\n\nIn cloud environments, the occurrence of anomalous high-volume deletion events, such as the <code>DeleteDBCluster</code> and <code>DeleteGlobalCluster</code> events in AWS, or a high quantity of data deletion events, such as <code>DeleteBucket</code>, within a short period of time may indicate suspicious activity.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Data Destruction",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Use process monitoring to monitor the execution and command-line parameters of binaries that could be involved in data destruction activity, such as SDelete. Monitor for the creation of suspicious files as well as high unusual file modification activity. In particular, look for large quantities of file modifications in user directories and under <code>C:\\Windows\\System32\\</code>.\n\nIn cloud environments, the occurrence of anomalous high-volume deletion events, such as the <code>DeleteDBCluster</code> and <code>DeleteGlobalCluster</code> events in AWS, or a high quantity of data deletion events, such as <code>DeleteBucket</code>, within a short period of time may indicate suspicious activity.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Data Destruction",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Create or Modify System Process: Systemd Service (T1543.002)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor file creation and modification events of Systemd service unit configuration files in the default directory locations for `root` & `user` level permissions. Suspicious processes or scripts spawned in this manner will have a parent process of \u2018systemd\u2019, a parent process ID of 1, and will usually execute as the `root` user. \n\nSuspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: `systemctl list-units -\u2013type=service \u2013all`. Analyze the contents of `.service` files present on the file system and ensure that they refer to legitimate, expected executables, and symbolic links.\n\nAuditing the execution and command-line arguments of the `systemctl` utility, as well related utilities such as `/usr/sbin/service` may reveal malicious systemd service execution.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Create or Modify System Process: Systemd Service (T1543.002)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor file creation and modification events of Systemd service unit configuration files in the default directory locations for `root` & `user` level permissions. Suspicious processes or scripts spawned in this manner will have a parent process of \u2018systemd\u2019, a parent process ID of 1, and will usually execute as the `root` user. \n\nSuspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: `systemctl list-units -\u2013type=service \u2013all`. Analyze the contents of `.service` files present on the file system and ensure that they refer to legitimate, expected executables, and symbolic links.\n\nAuditing the execution and command-line arguments of the `systemctl` utility, as well related utilities such as `/usr/sbin/service` may reveal malicious systemd service execution.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Password Policy Discovery",
    "context": "",
    "output": "Here are some possible detections for 'Password Policy Discovery':\n\nMonitor logs and processes for tools and command line arguments that may indicate they're being used for password policy discovery. Correlate that activity with other suspicious activity from the originating system to reduce potential false positives from valid user or administrator activity. Adversaries will likely attempt to find the password policy early in an operation and the activity is likely to happen with other Discovery activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Password Policy Discovery",
      "answer": "Here are some possible detections for 'Password Policy Discovery':\n\nMonitor logs and processes for tools and command line arguments that may indicate they're being used for password policy discovery. Correlate that activity with other suspicious activity from the originating system to reduce potential false positives from valid user or administrator activity. Adversaries will likely attempt to find the password policy early in an operation and the activity is likely to happen with other Discovery activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as ftp, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Specifically, for the finger utility on Windows and Linux systems, monitor command line or terminal execution for the finger command. Monitor network activity for TCP port 79, which is used by the finger utility, and Windows <code>netsh interface portproxy</code> modifications to well-known ports such as 80 and 443. Furthermore, monitor file system for the download/creation and execution of suspicious files, which may indicate adversary-downloaded payloads. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Ingress Tool Transfer",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as ftp, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Specifically, for the finger utility on Windows and Linux systems, monitor command line or terminal execution for the finger command. Monitor network activity for TCP port 79, which is used by the finger utility, and Windows <code>netsh interface portproxy</code> modifications to well-known ports such as 80 and 443. Furthermore, monitor file system for the download/creation and execution of suspicious files, which may indicate adversary-downloaded payloads. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Ingress Tool Transfer",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Search Open Websites/Domains: Search Engines - T1593.002, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Search Open Websites/Domains: Search Engines' are:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Search Open Websites/Domains: Search Engines - T1593.002, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Search Open Websites/Domains: Search Engines' are:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Acquire Infrastructure: Malvertising?",
    "context": "",
    "output": "Here are some possible detections for 'Acquire Infrastructure: Malvertising':\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Acquire Infrastructure: Malvertising",
      "answer": "Here are some possible detections for 'Acquire Infrastructure: Malvertising':\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Event Triggered Execution: Windows Management Instrumentation Event Subscription - T1546.003?",
    "context": "",
    "output": "In order to detect Event Triggered Execution: Windows Management Instrumentation Event Subscription (T1546.003), you can apply the following detection options:\nMonitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence. Monitor for the creation of new WMI <code>EventFilter</code>, <code>EventConsumer</code>, and <code>FilterToConsumerBinding</code> events. Event ID 5861 is logged on Windows 10 systems when new <code>EventFilterToConsumerBinding</code> events are created.\n\nMonitor processes and command-line arguments that can be used to register WMI persistence, such as the <code> Register-WmiEvent</code> PowerShell cmdlet, as well as those that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Event Triggered Execution: Windows Management Instrumentation Event Subscription - T1546.003",
      "answer": "In order to detect Event Triggered Execution: Windows Management Instrumentation Event Subscription (T1546.003), you can apply the following detection options:\nMonitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence. Monitor for the creation of new WMI <code>EventFilter</code>, <code>EventConsumer</code>, and <code>FilterToConsumerBinding</code> events. Event ID 5861 is logged on Windows 10 systems when new <code>EventFilterToConsumerBinding</code> events are created.\n\nMonitor processes and command-line arguments that can be used to register WMI persistence, such as the <code> Register-WmiEvent</code> PowerShell cmdlet, as well as those that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Data from Configuration Repository' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Data from Configuration Repository:\nIdentify network traffic sent or received by untrusted hosts or networks that solicits and obtains the configuration information of the queried device.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Data from Configuration Repository' ",
      "answer": "Sure! Here are the detection options for MITRE Data from Configuration Repository:\nIdentify network traffic sent or received by untrusted hosts or networks that solicits and obtains the configuration information of the queried device.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Indicator Removal: Clear Network Connection History and Configurations (T1070.007)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Indicator Removal: Clear Network Connection History and Configurations (T1070.007)",
      "answer": "Detections for the following MITRE attack technique:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Valid Accounts: Cloud Accounts (T1078.004)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Valid Accounts: Cloud Accounts (T1078.004)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Virtualization/Sandbox Evasion: Time Based Evasion",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Virtualization/Sandbox Evasion: Time Based Evasion",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: System Binary Proxy Execution: InstallUtil",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: System Binary Proxy Execution: InstallUtil",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Once adversaries leverage the abused web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Compromise Infrastructure: Web Services",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Once adversaries leverage the abused web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Compromise Infrastructure: Web Services",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor for calls to the `SetWindowsHookEx` and `SetWinEventHook` functions, which install a hook procedure. Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools or by programmatically examining internal kernel structures.\n\nRootkits detectors can also be used to monitor for various types of hooking activity.\n\nVerify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. Also consider taking snapshots of newly started processes to compare the in-memory IAT to the real addresses of the referenced functions.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Input Capture: Credential API Hooking",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor for calls to the `SetWindowsHookEx` and `SetWinEventHook` functions, which install a hook procedure. Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools or by programmatically examining internal kernel structures.\n\nRootkits detectors can also be used to monitor for various types of hooking activity.\n\nVerify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. Also consider taking snapshots of newly started processes to compare the in-memory IAT to the real addresses of the referenced functions.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Input Capture: Credential API Hooking",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Obtain Capabilities: Code Signing Certificates - T1588.003",
    "context": "",
    "output": "In order to detect Obtain Capabilities: Code Signing Certificates (T1588.003), you can apply the following detection options:\nConsider analyzing code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, common name, and certificate authority. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in procuring code signing certificates.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as Code Signing or Install Root Certificate.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Obtain Capabilities: Code Signing Certificates - T1588.003",
      "answer": "In order to detect Obtain Capabilities: Code Signing Certificates (T1588.003), you can apply the following detection options:\nConsider analyzing code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, common name, and certificate authority. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in procuring code signing certificates.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as Code Signing or Install Root Certificate.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Exfiltration Over Physical Medium: Exfiltration over USB",
    "context": "",
    "output": "Here are some possible detections for 'Exfiltration Over Physical Medium: Exfiltration over USB':\n\nMonitor file access on removable media. Detect processes that execute when removable media are mounted.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Exfiltration Over Physical Medium: Exfiltration over USB",
      "answer": "Here are some possible detections for 'Exfiltration Over Physical Medium: Exfiltration over USB':\n\nMonitor file access on removable media. Detect processes that execute when removable media are mounted.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Boot or Logon Autostart Execution: Active Setup - T1547.014?",
    "context": "",
    "output": "In order to detect Boot or Logon Autostart Execution: Active Setup (T1547.014), you can apply the following detection options:\nMonitor Registry key additions and/or modifications to <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code>.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders. Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Boot or Logon Autostart Execution: Active Setup - T1547.014",
      "answer": "In order to detect Boot or Logon Autostart Execution: Active Setup (T1547.014), you can apply the following detection options:\nMonitor Registry key additions and/or modifications to <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code>.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders. Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: System Network Configuration Discovery - T1016, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'System Network Configuration Discovery' are:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, {{LinkById|T1059.008} commands may also be used to gather system and network information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use  commands being run by non-standard users from non-standard locations.  Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: System Network Configuration Discovery - T1016, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'System Network Configuration Discovery' are:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, {{LinkById|T1059.008} commands may also be used to gather system and network information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use  commands being run by non-standard users from non-standard locations.  Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Modify Authentication Process: Multi-Factor Authentication?",
    "context": "",
    "output": "Here are some possible detections for 'Modify Authentication Process: Multi-Factor Authentication':\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Modify Authentication Process: Multi-Factor Authentication",
      "answer": "Here are some possible detections for 'Modify Authentication Process: Multi-Factor Authentication':\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Forge Web Credentials' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Forge Web Credentials:\nMonitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Forge Web Credentials' ",
      "answer": "Sure! Here are the detection options for MITRE Forge Web Credentials:\nMonitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor Registry modification and additions for services that may start on safe mode. For example, a program can be forced to start on safe mode boot by adding a <code>\\*</code> in front of the \"Startup\" value name: <code>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\\"\\*Startup\"=\"{Path}\"</code> or by adding a key to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Minimal</code>.\n\nMonitor execution of processes and commands associated with making configuration changes to boot settings, such as <code>bcdedit.exe</code> and <code>bootcfg.exe</code>.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Impair Defenses: Safe Mode Boot",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor Registry modification and additions for services that may start on safe mode. For example, a program can be forced to start on safe mode boot by adding a <code>\\*</code> in front of the \"Startup\" value name: <code>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\\"\\*Startup\"=\"{Path}\"</code> or by adding a key to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Minimal</code>.\n\nMonitor execution of processes and commands associated with making configuration changes to boot settings, such as <code>bcdedit.exe</code> and <code>bootcfg.exe</code>.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Impair Defenses: Safe Mode Boot",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: OS Credential Dumping: LSA Secrets (T1003.004)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: OS Credential Dumping: LSA Secrets (T1003.004)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Command and Scripting Interpreter: JavaScript (T1059.007)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts, or loading of modules associated with scripting languages (ex: JScript.dll). Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source.\n\nMonitor for execution of JXA through <code>osascript</code> and usage of <code>OSAScript</code> API that may be related to other suspicious behavior occurring on the system.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If scripting is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Command and Scripting Interpreter: JavaScript (T1059.007)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts, or loading of modules associated with scripting languages (ex: JScript.dll). Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source.\n\nMonitor for execution of JXA through <code>osascript</code> and usage of <code>OSAScript</code> API that may be related to other suspicious behavior occurring on the system.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If scripting is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Data from Configuration Repository: SNMP (MIB Dump) - T1602.001, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Data from Configuration Repository: SNMP (MIB Dump)' are:\n\nIdentify network traffic sent or received by untrusted hosts or networks that expose MIB content or use unauthorized protocols.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Data from Configuration Repository: SNMP (MIB Dump) - T1602.001, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Data from Configuration Repository: SNMP (MIB Dump)' are:\n\nIdentify network traffic sent or received by untrusted hosts or networks that expose MIB content or use unauthorized protocols.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Obfuscated Files or Information - T1027",
    "context": "",
    "output": "In order to detect Obfuscated Files or Information (T1027), you can apply the following detection options:\nDetection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). \n\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads.    \n\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. \n\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Obfuscated Files or Information - T1027",
      "answer": "In order to detect Obfuscated Files or Information (T1027), you can apply the following detection options:\nDetection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). \n\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads.    \n\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. \n\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Scheduled Task/Job (T1053)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Scheduled Task/Job (T1053)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Modify Authentication Process: Reversible Encryption - T1556.005?",
    "context": "",
    "output": "In order to detect Modify Authentication Process: Reversible Encryption (T1556.005), you can apply the following detection options:\nMonitor property changes in Group Policy: <code>Computer Configuration\\Windows Settings\\Security Settings\\Account Policies\\Password Policy\\Store passwords using reversible encryption</code>. By default, the property should be set to Disabled.\n\nMonitor command-line usage for <code>-AllowReversiblePasswordEncryption $true</code> or other actions that could be related to malicious tampering of user settings (i.e. Group Policy Modification). Furthermore, consider monitoring and/or blocking suspicious execution of Active Directory PowerShell modules, such as <code>Set-ADUser</code> and <code>Set-ADAccountControl</code>, that change account configurations. \n\nMonitor Fine-Grained Password Policies and regularly audit user accounts and group settings.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Modify Authentication Process: Reversible Encryption - T1556.005",
      "answer": "In order to detect Modify Authentication Process: Reversible Encryption (T1556.005), you can apply the following detection options:\nMonitor property changes in Group Policy: <code>Computer Configuration\\Windows Settings\\Security Settings\\Account Policies\\Password Policy\\Store passwords using reversible encryption</code>. By default, the property should be set to Disabled.\n\nMonitor command-line usage for <code>-AllowReversiblePasswordEncryption $true</code> or other actions that could be related to malicious tampering of user settings (i.e. Group Policy Modification). Furthermore, consider monitoring and/or blocking suspicious execution of Active Directory PowerShell modules, such as <code>Set-ADUser</code> and <code>Set-ADAccountControl</code>, that change account configurations. \n\nMonitor Fine-Grained Password Policies and regularly audit user accounts and group settings.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Steal Web Session Cookie (T1539)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor for attempts to access files and repositories on a local system that are used to store browser session cookies. Monitor for attempts by programs to inject into or dump browser process memory.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Steal Web Session Cookie (T1539)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor for attempts to access files and repositories on a local system that are used to store browser session cookies. Monitor for attempts by programs to inject into or dump browser process memory.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Browser Information Discovery' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Browser Information Discovery:\nMonitor processes and command-line arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as Windows Management Instrumentation and PowerShell.\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Browser Information Discovery' ",
      "answer": "Sure! Here are the detection options for MITRE Browser Information Discovery:\nMonitor processes and command-line arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as Windows Management Instrumentation and PowerShell.\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: System Services: Service Execution (T1569.002)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for System Services: Service Execution:\n\nChanges to service Registry entries and command line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool PsExec.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: System Services: Service Execution (T1569.002)",
      "answer": "Certainly. Here are some possible detection methods for System Services: Service Execution:\n\nChanges to service Registry entries and command line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool PsExec.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Hide Artifacts: NTFS File Attributes (T1564.004)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nForensic techniques exist to identify information stored in NTFS EA.  Monitor calls to the <code>ZwSetEaFile</code> and <code>ZwQueryEaFile</code> Windows API functions as well as binaries used to interact with EA,   and consider regularly scanning for the presence of modified information. \n\nThere are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: <code>file.ext:ads.ext</code>) is commonly associated with ADSs.    For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.\n\nThe Streams tool of Sysinternals can be used to uncover files with ADSs. The <code>dir /r</code> command can also be used to display ADSs.  Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a <code>-stream</code> parameter to interact with ADSs.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Hide Artifacts: NTFS File Attributes (T1564.004)",
      "answer": "Detections for the following MITRE attack technique:\n\nForensic techniques exist to identify information stored in NTFS EA.  Monitor calls to the <code>ZwSetEaFile</code> and <code>ZwQueryEaFile</code> Windows API functions as well as binaries used to interact with EA,   and consider regularly scanning for the presence of modified information. \n\nThere are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: <code>file.ext:ads.ext</code>) is commonly associated with ADSs.    For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.\n\nThe Streams tool of Sysinternals can be used to uncover files with ADSs. The <code>dir /r</code> command can also be used to display ADSs.  Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a <code>-stream</code> parameter to interact with ADSs.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Use Alternate Authentication Material: Application Access Token",
    "context": "",
    "output": "Here are some possible detections for 'Use Alternate Authentication Material: Application Access Token':\n\nMonitor access token activity for abnormal use and permissions granted to unusual or suspicious applications and APIs. Additionally, administrators should review logs for calls to the AWS Security Token Service (STS) and usage of GCP service accounts in order to identify anomalous actions.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Use Alternate Authentication Material: Application Access Token",
      "answer": "Here are some possible detections for 'Use Alternate Authentication Material: Application Access Token':\n\nMonitor access token activity for abnormal use and permissions granted to unusual or suspicious applications and APIs. Additionally, administrators should review logs for calls to the AWS Security Token Service (STS) and usage of GCP service accounts in order to identify anomalous actions.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Inter-Process Communication: Component Object Model",
    "context": "",
    "output": "Here are some possible detections for 'Inter-Process Communication: Component Object Model':\n\nMonitor for COM objects loading DLLs and other modules not typically associated with the application. Enumeration of COM objects, via Query Registry or PowerShell, may also proceed malicious use.\n\nMonitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Inter-Process Communication: Component Object Model",
      "answer": "Here are some possible detections for 'Inter-Process Communication: Component Object Model':\n\nMonitor for COM objects loading DLLs and other modules not typically associated with the application. Enumeration of COM objects, via Query Registry or PowerShell, may also proceed malicious use.\n\nMonitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Develop Capabilities - T1587, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Develop Capabilities' are:\n\nConsider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.\n\nConsider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Develop Capabilities - T1587, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Develop Capabilities' are:\n\nConsider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.\n\nConsider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Search Open Technical Databases: WHOIS (T1596.002)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Search Open Technical Databases: WHOIS (T1596.002)",
      "answer": "Detections for the following MITRE attack technique:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Create or Modify System Process: Container Service - T1543.005, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Create or Modify System Process: Container Service' are:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Create or Modify System Process: Container Service - T1543.005, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Create or Modify System Process: Container Service' are:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor processes and command-line arguments for actions that could be taken to gather local email files. Monitor for unusual processes accessing local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Email Collection: Local Email Collection",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor processes and command-line arguments for actions that could be taken to gather local email files. Monitor for unusual processes accessing local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Email Collection: Local Email Collection",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Office Application Startup: Office Test",
    "context": "",
    "output": "Here are some possible detections for 'Office Application Startup: Office Test':\n\nMonitor for the creation of the Office Test Registry key. Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.\n\nConsider monitoring Office processes for anomalous DLL loads.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Office Application Startup: Office Test",
      "answer": "Here are some possible detections for 'Office Application Startup: Office Test':\n\nMonitor for the creation of the Office Test Registry key. Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.\n\nConsider monitoring Office processes for anomalous DLL loads.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: OS Credential Dumping - T1003?",
    "context": "",
    "output": "In order to detect OS Credential Dumping (T1003), you can apply the following detection options:\n### Windows\nMonitor for unexpected processes interacting with lsass.exe. Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity.\n\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,  which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.    Note: Domain controllers may not log replication requests originating from the default domain controller account. . Also monitor for network protocols    and other replication requests  from IPs not associated with known domain controllers. \n\n### Linux\nTo obtain the passwords and hashes stored in memory, processes must open a maps file in the `/proc` filesystem for the process being analyzed. This file is stored under the path `/proc/<pid>/maps`, where the `<pid>` directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: OS Credential Dumping - T1003",
      "answer": "In order to detect OS Credential Dumping (T1003), you can apply the following detection options:\n### Windows\nMonitor for unexpected processes interacting with lsass.exe. Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity.\n\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,  which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.    Note: Domain controllers may not log replication requests originating from the default domain controller account. . Also monitor for network protocols    and other replication requests  from IPs not associated with known domain controllers. \n\n### Linux\nTo obtain the passwords and hashes stored in memory, processes must open a maps file in the `/proc` filesystem for the process being analyzed. This file is stored under the path `/proc/<pid>/maps`, where the `<pid>` directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Data from Information Repositories: Code Repositories (T1213.003)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Data from Information Repositories: Code Repositories:\n\nMonitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Data from Information Repositories: Code Repositories (T1213.003)",
      "answer": "Certainly. Here are some possible detection methods for Data from Information Repositories: Code Repositories:\n\nMonitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Web Service: Dead Drop Resolver (T1102.001)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nHost data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. User behavior monitoring may help to detect abnormal patterns of activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Web Service: Dead Drop Resolver (T1102.001)",
      "answer": "Detections for the following MITRE attack technique:\n\nHost data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. User behavior monitoring may help to detect abnormal patterns of activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Activity and account logs for the cloud services can also be monitored for suspicious commands that are anomalous compared to a baseline of normal activity.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Permission Groups Discovery: Cloud Groups",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Activity and account logs for the cloud services can also be monitored for suspicious commands that are anomalous compared to a baseline of normal activity.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Permission Groups Discovery: Cloud Groups",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior.  Monitor processes created and actions taken by the WinRM process or a WinRM invoked script to correlate it with other related events. Also monitor for remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS).?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Remote Services: Windows Remote Management",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior.  Monitor processes created and actions taken by the WinRM process or a WinRM invoked script to correlate it with other related events. Also monitor for remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS).",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Remote Services: Windows Remote Management",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Debugger Evasion (T1622)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Debugger Evasion:\n\nDebugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious Native API function calls as well as processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.\n\nMonitor debugger logs for signs of abnormal and potentially malicious activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Debugger Evasion (T1622)",
      "answer": "Certainly. Here are some possible detection methods for Debugger Evasion:\n\nDebugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious Native API function calls as well as processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.\n\nMonitor debugger logs for signs of abnormal and potentially malicious activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Identify web browser files that contain credentials such as Google Chrome\u2019s Login Data database file: <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code>. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser. Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Credentials from Password Stores: Credentials from Web Browsers",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Identify web browser files that contain credentials such as Google Chrome\u2019s Login Data database file: <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code>. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser. Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Credentials from Password Stores: Credentials from Web Browsers",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Process Injection: Extra Window Memory Injection",
    "context": "",
    "output": "Here are some possible detections for 'Process Injection: Extra Window Memory Injection':\n\nMonitor for API calls related to enumerating and manipulating EWM such as GetWindowLong  and SetWindowLong . Malware associated with this technique have also used SendNotifyMessage  to trigger the associated window procedure and eventual malicious injection.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Process Injection: Extra Window Memory Injection",
      "answer": "Here are some possible detections for 'Process Injection: Extra Window Memory Injection':\n\nMonitor for API calls related to enumerating and manipulating EWM such as GetWindowLong  and SetWindowLong . Malware associated with this technique have also used SendNotifyMessage  to trigger the associated window procedure and eventual malicious injection.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: System Binary Proxy Execution: Regsvcs/Regasm",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: System Binary Proxy Execution: Regsvcs/Regasm",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Boot or Logon Initialization Scripts: Network Logon Script - T1037.003?",
    "context": "",
    "output": "In order to detect Boot or Logon Initialization Scripts: Network Logon Script (T1037.003), you can apply the following detection options:\nMonitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Boot or Logon Initialization Scripts: Network Logon Script - T1037.003",
      "answer": "In order to detect Boot or Logon Initialization Scripts: Network Logon Script (T1037.003), you can apply the following detection options:\nMonitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Command and Scripting Interpreter: AppleScript (T1059.002)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor for execution of AppleScript through <code>osascript</code> and usage of the <code>NSAppleScript</code> and <code>OSAScript</code> APIs that may be related to other suspicious behavior occurring on the system. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Command and Scripting Interpreter: AppleScript (T1059.002)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor for execution of AppleScript through <code>osascript</code> and usage of the <code>NSAppleScript</code> and <code>OSAScript</code> APIs that may be related to other suspicious behavior occurring on the system. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Input Capture: GUI Input Capture' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Input Capture: GUI Input Capture:\nMonitor process execution for unusual programs as well as malicious instances of Command and Scripting Interpreter that could be used to prompt users for credentials. For example, command/script history including abnormal parameters (such as requests for credentials and/or strings related to creating password prompts) may be malicious. \n\nInspect and scrutinize input prompts for indicators of illegitimacy, such as non-traditional banners, text, timing, and/or sources.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Input Capture: GUI Input Capture' ",
      "answer": "Sure! Here are the detection options for MITRE Input Capture: GUI Input Capture:\nMonitor process execution for unusual programs as well as malicious instances of Command and Scripting Interpreter that could be used to prompt users for credentials. For example, command/script history including abnormal parameters (such as requests for credentials and/or strings related to creating password prompts) may be malicious. \n\nInspect and scrutinize input prompts for indicators of illegitimacy, such as non-traditional banners, text, timing, and/or sources.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Permission Groups Discovery: Domain Groups' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Permission Groups Discovery: Domain Groups:\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Permission Groups Discovery: Domain Groups' ",
      "answer": "Sure! Here are the detection options for MITRE Permission Groups Discovery: Domain Groups:\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Phishing: Spearphishing Link' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Phishing: Spearphishing Link:\nURL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites as well as links redirecting to adversary infrastructure based by upon suspicious OAuth patterns with unusual TLDs.. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.\n\nBecause this technique usually involves user interaction on the endpoint, many of the possible detections take place once User Execution occurs.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Phishing: Spearphishing Link' ",
      "answer": "Sure! Here are the detection options for MITRE Phishing: Spearphishing Link:\nURL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites as well as links redirecting to adversary infrastructure based by upon suspicious OAuth patterns with unusual TLDs.. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.\n\nBecause this technique usually involves user interaction on the endpoint, many of the possible detections take place once User Execution occurs.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Weaken Encryption",
    "context": "",
    "output": "Here are some possible detections for 'Weaken Encryption':\n\nThere is no documented method for defenders to directly identify behaviors that weaken encryption. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image. Some detection methods require vendor support to aid in investigation.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Weaken Encryption",
      "answer": "Here are some possible detections for 'Weaken Encryption':\n\nThere is no documented method for defenders to directly identify behaviors that weaken encryption. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image. Some detection methods require vendor support to aid in investigation.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Hijack Execution Flow: DLL Side-Loading - T1574.002?",
    "context": "",
    "output": "In order to detect Hijack Execution Flow: DLL Side-Loading (T1574.002), you can apply the following detection options:\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs. Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Hijack Execution Flow: DLL Side-Loading - T1574.002",
      "answer": "In order to detect Hijack Execution Flow: DLL Side-Loading (T1574.002), you can apply the following detection options:\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs. Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Scheduled Task/Job: Systemd Timers' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Scheduled Task/Job: Systemd Timers:\nSystemd timer unit files may be detected by auditing file creation and modification events within the <code>/etc/systemd/system</code>, <code>/usr/lib/systemd/system/</code>, and <code>~/.config/systemd/user/</code> directories, as well as associated symbolic links. Suspicious processes or scripts spawned in this manner will have a parent process of \u2018systemd\u2019, a parent process ID of 1, and will usually execute as the \u2018root\u2019 user.\n\nSuspicious systemd timers can also be identified by comparing results against a trusted system baseline. Malicious systemd timers may be detected by using the systemctl utility to examine system wide timers: <code>systemctl list-timers \u2013all</code>. Analyze the contents of corresponding <code>.service</code> files present on the file system and ensure that they refer to legitimate, expected executables.\n\nAudit the execution and command-line arguments of the 'systemd-run' utility as it may be used to create timers.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Scheduled Task/Job: Systemd Timers' ",
      "answer": "Sure! Here are the detection options for MITRE Scheduled Task/Job: Systemd Timers:\nSystemd timer unit files may be detected by auditing file creation and modification events within the <code>/etc/systemd/system</code>, <code>/usr/lib/systemd/system/</code>, and <code>~/.config/systemd/user/</code> directories, as well as associated symbolic links. Suspicious processes or scripts spawned in this manner will have a parent process of \u2018systemd\u2019, a parent process ID of 1, and will usually execute as the \u2018root\u2019 user.\n\nSuspicious systemd timers can also be identified by comparing results against a trusted system baseline. Malicious systemd timers may be detected by using the systemctl utility to examine system wide timers: <code>systemctl list-timers \u2013all</code>. Analyze the contents of corresponding <code>.service</code> files present on the file system and ensure that they refer to legitimate, expected executables.\n\nAudit the execution and command-line arguments of the 'systemd-run' utility as it may be used to create timers.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Peripheral Device Discovery' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Peripheral Device Discovery:\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Peripheral Device Discovery' ",
      "answer": "Sure! Here are the detection options for MITRE Peripheral Device Discovery:\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Acquire Infrastructure: Domains (T1583.001)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Acquire Infrastructure: Domains:\n\nDomain registration information is, by design, captured in public registration logs. Consider use of services that may aid in tracking of newly acquired domains, such as WHOIS databases and/or passive DNS. In some cases it may be possible to pivot on known pieces of domain registration information to uncover other infrastructure purchased by the adversary. Consider monitoring for domains created with a similar structure to your own, including under a different TLD. Though various tools and services exist to track, query, and monitor domain name registration information, tracking across multiple DNS infrastructures can require multiple tools/services or more advanced analytics.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Acquire Infrastructure: Domains (T1583.001)",
      "answer": "Certainly. Here are some possible detection methods for Acquire Infrastructure: Domains:\n\nDomain registration information is, by design, captured in public registration logs. Consider use of services that may aid in tracking of newly acquired domains, such as WHOIS databases and/or passive DNS. In some cases it may be possible to pivot on known pieces of domain registration information to uncover other infrastructure purchased by the adversary. Consider monitoring for domains created with a similar structure to your own, including under a different TLD. Though various tools and services exist to track, query, and monitor domain name registration information, tracking across multiple DNS infrastructures can require multiple tools/services or more advanced analytics.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Cloud Administration Command' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Cloud Administration Command:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Cloud Administration Command' ",
      "answer": "Sure! Here are the detection options for MITRE Cloud Administration Command:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Event Triggered Execution: Image File Execution Options Injection - T1546.012",
    "context": "",
    "output": "In order to detect Event Triggered Execution: Image File Execution Options Injection (T1546.012), you can apply the following detection options:\nMonitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as <code>DEBUG_PROCESS</code> and <code>DEBUG_ONLY_THIS_PROCESS</code>. \n\nMonitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Event Triggered Execution: Image File Execution Options Injection - T1546.012",
      "answer": "In order to detect Event Triggered Execution: Image File Execution Options Injection (T1546.012), you can apply the following detection options:\nMonitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as <code>DEBUG_PROCESS</code> and <code>DEBUG_ONLY_THIS_PROCESS</code>. \n\nMonitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Inter-Process Communication: XPC Services' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Inter-Process Communication: XPC Services:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Inter-Process Communication: XPC Services' ",
      "answer": "Sure! Here are the detection options for MITRE Inter-Process Communication: XPC Services:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Process Injection: Dynamic-link Library Injection (T1055.001)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.\n\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Process Injection: Dynamic-link Library Injection (T1055.001)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.\n\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Process Injection: Process Hollowing - T1055.012?",
    "context": "",
    "output": "In order to detect Process Injection: Process Hollowing (T1055.012), you can apply the following detection options:\nMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.\n\nProcessing hollowing commonly involves spawning an otherwise benign victim process. Consider correlating detections of processes created in a suspended state (ex: through API flags or process\u2019 thread metadata) with other malicious activity such as attempts to modify a process' memory, especially by its parent process, or other abnormal process behavior.\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Process Injection: Process Hollowing - T1055.012",
      "answer": "In order to detect Process Injection: Process Hollowing (T1055.012), you can apply the following detection options:\nMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.\n\nProcessing hollowing commonly involves spawning an otherwise benign victim process. Consider correlating detections of processes created in a suspended state (ex: through API flags or process\u2019 thread metadata) with other malicious activity such as attempts to modify a process' memory, especially by its parent process, or other abnormal process behavior.\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as RegCreateKeyEx and RegSetValueEx.  \n\nTools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location.  \n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Event Triggered Execution: AppCert DLLs",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as RegCreateKeyEx and RegSetValueEx.  \n\nTools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location.  \n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Event Triggered Execution: AppCert DLLs",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Establish Accounts: Email Accounts - T1585.002, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Establish Accounts: Email Accounts' are:\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Phishing).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Establish Accounts: Email Accounts - T1585.002, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Establish Accounts: Email Accounts' are:\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Phishing).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Phishing for Information - T1598, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Phishing for Information' are:\n\nDepending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.\n\nWhen it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.\n\nMonitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Phishing for Information - T1598, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Phishing for Information' are:\n\nDepending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.\n\nWhen it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.\n\nMonitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Hijack Execution Flow: Dynamic Linker Hijacking (T1574.006)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor for changes to environment variables and files associated with loading shared libraries such as <code>LD_PRELOAD</code> and <code>DYLD_INSERT_LIBRARIES</code>, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Hijack Execution Flow: Dynamic Linker Hijacking (T1574.006)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor for changes to environment variables and files associated with loading shared libraries such as <code>LD_PRELOAD</code> and <code>DYLD_INSERT_LIBRARIES</code>, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor process execution from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows.  If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service.  Several events will then be logged on scheduled task activity, including: \n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. \n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.\n\nIn Linux and macOS environments, monitor scheduled task creation using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \n\nReview all jobs using the <code>atq</code> command and ensure IP addresses stored in the <code>SSH_CONNECTION</code> and <code>SSH_CLIENT</code> variables, machines that created the jobs, are trusted hosts. All at jobs are stored in <code>/var/spool/cron/atjobs/</code>.\n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Scheduled Task/Job: At",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor process execution from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows.  If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service.  Several events will then be logged on scheduled task activity, including: \n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. \n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.\n\nIn Linux and macOS environments, monitor scheduled task creation using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \n\nReview all jobs using the <code>atq</code> command and ensure IP addresses stored in the <code>SSH_CONNECTION</code> and <code>SSH_CLIENT</code> variables, machines that created the jobs, are trusted hosts. All at jobs are stored in <code>/var/spool/cron/atjobs/</code>.\n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Scheduled Task/Job: At",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Command and Scripting Interpreter - T1059, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Command and Scripting Interpreter' are:\n\nCommand-line and scripting activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.\n\nIf scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Command and Scripting Interpreter - T1059, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Command and Scripting Interpreter' are:\n\nCommand-line and scripting activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.\n\nIf scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Impersonation - T1656, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Impersonation' are:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Impersonation - T1656, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Impersonation' are:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Acquire Infrastructure: Web Services - T1583.006",
    "context": "",
    "output": "In order to detect Acquire Infrastructure: Web Services (T1583.006), you can apply the following detection options:\nOnce adversaries leverage the web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Acquire Infrastructure: Web Services - T1583.006",
      "answer": "In order to detect Acquire Infrastructure: Web Services (T1583.006), you can apply the following detection options:\nOnce adversaries leverage the web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Develop Capabilities: Exploits - T1587.004?",
    "context": "",
    "output": "In order to detect Develop Capabilities: Exploits (T1587.004), you can apply the following detection options:\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the use of exploits (i.e. Exploit Public-Facing Application, Exploitation for Client Execution, Exploitation for Privilege Escalation, Exploitation for Defense Evasion, Exploitation for Credential Access, Exploitation of Remote Services, and Application or System Exploitation).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Develop Capabilities: Exploits - T1587.004",
      "answer": "In order to detect Develop Capabilities: Exploits (T1587.004), you can apply the following detection options:\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the use of exploits (i.e. Exploit Public-Facing Application, Exploitation for Client Execution, Exploitation for Privilege Escalation, Exploitation for Defense Evasion, Exploitation for Credential Access, Exploitation of Remote Services, and Application or System Exploitation).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Unsecured Credentials: Chat Messages' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Unsecured Credentials: Chat Messages:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Unsecured Credentials: Chat Messages' ",
      "answer": "Sure! Here are the detection options for MITRE Unsecured Credentials: Chat Messages:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Exfiltration Over Web Service: Exfiltration Over Webhook (T1567.004)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Exfiltration Over Web Service: Exfiltration Over Webhook:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Exfiltration Over Web Service: Exfiltration Over Webhook (T1567.004)",
      "answer": "Certainly. Here are some possible detection methods for Exfiltration Over Web Service: Exfiltration Over Webhook:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Server Software Component: Transport Agent (T1505.002)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nConsider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Server Software Component: Transport Agent (T1505.002)",
      "answer": "Detections for the following MITRE attack technique:\n\nConsider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Compromise Accounts?",
    "context": "",
    "output": "Here are some possible detections for 'Compromise Accounts':\n\nConsider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Phishing).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Compromise Accounts",
      "answer": "Here are some possible detections for 'Compromise Accounts':\n\nConsider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Phishing).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Network Denial of Service (T1498)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nDetection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an Network DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Network Denial of Service (T1498)",
      "answer": "Detections for the following MITRE attack technique:\n\nDetection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an Network DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Pre-OS Boot: System Firmware",
    "context": "",
    "output": "Here are some possible detections for 'Pre-OS Boot: System Firmware':\n\nSystem firmware manipulation may be detected.  Dump and inspect BIOS images on vulnerable systems and compare against known good images.  Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.\n\nLikewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Pre-OS Boot: System Firmware",
      "answer": "Here are some possible detections for 'Pre-OS Boot: System Firmware':\n\nSystem firmware manipulation may be detected.  Dump and inspect BIOS images on vulnerable systems and compare against known good images.  Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.\n\nLikewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Gather Victim Identity Information: Credentials (T1589.001)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Gather Victim Identity Information: Credentials (T1589.001)",
      "answer": "Detections for the following MITRE attack technique:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Hijack Execution Flow: AppDomainManager",
    "context": "",
    "output": "Here are some possible detections for 'Hijack Execution Flow: AppDomainManager':\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Hijack Execution Flow: AppDomainManager",
      "answer": "Here are some possible detections for 'Hijack Execution Flow: AppDomainManager':\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Domain Trust Discovery",
    "context": "",
    "output": "Here are some possible detections for 'Domain Trust Discovery':\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information, such as `nltest /domain_trusts`. Remote access tools with built-in features may interact directly with the Windows API to gather information. Look for the `DSEnumerateDomainTrusts()` Win32 API call to spot activity associated with Domain Trust Discovery. Information may also be acquired through Windows system management tools such as PowerShell. The .NET method `GetAllTrustRelationships()` can be an indicator of Domain Trust Discovery.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Domain Trust Discovery",
      "answer": "Here are some possible detections for 'Domain Trust Discovery':\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information, such as `nltest /domain_trusts`. Remote access tools with built-in features may interact directly with the Windows API to gather information. Look for the `DSEnumerateDomainTrusts()` Win32 API call to spot activity associated with Domain Trust Discovery. Information may also be acquired through Windows system management tools such as PowerShell. The .NET method `GetAllTrustRelationships()` can be an indicator of Domain Trust Discovery.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Non-Application Layer Protocol - T1095?",
    "context": "",
    "output": "In order to detect Non-Application Layer Protocol (T1095), you can apply the following detection options:\nAnalyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. \n\nMonitor and investigate API calls to functions associated with enabling and/or utilizing alternative communication channels.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Non-Application Layer Protocol - T1095",
      "answer": "In order to detect Non-Application Layer Protocol (T1095), you can apply the following detection options:\nAnalyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. \n\nMonitor and investigate API calls to functions associated with enabling and/or utilizing alternative communication channels.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Compromise Infrastructure: Domains (T1584.001)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nConsider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Compromise Infrastructure: Domains (T1584.001)",
      "answer": "Detections for the following MITRE attack technique:\n\nConsider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Acquire Infrastructure: Server (T1583.004)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nOnce adversaries have provisioned a server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Acquire Infrastructure: Server (T1583.004)",
      "answer": "Detections for the following MITRE attack technique:\n\nOnce adversaries have provisioned a server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Email Collection: Remote Email Collection' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Email Collection: Remote Email Collection:\nMonitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Email Collection: Remote Email Collection' ",
      "answer": "Sure! Here are the detection options for MITRE Email Collection: Remote Email Collection:\nMonitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Data Obfuscation: Steganography",
    "context": "",
    "output": "Here are some possible detections for 'Data Obfuscation: Steganography':\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Data Obfuscation: Steganography",
      "answer": "Here are some possible detections for 'Data Obfuscation: Steganography':\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. Monitor the <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code> registry key for any new or suspicious entries that do not correlate with known system files or benign software.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Event Triggered Execution: Netsh Helper DLL",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. Monitor the <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code> registry key for any new or suspicious entries that do not correlate with known system files or benign software.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Event Triggered Execution: Netsh Helper DLL",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Subvert Trust Controls: Code Signing - T1553.002?",
    "context": "",
    "output": "In order to detect Subvert Trust Controls: Code Signing (T1553.002), you can apply the following detection options:\nCollect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Subvert Trust Controls: Code Signing - T1553.002",
      "answer": "In order to detect Subvert Trust Controls: Code Signing (T1553.002), you can apply the following detection options:\nCollect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Inhibit System Recovery (T1490)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Inhibit System Recovery:\n\nUse process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, bcdedit, REAgentC, and diskshadow. The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.\n\nMonitor the status of services involved in system recovery. Monitor the registry for changes associated with system recovery features (ex: the creation of <code>HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\PreviousVersions\\DisableLocalPage</code>).\n\nFor network infrastructure devices, collect AAA logging to monitor for `erase`, `format`, and `reload` commands being run in succession.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Inhibit System Recovery (T1490)",
      "answer": "Certainly. Here are some possible detection methods for Inhibit System Recovery:\n\nUse process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, bcdedit, REAgentC, and diskshadow. The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.\n\nMonitor the status of services involved in system recovery. Monitor the registry for changes associated with system recovery features (ex: the creation of <code>HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\PreviousVersions\\DisableLocalPage</code>).\n\nFor network infrastructure devices, collect AAA logging to monitor for `erase`, `format`, and `reload` commands being run in succession.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Data Staged (T1074)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nProcesses that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nConsider monitoring accesses and modifications to storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Data Staged (T1074)",
      "answer": "Detections for the following MITRE attack technique:\n\nProcesses that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nConsider monitoring accesses and modifications to storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Boot or Logon Autostart Execution: Kernel Modules and Extensions (T1547.006)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nLoading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands: <code>modprobe</code>, <code>insmod</code>, <code>lsmod</code>, <code>rmmod</code>, or <code>modinfo</code>  LKMs are typically loaded into <code>/lib/modules</code> and have had the extension .ko (\"kernel object\") since version 2.6 of the Linux kernel. \n\nAdversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled.  Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system. Many LKMs require Linux headers (specific to the target kernel) in order to compile properly.\u00a0These are typically obtained through the operating systems package manager and installed like a normal package. On Ubuntu and Debian based systems this can be accomplished by running: <code>apt-get install linux-headers-$(uname -r)</code> On RHEL and CentOS based systems this can be accomplished by running: <code>yum install kernel-devel-$(uname -r)</code>\n\nOn macOS, monitor for execution of <code>kextload</code> commands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in the <code>kext_policy</code> table. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database, <code>/var/db/SystemPolicyConfiguration/KextPolicy</code>.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Boot or Logon Autostart Execution: Kernel Modules and Extensions (T1547.006)",
      "answer": "Detections for the following MITRE attack technique:\n\nLoading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands: <code>modprobe</code>, <code>insmod</code>, <code>lsmod</code>, <code>rmmod</code>, or <code>modinfo</code>  LKMs are typically loaded into <code>/lib/modules</code> and have had the extension .ko (\"kernel object\") since version 2.6 of the Linux kernel. \n\nAdversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled.  Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system. Many LKMs require Linux headers (specific to the target kernel) in order to compile properly.\u00a0These are typically obtained through the operating systems package manager and installed like a normal package. On Ubuntu and Debian based systems this can be accomplished by running: <code>apt-get install linux-headers-$(uname -r)</code> On RHEL and CentOS based systems this can be accomplished by running: <code>yum install kernel-devel-$(uname -r)</code>\n\nOn macOS, monitor for execution of <code>kextload</code> commands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in the <code>kext_policy</code> table. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database, <code>/var/db/SystemPolicyConfiguration/KextPolicy</code>.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Endpoint Denial of Service: Application Exhaustion Flood?",
    "context": "",
    "output": "Here are some possible detections for 'Endpoint Denial of Service: Application Exhaustion Flood':\n\nDetection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Endpoint Denial of Service: Application Exhaustion Flood",
      "answer": "Here are some possible detections for 'Endpoint Denial of Service: Application Exhaustion Flood':\n\nDetection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: ?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Indicator Removal: Clear Persistence",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: ",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Indicator Removal: Clear Persistence",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Boot or Logon Autostart Execution: Print Processors (T1547.012)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor process API calls to <code>AddPrintProcessor</code> and <code>GetPrintProcessorDirectory</code>. New print processor DLLs are written to the print processor directory. Also monitor Registry writes to <code>HKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\\\Windows architecture\\Print Processors\\\\user defined\\\\Driver</code> or <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\\\Windows architecture\\Print Processors\\\\user defined\\Driver</code> as they pertain to print processor installations.\n\nMonitor for abnormal DLLs that are loaded by spoolsv.exe. Print processors that do not correlate with known good software or patching may be suspicious.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Boot or Logon Autostart Execution: Print Processors (T1547.012)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor process API calls to <code>AddPrintProcessor</code> and <code>GetPrintProcessorDirectory</code>. New print processor DLLs are written to the print processor directory. Also monitor Registry writes to <code>HKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\\\Windows architecture\\Print Processors\\\\user defined\\\\Driver</code> or <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\\\Windows architecture\\Print Processors\\\\user defined\\Driver</code> as they pertain to print processor installations.\n\nMonitor for abnormal DLLs that are loaded by spoolsv.exe. Print processors that do not correlate with known good software or patching may be suspicious.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Obfuscated Files or Information: Software Packing",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Obfuscated Files or Information: Software Packing",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Gather Victim Org Information: Identify Business Tempo",
    "context": "",
    "output": "Here are some possible detections for 'Gather Victim Org Information: Identify Business Tempo':\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Gather Victim Org Information: Identify Business Tempo",
      "answer": "Here are some possible detections for 'Gather Victim Org Information: Identify Business Tempo':\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Office Application Startup: Outlook Forms (T1137.003)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Office Application Startup: Outlook Forms:\n\nMicrosoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output. SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Office Application Startup: Outlook Forms (T1137.003)",
      "answer": "Certainly. Here are some possible detection methods for Office Application Startup: Outlook Forms:\n\nMicrosoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output. SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Office Application Startup: Office Template Macros",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Office Application Startup: Office Template Macros",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Gather Victim Network Information: Network Topology",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Gather Victim Network Information: Network Topology",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitoring when the user's <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like <code>cat ~/.bash_history</code>.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Unsecured Credentials: Bash History",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitoring when the user's <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like <code>cat ~/.bash_history</code>.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Unsecured Credentials: Bash History",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: System Services: Launchctl - T1569.001",
    "context": "",
    "output": "In order to detect System Services: Launchctl (T1569.001), you can apply the following detection options:\nEvery Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Monitor for recently modified or created plist files with a significant change to the executable path executed with the command-line <code>launchctl</code> command. Plist files are located in the root, system, and users <code>/Library/LaunchAgents</code> or <code>/Library/LaunchDaemons</code> folders. \n\nMonitor command-line execution of the <code>launchctl</code> command immediately followed by abnormal network connections. Launch Agents or Launch Daemons with executable paths pointing to <code>/tmp</code> and <code>/Shared</code> folders locations are potentially suspicious. \n\nWhen removing Launch Agents or Launch Daemons ensure the services are unloaded prior to deleting plist files.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: System Services: Launchctl - T1569.001",
      "answer": "In order to detect System Services: Launchctl (T1569.001), you can apply the following detection options:\nEvery Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Monitor for recently modified or created plist files with a significant change to the executable path executed with the command-line <code>launchctl</code> command. Plist files are located in the root, system, and users <code>/Library/LaunchAgents</code> or <code>/Library/LaunchDaemons</code> folders. \n\nMonitor command-line execution of the <code>launchctl</code> command immediately followed by abnormal network connections. Launch Agents or Launch Daemons with executable paths pointing to <code>/tmp</code> and <code>/Shared</code> folders locations are potentially suspicious. \n\nWhen removing Launch Agents or Launch Daemons ensure the services are unloaded prior to deleting plist files.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: System Binary Proxy Execution: Control Panel - T1218.002",
    "context": "",
    "output": "In order to detect System Binary Proxy Execution: Control Panel (T1218.002), you can apply the following detection options:\nMonitor and analyze activity related to items associated with CPL files, such as the control.exe and the <code>Control_RunDLL</code> and <code>ControlRunDLLAsUser</code> API functions in shell32.dll. When executed from the command line or clicked, control.exe will execute the CPL file (ex: <code>control.exe file.cpl</code>) before Rundll32 is used to call the CPL's API functions (ex: <code>rundll32.exe shell32.dll,Control_RunDLL file.cpl</code>). CPL files can be executed directly via the CPL API function with just the latter Rundll32 command, which may bypass detections and/or execution filters for control.exe.\n\nInventory Control Panel items to locate unregistered and potentially malicious files present on systems:\n\n* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace</code> and <code>HKEY_CLASSES_ROOT\\CLSID\\{GUID}</code>. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel. \n* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in the <code>CPLs</code> and <code>Extended Properties</code> Registry keys of <code>HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel</code>. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (<code> WinExec(\"c:\\windows\\system32\\control.exe {Canonical_Name}\", SW_NORMAL);</code>) or from a command line (<code>control.exe /name {Canonical_Name}</code>).\n* Some Control Panel items are extensible via Shell extensions registered in <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Controls Folder\\{name}\\Shellex\\PropertySheetHandlers</code> where {name} is the predefined name of the system item.\n\nAnalyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: System Binary Proxy Execution: Control Panel - T1218.002",
      "answer": "In order to detect System Binary Proxy Execution: Control Panel (T1218.002), you can apply the following detection options:\nMonitor and analyze activity related to items associated with CPL files, such as the control.exe and the <code>Control_RunDLL</code> and <code>ControlRunDLLAsUser</code> API functions in shell32.dll. When executed from the command line or clicked, control.exe will execute the CPL file (ex: <code>control.exe file.cpl</code>) before Rundll32 is used to call the CPL's API functions (ex: <code>rundll32.exe shell32.dll,Control_RunDLL file.cpl</code>). CPL files can be executed directly via the CPL API function with just the latter Rundll32 command, which may bypass detections and/or execution filters for control.exe.\n\nInventory Control Panel items to locate unregistered and potentially malicious files present on systems:\n\n* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace</code> and <code>HKEY_CLASSES_ROOT\\CLSID\\{GUID}</code>. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel. \n* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in the <code>CPLs</code> and <code>Extended Properties</code> Registry keys of <code>HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel</code>. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (<code> WinExec(\"c:\\windows\\system32\\control.exe {Canonical_Name}\", SW_NORMAL);</code>) or from a command line (<code>control.exe /name {Canonical_Name}</code>).\n* Some Control Panel items are extensible via Shell extensions registered in <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Controls Folder\\{name}\\Shellex\\PropertySheetHandlers</code> where {name} is the predefined name of the system item.\n\nAnalyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool.  When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Obfuscated Files or Information: Binary Padding",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool.  When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Obfuscated Files or Information: Binary Padding",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Group Policy Discovery (T1615)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor for suspicious use of <code>gpresult</code>. Monitor for the use of PowerShell functions such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code> and processes spawning with command-line arguments containing <code>GPOLocalGroup</code>.\n\nMonitor for abnormal LDAP queries with filters for <code>groupPolicyContainer</code> and high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Group Policy Discovery (T1615)",
      "answer": "Detections for the following MITRE attack technique:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor for suspicious use of <code>gpresult</code>. Monitor for the use of PowerShell functions such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code> and processes spawning with command-line arguments containing <code>GPOLocalGroup</code>.\n\nMonitor for abnormal LDAP queries with filters for <code>groupPolicyContainer</code> and high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Endpoint Denial of Service - T1499?",
    "context": "",
    "output": "In order to detect Endpoint Denial of Service (T1499), you can apply the following detection options:\nDetection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\n\nExternally monitor the availability of services that may be targeted by an Endpoint DoS.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Endpoint Denial of Service - T1499",
      "answer": "In order to detect Endpoint Denial of Service (T1499), you can apply the following detection options:\nDetection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\n\nExternally monitor the availability of services that may be targeted by an Endpoint DoS.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Monitor for access to S3 buckets, especially those that are not intended to be publicly accessible. \n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. \n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Active Scanning: Wordlist Scanning",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Monitor for access to S3 buckets, especially those that are not intended to be publicly accessible. \n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. \n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Active Scanning: Wordlist Scanning",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Hardware Additions (T1200)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Hardware Additions:\n\nAsset management systems may help with the detection of computer systems or network devices that should not exist on a network. \n\nEndpoint sensors may be able to detect the addition of hardware via USB, Thunderbolt, and other external device communication ports.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Hardware Additions (T1200)",
      "answer": "Certainly. Here are some possible detection methods for Hardware Additions:\n\nAsset management systems may help with the detection of computer systems or network devices that should not exist on a network. \n\nEndpoint sensors may be able to detect the addition of hardware via USB, Thunderbolt, and other external device communication ports.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Further, Network Device CLI commands may also be used to collect files such as configuration files with built-in features native to the network device platform. Monitor CLI activity for unexpected or unauthorized use commands being run by non-standard users from non-standard locations. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nFor network infrastructure devices, collect AAA logging to monitor `show` commands that view configuration files.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Data from Local System",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Further, Network Device CLI commands may also be used to collect files such as configuration files with built-in features native to the network device platform. Monitor CLI activity for unexpected or unauthorized use commands being run by non-standard users from non-standard locations. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nFor network infrastructure devices, collect AAA logging to monitor `show` commands that view configuration files.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Data from Local System",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Data Manipulation: Runtime Data Manipulation' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Data Manipulation: Runtime Data Manipulation:\nInspect important application binary file hashes, locations, and modifications for suspicious/unexpected values.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Data Manipulation: Runtime Data Manipulation' ",
      "answer": "Sure! Here are the detection options for MITRE Data Manipulation: Runtime Data Manipulation:\nInspect important application binary file hashes, locations, and modifications for suspicious/unexpected values.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Proxy: Multi-hop Proxy - T1090.003, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Proxy: Multi-hop Proxy' are:\n\nWhen observing use of Multi-hop proxies, network data from the actual command and control servers could allow correlating incoming and outgoing flows to trace malicious traffic back to its source. Multi-hop proxies can also be detected by alerting on traffic to known anonymity networks (such as Tor) or known adversary infrastructure that uses this technique.\n\nIn context of network devices, monitor traffic for encrypted communications from the Internet that is addressed to border routers.  Compare this traffic with the configuration to determine whether it matches with any configured site-to-site Virtual Private Network (VPN) connections the device was intended to have. Monitor traffic for encrypted communications originating from potentially breached routers that is addressed to other routers within the organization.  Compare the source and destination with the configuration of the device to determine if these channels are an authorized Virtual Private Network (VPN) connections or other encrypted modes of communication. Monitor ICMP traffic from the Internet that is addressed to border routers and is encrypted.  Few if any legitimate use cases exist for sending encrypted data to a network device via ICMP.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Proxy: Multi-hop Proxy - T1090.003, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Proxy: Multi-hop Proxy' are:\n\nWhen observing use of Multi-hop proxies, network data from the actual command and control servers could allow correlating incoming and outgoing flows to trace malicious traffic back to its source. Multi-hop proxies can also be detected by alerting on traffic to known anonymity networks (such as Tor) or known adversary infrastructure that uses this technique.\n\nIn context of network devices, monitor traffic for encrypted communications from the Internet that is addressed to border routers.  Compare this traffic with the configuration to determine whether it matches with any configured site-to-site Virtual Private Network (VPN) connections the device was intended to have. Monitor traffic for encrypted communications originating from potentially breached routers that is addressed to other routers within the organization.  Compare the source and destination with the configuration of the device to determine if these channels are an authorized Virtual Private Network (VPN) connections or other encrypted modes of communication. Monitor ICMP traffic from the Internet that is addressed to border routers and is encrypted.  Few if any legitimate use cases exist for sending encrypted data to a network device via ICMP.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Valid Accounts",
    "context": "",
    "output": "Here are some possible detections for 'Valid Accounts':\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services. Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence. Checks on these accounts could also include whether default accounts such as Guest have been activated. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Valid Accounts",
      "answer": "Here are some possible detections for 'Valid Accounts':\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services. Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence. Checks on these accounts could also include whether default accounts such as Guest have been activated. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Stage Capabilities: Upload Malware' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Stage Capabilities: Upload Malware:\nIf infrastructure or patterns in malware have been previously identified, internet scanning may uncover when an adversary has staged malware to make it accessible for targeting.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as User Execution or Ingress Tool Transfer.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Stage Capabilities: Upload Malware' ",
      "answer": "Sure! Here are the detection options for MITRE Stage Capabilities: Upload Malware:\nIf infrastructure or patterns in malware have been previously identified, internet scanning may uncover when an adversary has staged malware to make it accessible for targeting.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as User Execution or Ingress Tool Transfer.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Abuse Elevation Control Mechanism: TCC Manipulation - T1548.006, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Abuse Elevation Control Mechanism: TCC Manipulation' are:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Abuse Elevation Control Mechanism: TCC Manipulation - T1548.006, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Abuse Elevation Control Mechanism: TCC Manipulation' are:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Gather Victim Network Information: IP Addresses - T1590.005",
    "context": "",
    "output": "In order to detect Gather Victim Network Information: IP Addresses (T1590.005), you can apply the following detection options:\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Gather Victim Network Information: IP Addresses - T1590.005",
      "answer": "In order to detect Gather Victim Network Information: IP Addresses (T1590.005), you can apply the following detection options:\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Access Token Manipulation: Make and Impersonate Token - T1134.003",
    "context": "",
    "output": "In order to detect Access Token Manipulation: Make and Impersonate Token (T1134.003), you can apply the following detection options:\nIf an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.\n\nAnalysts can also monitor for use of Windows APIs such as <code>LogonUser</code> and <code> SetThreadToken</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Access Token Manipulation: Make and Impersonate Token - T1134.003",
      "answer": "In order to detect Access Token Manipulation: Make and Impersonate Token (T1134.003), you can apply the following detection options:\nIf an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.\n\nAnalysts can also monitor for use of Windows APIs such as <code>LogonUser</code> and <code> SetThreadToken</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Unsecured Credentials: Private Keys - T1552.004, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Unsecured Credentials: Private Keys' are:\n\nMonitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. Collect authentication logs and look for potentially abnormal activity that may indicate improper use of keys or certificates for remote authentication. For network infrastructure devices, collect AAA logging to monitor for private keys being exported.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Unsecured Credentials: Private Keys - T1552.004, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Unsecured Credentials: Private Keys' are:\n\nMonitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. Collect authentication logs and look for potentially abnormal activity that may indicate improper use of keys or certificates for remote authentication. For network infrastructure devices, collect AAA logging to monitor for private keys being exported.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Event Triggered Execution: Component Object Model Hijacking (T1546.015)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nThere are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex: Reg) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\. Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.  \n\nLikewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Event Triggered Execution: Component Object Model Hijacking (T1546.015)",
      "answer": "Detections for the following MITRE attack technique:\n\nThere are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex: Reg) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\. Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.  \n\nLikewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Obfuscated Files or Information: Stripped Payloads - T1027.008?",
    "context": "",
    "output": "In order to detect Obfuscated Files or Information: Stripped Payloads (T1027.008), you can apply the following detection options:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Obfuscated Files or Information: Stripped Payloads - T1027.008",
      "answer": "In order to detect Obfuscated Files or Information: Stripped Payloads (T1027.008), you can apply the following detection options:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Screen Capture' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Screen Capture:\nMonitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Screen Capture' ",
      "answer": "Sure! Here are the detection options for MITRE Screen Capture:\nMonitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Encrypted Channel - T1573",
    "context": "",
    "output": "In order to detect Encrypted Channel (T1573), you can apply the following detection options:\nSSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels. SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Encrypted Channel - T1573",
      "answer": "In order to detect Encrypted Channel (T1573), you can apply the following detection options:\nSSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels. SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: OS Credential Dumping: Security Account Manager",
    "context": "",
    "output": "Here are some possible detections for 'OS Credential Dumping: Security Account Manager':\n\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (<code>%SystemRoot%/system32/config/SAM</code>) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: OS Credential Dumping: Security Account Manager",
      "answer": "Here are some possible detections for 'OS Credential Dumping: Security Account Manager':\n\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (<code>%SystemRoot%/system32/config/SAM</code>) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Account Discovery: Domain Account",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Account Discovery: Domain Account",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Non-Standard Port (T1571)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nAnalyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Non-Standard Port (T1571)",
      "answer": "Detections for the following MITRE attack technique:\n\nAnalyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Establish Accounts?",
    "context": "",
    "output": "Here are some possible detections for 'Establish Accounts':\n\nConsider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Phishing).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Establish Accounts",
      "answer": "Here are some possible detections for 'Establish Accounts':\n\nConsider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Phishing).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Modify Authentication Process: Domain Controller Authentication (T1556.001)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services. Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g. a user has an active login session but has not entered the building or does not have VPN access).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Modify Authentication Process: Domain Controller Authentication (T1556.001)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services. Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g. a user has an active login session but has not entered the building or does not have VPN access).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Brute Force: Password Cracking - T1110.002, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Brute Force: Password Cracking' are:\n\nIt is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as OS Credential Dumping or Kerberoasting.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Brute Force: Password Cracking - T1110.002, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Brute Force: Password Cracking' are:\n\nIt is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as OS Credential Dumping or Kerberoasting.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: OS Credential Dumping: /etc/passwd and /etc/shadow (T1003.008)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nThe AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access <code>/etc/passwd</code> and <code>/etc/shadow</code>, alerting on the pid, process name, and arguments of such programs.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: OS Credential Dumping: /etc/passwd and /etc/shadow (T1003.008)",
      "answer": "Detections for the following MITRE attack technique:\n\nThe AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access <code>/etc/passwd</code> and <code>/etc/shadow</code>, alerting on the pid, process name, and arguments of such programs.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Phishing: Spearphishing via Service?",
    "context": "",
    "output": "Here are some possible detections for 'Phishing: Spearphishing via Service':\n\nBecause most common third-party services used for spearphishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware. \n\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as Exploitation for Client Execution or usage of malicious scripts.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Phishing: Spearphishing via Service",
      "answer": "Here are some possible detections for 'Phishing: Spearphishing via Service':\n\nBecause most common third-party services used for spearphishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware. \n\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as Exploitation for Client Execution or usage of malicious scripts.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Establish monitoring for activity conducted by second and third party providers and other trusted entities that may be leveraged as a means to gain access to the network. Depending on the type of relationship, an adversary may have access to significant amounts of information about the target before conducting an operation, especially if the trusted relationship is based on IT services. Adversaries may be able to act quickly towards an objective, so proper monitoring for behavior related to Credential Access, Lateral Movement, and Collection will be important to detect the intrusion.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Trusted Relationship",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Establish monitoring for activity conducted by second and third party providers and other trusted entities that may be leveraged as a means to gain access to the network. Depending on the type of relationship, an adversary may have access to significant amounts of information about the target before conducting an operation, especially if the trusted relationship is based on IT services. Adversaries may be able to act quickly towards an objective, so proper monitoring for behavior related to Credential Access, Lateral Movement, and Collection will be important to detect the intrusion.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Trusted Relationship",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol (T1048.002)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol:\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol (T1048.002)",
      "answer": "Certainly. Here are some possible detection methods for Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol:\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Hide Infrastructure?",
    "context": "",
    "output": "Here are some possible detections for 'Hide Infrastructure':\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Hide Infrastructure",
      "answer": "Here are some possible detections for 'Hide Infrastructure':\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Automated Exfiltration: Traffic Duplication - T1020.001, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Automated Exfiltration: Traffic Duplication' are:\n\nMonitor network traffic for uncommon data flows (e.g. unusual network communications, suspicious communications that have never been seen before, communications sending fixed size data packets at regular intervals).  Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Automated Exfiltration: Traffic Duplication - T1020.001, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Automated Exfiltration: Traffic Duplication' are:\n\nMonitor network traffic for uncommon data flows (e.g. unusual network communications, suspicious communications that have never been seen before, communications sending fixed size data packets at regular intervals).  Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Abuse Elevation Control Mechanism: Bypass User Account Control - T1548.002, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Abuse Elevation Control Mechanism: Bypass User Account Control' are:\n\nThere are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of Process Injection and unusual loaded DLLs through DLL Search Order Hijacking, which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>HKEY_CURRENT_USER\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.\n\n* The <code>sdclt.exe</code> bypass uses the <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>HKEY_CURRENT_USER\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.\n\nAnalysts should monitor these Registry settings for unauthorized changes.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Abuse Elevation Control Mechanism: Bypass User Account Control - T1548.002, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Abuse Elevation Control Mechanism: Bypass User Account Control' are:\n\nThere are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of Process Injection and unusual loaded DLLs through DLL Search Order Hijacking, which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>HKEY_CURRENT_USER\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.\n\n* The <code>sdclt.exe</code> bypass uses the <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>HKEY_CURRENT_USER\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.\n\nAnalysts should monitor these Registry settings for unauthorized changes.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Proxy: External Proxy - T1090.002",
    "context": "",
    "output": "In order to detect Proxy: External Proxy (T1090.002), you can apply the following detection options:\nAnalyze network data for uncommon data flows, such as a client sending significantly more data than it receives from an external server. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Proxy: External Proxy - T1090.002",
      "answer": "In order to detect Proxy: External Proxy (T1090.002), you can apply the following detection options:\nAnalyze network data for uncommon data flows, such as a client sending significantly more data than it receives from an external server. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Modify Cloud Compute Infrastructure' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Modify Cloud Compute Infrastructure:\nEstablish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the creation of multiple snapshots within a short period of time or the mount of a snapshot to a new instance by a new or unexpected user. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Modify Cloud Compute Infrastructure' ",
      "answer": "Sure! Here are the detection options for MITRE Modify Cloud Compute Infrastructure:\nEstablish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the creation of multiple snapshots within a short period of time or the mount of a snapshot to a new instance by a new or unexpected user. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: Transfer Data to Cloud Account).?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Compromise Accounts: Cloud Accounts",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: Transfer Data to Cloud Account).",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Compromise Accounts: Cloud Accounts",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.\n\nAdversaries may rename abusable binaries to evade detections, but the argument <code>INJECTRUNNING</code> is required for mavinject.exe to perform Dynamic-link Library Injection and may therefore be monitored to alert malicious activity.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: System Binary Proxy Execution: Mavinject",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.\n\nAdversaries may rename abusable binaries to evade detections, but the argument <code>INJECTRUNNING</code> is required for mavinject.exe to perform Dynamic-link Library Injection and may therefore be monitored to alert malicious activity.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: System Binary Proxy Execution: Mavinject",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Process Injection: Thread Execution Hijacking?",
    "context": "",
    "output": "Here are some possible detections for 'Process Injection: Thread Execution Hijacking':\n\nMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Process Injection: Thread Execution Hijacking",
      "answer": "Here are some possible detections for 'Process Injection: Thread Execution Hijacking':\n\nMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Exfiltration Over C2 Channel (T1041)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Exfiltration Over C2 Channel (T1041)",
      "answer": "Detections for the following MITRE attack technique:\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Event Triggered Execution: AppInit DLLs - T1546.010?",
    "context": "",
    "output": "In order to detect Event Triggered Execution: AppInit DLLs (T1546.010), you can apply the following detection options:\nMonitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. \n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current AppInit DLLs.  \n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Event Triggered Execution: AppInit DLLs - T1546.010",
      "answer": "In order to detect Event Triggered Execution: AppInit DLLs (T1546.010), you can apply the following detection options:\nMonitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. \n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current AppInit DLLs.  \n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Valid Accounts: Local Accounts - T1078.003",
    "context": "",
    "output": "In order to detect Valid Accounts: Local Accounts (T1078.003), you can apply the following detection options:\nPerform regular audits of local system accounts to detect accounts that may have been created by an adversary for persistence. Look for suspicious account behavior, such as accounts logged in at odd times or outside of business hours.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Valid Accounts: Local Accounts - T1078.003",
      "answer": "In order to detect Valid Accounts: Local Accounts (T1078.003), you can apply the following detection options:\nPerform regular audits of local system accounts to detect accounts that may have been created by an adversary for persistence. Look for suspicious account behavior, such as accounts logged in at odd times or outside of business hours.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Financial Theft (T1657)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Financial Theft (T1657)",
      "answer": "Detections for the following MITRE attack technique:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Exfiltration Over Alternative Protocol - T1048?",
    "context": "",
    "output": "In order to detect Exfiltration Over Alternative Protocol (T1048), you can apply the following detection options:\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Exfiltration Over Alternative Protocol - T1048",
      "answer": "In order to detect Exfiltration Over Alternative Protocol (T1048), you can apply the following detection options:\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Masquerading: Space after Filename - T1036.006?",
    "context": "",
    "output": "In order to detect Masquerading: Space after Filename (T1036.006), you can apply the following detection options:\nIt's not common for spaces to be at the end of filenames, so this is something that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Masquerading: Space after Filename - T1036.006",
      "answer": "In order to detect Masquerading: Space after Filename (T1036.006), you can apply the following detection options:\nIt's not common for spaces to be at the end of filenames, so this is something that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Credentials from Password Stores (T1555)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor system calls, file read events, and processes for suspicious activity that could indicate searching for a password  or other activity related to performing keyword searches (e.g. password, pwd, login, store, secure, credentials, etc.) in process memory for credentials. File read events should be monitored surrounding known password storage applications.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Credentials from Password Stores (T1555)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor system calls, file read events, and processes for suspicious activity that could indicate searching for a password  or other activity related to performing keyword searches (e.g. password, pwd, login, store, secure, credentials, etc.) in process memory for credentials. File read events should be monitored surrounding known password storage applications.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Dynamic Resolution: Fast Flux DNS?",
    "context": "",
    "output": "Here are some possible detections for 'Dynamic Resolution: Fast Flux DNS':\n\nIn general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Dynamic Resolution: Fast Flux DNS",
      "answer": "Here are some possible detections for 'Dynamic Resolution: Fast Flux DNS':\n\nIn general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Access Token Manipulation: Token Impersonation/Theft (T1134.001)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nIf an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.\n\nAnalysts can also monitor for use of Windows APIs such as <code>DuplicateToken(Ex)</code>, <code> ImpersonateLoggedOnUser </code>, and <code> SetThreadToken </code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Access Token Manipulation: Token Impersonation/Theft (T1134.001)",
      "answer": "Detections for the following MITRE attack technique:\n\nIf an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.\n\nAnalysts can also monitor for use of Windows APIs such as <code>DuplicateToken(Ex)</code>, <code> ImpersonateLoggedOnUser </code>, and <code> SetThreadToken </code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Disk Wipe: Disk Content Wipe' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Disk Wipe: Disk Content Wipe:\nLook for attempts to read/write to sensitive locations like the partition boot sector or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation. Monitor for unusual kernel driver installation activity.\n\nFor network infrastructure devices, collect AAA logging to monitor for `erase` commands that delete critical configuration files.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Disk Wipe: Disk Content Wipe' ",
      "answer": "Sure! Here are the detection options for MITRE Disk Wipe: Disk Content Wipe:\nLook for attempts to read/write to sensitive locations like the partition boot sector or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation. Monitor for unusual kernel driver installation activity.\n\nFor network infrastructure devices, collect AAA logging to monitor for `erase` commands that delete critical configuration files.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Obfuscated Files or Information: LNK Icon Smuggling (T1027.012)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Obfuscated Files or Information: LNK Icon Smuggling:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Obfuscated Files or Information: LNK Icon Smuggling (T1027.012)",
      "answer": "Certainly. Here are some possible detection methods for Obfuscated Files or Information: LNK Icon Smuggling:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Subvert Trust Controls: Gatekeeper Bypass (T1553.001)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nThe removal of the <code>com.apple.quarantine</code> flag by a user instead of the operating system is a suspicious action and should be examined further. Monitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Monitor software update frameworks that strip the <code>com.apple.quarantine</code> flag when performing updates. \n\nReview <code>false</code> values under the <code>LSFileQuarantineEnabled</code> entry in an application's <code>Info.plist</code> file (required by every application). <code>false</code> under <code>LSFileQuarantineEnabled</code> indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified <code>LSFileQuarantineEnabled</code> entry will default to not setting the quarantine flag. \n\nQuarantineEvents is a SQLite database containing a list of all files assigned the <code>com.apple.quarantine</code> attribute, located at <code>~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2</code>. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Subvert Trust Controls: Gatekeeper Bypass (T1553.001)",
      "answer": "Detections for the following MITRE attack technique:\n\nThe removal of the <code>com.apple.quarantine</code> flag by a user instead of the operating system is a suspicious action and should be examined further. Monitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Monitor software update frameworks that strip the <code>com.apple.quarantine</code> flag when performing updates. \n\nReview <code>false</code> values under the <code>LSFileQuarantineEnabled</code> entry in an application's <code>Info.plist</code> file (required by every application). <code>false</code> under <code>LSFileQuarantineEnabled</code> indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified <code>LSFileQuarantineEnabled</code> entry will default to not setting the quarantine flag. \n\nQuarantineEvents is a SQLite database containing a list of all files assigned the <code>com.apple.quarantine</code> attribute, located at <code>~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2</code>. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor internal and external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Defacement",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor internal and external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Defacement",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Gather Victim Host Information: Software - T1592.002, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Gather Victim Host Information: Software' are:\n\nInternet scanners may be used to look for patterns associated with malicious content designed to collect host software information from visitors.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Gather Victim Host Information: Software - T1592.002, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Gather Victim Host Information: Software' are:\n\nInternet scanners may be used to look for patterns associated with malicious content designed to collect host software information from visitors.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Indicator Removal: Clear Linux or Mac System Logs' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Indicator Removal: Clear Linux or Mac System Logs:\nFile system monitoring may be used to detect improper deletion or modification of indicator files. Also monitor for suspicious processes interacting with log files.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Indicator Removal: Clear Linux or Mac System Logs' ",
      "answer": "Sure! Here are the detection options for MITRE Indicator Removal: Clear Linux or Mac System Logs:\nFile system monitoring may be used to detect improper deletion or modification of indicator files. Also monitor for suspicious processes interacting with log files.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Exfiltration Over Web Service: Exfiltration to Code Repository' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Exfiltration Over Web Service: Exfiltration to Code Repository:\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to code repositories. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Exfiltration Over Web Service: Exfiltration to Code Repository' ",
      "answer": "Sure! Here are the detection options for MITRE Exfiltration Over Web Service: Exfiltration to Code Repository:\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to code repositories. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Subvert Trust Controls: Install Root Certificate - T1553.004, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Subvert Trust Controls: Install Root Certificate' are:\n\nA system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through authroot.stl. The Sysinternals Sigcheck utility can also be used (<code>sigcheck64.exe -tuv</code>) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List.\n\nInstalled root certificates are located in the Registry under <code>HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\</code> and <code>HKLM or HKCU\\Software\\Policies\\\\Microsoft\\SystemCertificates\\Root\\Certificates\\</code>. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:\n\n* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25\n* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85\n* 3B1EFD3A66EA28B16697394703A72CA340A05BD5\n* 7F88CD7223F3C813818C994614A89C99FA3B5247\n* 8F43288AD272F3103B6FB1428485EA3014C0BCFE\n* A43489159A520F0D93D032CCAF37E7FE20A8B419\n* BE36A4562FB2EE05DBB3D32323ADF445084ED656\n* CDD4EEAE6000AC7F40C3802C171E30148030C072",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Subvert Trust Controls: Install Root Certificate - T1553.004, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Subvert Trust Controls: Install Root Certificate' are:\n\nA system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through authroot.stl. The Sysinternals Sigcheck utility can also be used (<code>sigcheck64.exe -tuv</code>) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List.\n\nInstalled root certificates are located in the Registry under <code>HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\</code> and <code>HKLM or HKCU\\Software\\Policies\\\\Microsoft\\SystemCertificates\\Root\\Certificates\\</code>. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:\n\n* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25\n* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85\n* 3B1EFD3A66EA28B16697394703A72CA340A05BD5\n* 7F88CD7223F3C813818C994614A89C99FA3B5247\n* 8F43288AD272F3103B6FB1428485EA3014C0BCFE\n* A43489159A520F0D93D032CCAF37E7FE20A8B419\n* BE36A4562FB2EE05DBB3D32323ADF445084ED656\n* CDD4EEAE6000AC7F40C3802C171E30148030C072",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Endpoint Denial of Service: OS Exhaustion Flood (T1499.001)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Endpoint Denial of Service: OS Exhaustion Flood:\n\nDetection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Endpoint Denial of Service: OS Exhaustion Flood (T1499.001)",
      "answer": "Certainly. Here are some possible detection methods for Endpoint Denial of Service: OS Exhaustion Flood:\n\nDetection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Data Staged: Local Data Staging' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Data Staged: Local Data Staging:\nProcesses that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nConsider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Data Staged: Local Data Staging' ",
      "answer": "Sure! Here are the detection options for MITRE Data Staged: Local Data Staging:\nProcesses that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nConsider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Boot or Logon Initialization Scripts: RC Scripts?",
    "context": "",
    "output": "Here are some possible detections for 'Boot or Logon Initialization Scripts: RC Scripts':\n\nMonitor for unexpected changes to RC scripts in the <code>/etc/</code> directory. Monitor process execution resulting from RC scripts for unusual or unknown applications or behavior.\n\nMonitor for <code>/etc/rc.local</code> file creation. Although types of RC scripts vary for each Unix-like distribution, several execute <code>/etc/rc.local</code> if present.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Boot or Logon Initialization Scripts: RC Scripts",
      "answer": "Here are some possible detections for 'Boot or Logon Initialization Scripts: RC Scripts':\n\nMonitor for unexpected changes to RC scripts in the <code>/etc/</code> directory. Monitor process execution resulting from RC scripts for unusual or unknown applications or behavior.\n\nMonitor for <code>/etc/rc.local</code> file creation. Although types of RC scripts vary for each Unix-like distribution, several execute <code>/etc/rc.local</code> if present.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Permission Groups Discovery: Local Groups - T1069.001, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Permission Groups Discovery: Local Groups' are:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Permission Groups Discovery: Local Groups - T1069.001, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Permission Groups Discovery: Local Groups' are:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Remote Services: SSH - T1021.004, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Remote Services: SSH' are:\n\nUse of SSH may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.\n\nOn macOS systems <code>log show --predicate 'process = \"sshd\"'</code> can be used to review incoming SSH connection attempts for suspicious activity. The command <code>log show --info --predicate 'process = \"ssh\" or eventMessage contains \"ssh\"'</code> can be used to review outgoing SSH connection activity.\n\nOn Linux systems SSH activity can be found in the logs located in <code>/var/log/auth.log</code> or <code>/var/log/secure</code> depending on the distro you are using.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Remote Services: SSH - T1021.004, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Remote Services: SSH' are:\n\nUse of SSH may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.\n\nOn macOS systems <code>log show --predicate 'process = \"sshd\"'</code> can be used to review incoming SSH connection attempts for suspicious activity. The command <code>log show --info --predicate 'process = \"ssh\" or eventMessage contains \"ssh\"'</code> can be used to review outgoing SSH connection activity.\n\nOn Linux systems SSH activity can be found in the logs located in <code>/var/log/auth.log</code> or <code>/var/log/secure</code> depending on the distro you are using.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Hide Artifacts: Email Hiding Rules (T1564.008)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Hide Artifacts: Email Hiding Rules:\n\nMonitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.\n\nOn Windows systems, monitor for creation of suspicious inbox rules through the use of the <code>New-InboxRule</code> and <code>Set-InboxRule</code> PowerShell cmdlets. On MacOS systems, monitor for modifications to the <code>RulesActiveState.plist</code>, <code>SyncedRules.plist</code>, <code>UnsyncedRules.plist</code>, and <code>MessageRules.plist</code> files.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Hide Artifacts: Email Hiding Rules (T1564.008)",
      "answer": "Certainly. Here are some possible detection methods for Hide Artifacts: Email Hiding Rules:\n\nMonitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.\n\nOn Windows systems, monitor for creation of suspicious inbox rules through the use of the <code>New-InboxRule</code> and <code>Set-InboxRule</code> PowerShell cmdlets. On MacOS systems, monitor for modifications to the <code>RulesActiveState.plist</code>, <code>SyncedRules.plist</code>, <code>UnsyncedRules.plist</code>, and <code>MessageRules.plist</code> files.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Hijack Execution Flow: DLL Search Order Hijacking",
    "context": "",
    "output": "Here are some possible detections for 'Hijack Execution Flow: DLL Search Order Hijacking':\n\nMonitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of `.manifest` and `.local` redirection files that do not correlate with software updates are suspicious.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Hijack Execution Flow: DLL Search Order Hijacking",
      "answer": "Here are some possible detections for 'Hijack Execution Flow: DLL Search Order Hijacking':\n\nMonitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of `.manifest` and `.local` redirection files that do not correlate with software updates are suspicious.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Modify Authentication Process: Network Device Authentication' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Modify Authentication Process: Network Device Authentication:\nConsider verifying the checksum of the operating system file and verifying the image of the operating system in memory.\n\nDetection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Modify Authentication Process: Network Device Authentication' ",
      "answer": "Sure! Here are the detection options for MITRE Modify Authentication Process: Network Device Authentication:\nConsider verifying the checksum of the operating system file and verifying the image of the operating system in memory.\n\nDetection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Boot or Logon Initialization Scripts: Logon Script (Windows) (T1037.001)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor for changes to Registry values associated with Windows logon scrips, nameley <code>HKCU\\Environment\\UserInitMprLogonScript</code>.\n\nMonitor running process for actions that could be indicative of abnormal programs or executables running upon logon.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Boot or Logon Initialization Scripts: Logon Script (Windows) (T1037.001)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor for changes to Registry values associated with Windows logon scrips, nameley <code>HKCU\\Environment\\UserInitMprLogonScript</code>.\n\nMonitor running process for actions that could be indicative of abnormal programs or executables running upon logon.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Gather Victim Identity Information?",
    "context": "",
    "output": "Here are some possible detections for 'Gather Victim Identity Information':\n\nMonitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Gather Victim Identity Information",
      "answer": "Here are some possible detections for 'Gather Victim Identity Information':\n\nMonitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Stage Capabilities: Link Target?",
    "context": "",
    "output": "Here are some possible detections for 'Stage Capabilities: Link Target':\n\nIf infrastructure or patterns in malicious web content have been previously identified, internet scanning may uncover when an adversary has staged web content to make it accessible for targeting.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as during Spearphishing Link, Spearphishing Link, or Malicious Link.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Stage Capabilities: Link Target",
      "answer": "Here are some possible detections for 'Stage Capabilities: Link Target':\n\nIf infrastructure or patterns in malicious web content have been previously identified, internet scanning may uncover when an adversary has staged web content to make it accessible for targeting.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as during Spearphishing Link, Spearphishing Link, or Malicious Link.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: ?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Modify Authentication Process: Network Provider DLL",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: ",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Modify Authentication Process: Network Provider DLL",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Resource Hijacking (T1496)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nConsider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources. Monitor for suspicious use of network resources associated with cryptocurrency mining software. Monitor for common cryptomining software process names and files on local systems that may indicate compromise and resource usage.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Resource Hijacking (T1496)",
      "answer": "Detections for the following MITRE attack technique:\n\nConsider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources. Monitor for suspicious use of network resources associated with cryptocurrency mining software. Monitor for common cryptomining software process names and files on local systems that may indicate compromise and resource usage.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Obtain Capabilities: Digital Certificates' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Obtain Capabilities: Digital Certificates:\nConsider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure. Some server-side components of adversary tools may have default values set for SSL/TLS certificates.\n\nDetection efforts may be focused on related behaviors, such as Web Protocols, Asymmetric Cryptography, and/or Install Root Certificate.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Obtain Capabilities: Digital Certificates' ",
      "answer": "Sure! Here are the detection options for MITRE Obtain Capabilities: Digital Certificates:\nConsider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure. Some server-side components of adversary tools may have default values set for SSL/TLS certificates.\n\nDetection efforts may be focused on related behaviors, such as Web Protocols, Asymmetric Cryptography, and/or Install Root Certificate.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Gather Victim Network Information: DNS",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Gather Victim Network Information: DNS",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Web Service: One-Way Communication",
    "context": "",
    "output": "Here are some possible detections for 'Web Service: One-Way Communication':\n\nHost data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows. User behavior monitoring may help to detect abnormal patterns of activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Web Service: One-Way Communication",
      "answer": "Here are some possible detections for 'Web Service: One-Way Communication':\n\nHost data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows. User behavior monitoring may help to detect abnormal patterns of activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Compromise Infrastructure: DNS Server - T1584.002",
    "context": "",
    "output": "In order to detect Compromise Infrastructure: DNS Server (T1584.002), you can apply the following detection options:\nConsider monitoring for anomalous resolution changes for domain addresses. Efforts may need to be tailored to specific domains of interest as benign resolution changes are a common occurrence on the internet.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Compromise Infrastructure: DNS Server - T1584.002",
      "answer": "In order to detect Compromise Infrastructure: DNS Server (T1584.002), you can apply the following detection options:\nConsider monitoring for anomalous resolution changes for domain addresses. Efforts may need to be tailored to specific domains of interest as benign resolution changes are a common occurrence on the internet.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Subvert Trust Controls: Code Signing Policy Modification (T1553.006)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Subvert Trust Controls: Code Signing Policy Modification:\n\nMonitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as <code>bcdedit.exe -set TESTSIGNING ON</code>. Consider monitoring for modifications made to Registry keys associated with code signing policies, such as <code>HKCU\\Software\\Policies\\Microsoft\\Windows NT\\Driver Signing</code>. Modifications to the code signing policy of a system are likely to be rare.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Subvert Trust Controls: Code Signing Policy Modification (T1553.006)",
      "answer": "Certainly. Here are some possible detection methods for Subvert Trust Controls: Code Signing Policy Modification:\n\nMonitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as <code>bcdedit.exe -set TESTSIGNING ON</code>. Consider monitoring for modifications made to Registry keys associated with code signing policies, such as <code>HKCU\\Software\\Policies\\Microsoft\\Windows NT\\Driver Signing</code>. Modifications to the code signing policy of a system are likely to be rare.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Event Triggered Execution: Unix Shell Configuration Modification - T1546.004, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Event Triggered Execution: Unix Shell Configuration Modification' are:\n\nWhile users may customize their shell profile files, there are only certain types of commands that typically appear in these files. Monitor for abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network when user profiles are loaded during the login process.\n\nMonitor for changes to <code>/etc/profile</code> and <code>/etc/profile.d</code>, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files. \n\nFor most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the <code>/etc/shells</code> file.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Event Triggered Execution: Unix Shell Configuration Modification - T1546.004, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Event Triggered Execution: Unix Shell Configuration Modification' are:\n\nWhile users may customize their shell profile files, there are only certain types of commands that typically appear in these files. Monitor for abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network when user profiles are loaded during the login process.\n\nMonitor for changes to <code>/etc/profile</code> and <code>/etc/profile.d</code>, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files. \n\nFor most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the <code>/etc/shells</code> file.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Boot or Logon Autostart Execution: Re-opened Applications (T1547.007)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Boot or Logon Autostart Execution: Re-opened Applications:\n\nMonitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Boot or Logon Autostart Execution: Re-opened Applications (T1547.007)",
      "answer": "Certainly. Here are some possible detection methods for Boot or Logon Autostart Execution: Re-opened Applications:\n\nMonitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Command and Scripting Interpreter: Windows Command Shell - T1059.003",
    "context": "",
    "output": "In order to detect Command and Scripting Interpreter: Windows Command Shell (T1059.003), you can apply the following detection options:\nUsage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Command and Scripting Interpreter: Windows Command Shell - T1059.003",
      "answer": "In order to detect Command and Scripting Interpreter: Windows Command Shell (T1059.003), you can apply the following detection options:\nUsage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Credentials from Password Stores: Keychain' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Credentials from Password Stores: Keychain:\nUnlocking the keychain and using passwords from it is a very common process, so there is likely to be a lot of noise in any detection technique. Monitoring of system calls to the keychain can help determine if there is a suspicious process trying to access it.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Credentials from Password Stores: Keychain' ",
      "answer": "Sure! Here are the detection options for MITRE Credentials from Password Stores: Keychain:\nUnlocking the keychain and using passwords from it is a very common process, so there is likely to be a lot of noise in any detection technique. Monitoring of system calls to the keychain can help determine if there is a suspicious process trying to access it.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Command and Scripting Interpreter: AutoHotKey & AutoIT",
    "context": "",
    "output": "Here are some possible detections for 'Command and Scripting Interpreter: AutoHotKey & AutoIT':\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Command and Scripting Interpreter: AutoHotKey & AutoIT",
      "answer": "Here are some possible detections for 'Command and Scripting Interpreter: AutoHotKey & AutoIT':\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Scheduled Task/Job: Scheduled Task' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Scheduled Task/Job: Scheduled Task:\nMonitor process execution from the <code>svchost.exe</code> in Windows 10 and the Windows Task Scheduler <code>taskeng.exe</code> for older versions of Windows.  If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service.  Several events will then be logged on scheduled task activity, including: \n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. \n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Scheduled Task/Job: Scheduled Task' ",
      "answer": "Sure! Here are the detection options for MITRE Scheduled Task/Job: Scheduled Task:\nMonitor process execution from the <code>svchost.exe</code> in Windows 10 and the Windows Task Scheduler <code>taskeng.exe</code> for older versions of Windows.  If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service.  Several events will then be logged on scheduled task activity, including: \n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. \n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Account Manipulation: SSH Authorized Keys (T1098.004)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nUse file integrity monitoring to detect changes made to the <code>authorized_keys</code> file for each user on a system. Monitor for suspicious processes modifying the <code>authorized_keys</code> file. In cloud environments, monitor instances for modification of metadata and configurations.\n\nMonitor for changes to and suspicious processes modifiying <code>/etc/ssh/sshd_config</code>.\n\nFor network infrastructure devices, collect AAA logging to monitor for rogue SSH keys being added to accounts.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Account Manipulation: SSH Authorized Keys (T1098.004)",
      "answer": "Detections for the following MITRE attack technique:\n\nUse file integrity monitoring to detect changes made to the <code>authorized_keys</code> file for each user on a system. Monitor for suspicious processes modifying the <code>authorized_keys</code> file. In cloud environments, monitor instances for modification of metadata and configurations.\n\nMonitor for changes to and suspicious processes modifiying <code>/etc/ssh/sshd_config</code>.\n\nFor network infrastructure devices, collect AAA logging to monitor for rogue SSH keys being added to accounts.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor processes for those that may be used to modify binary headers. Monitor file systems for changes to application binaries and invalid checksums/signatures. Changes to binaries that do not line up with application updates or patches are also extremely suspicious.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Event Triggered Execution: LC_LOAD_DYLIB Addition",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor processes for those that may be used to modify binary headers. Monitor file systems for changes to application binaries and invalid checksums/signatures. Changes to binaries that do not line up with application updates or patches are also extremely suspicious.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Event Triggered Execution: LC_LOAD_DYLIB Addition",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: System Binary Proxy Execution (T1218)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.\n\nMonitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: System Binary Proxy Execution (T1218)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.\n\nMonitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Traffic Signaling (T1205)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Traffic Signaling:\n\nRecord network packets sent to and from the system, looking for extraneous packets that do not belong to established flows.\n\nThe Wake-on-LAN magic packet consists of 6 bytes of <code>FF</code> followed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Traffic Signaling (T1205)",
      "answer": "Certainly. Here are some possible detection methods for Traffic Signaling:\n\nRecord network packets sent to and from the system, looking for extraneous packets that do not belong to established flows.\n\nThe Wake-on-LAN magic packet consists of 6 bytes of <code>FF</code> followed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Cloud Storage Object Discovery - T1619, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Cloud Storage Object Discovery' are:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained. \nMonitor cloud logs for API calls used for file or object enumeration for unusual activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Cloud Storage Object Discovery - T1619, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Cloud Storage Object Discovery' are:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained. \nMonitor cloud logs for API calls used for file or object enumeration for unusual activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Remote Services: VNC",
    "context": "",
    "output": "Here are some possible detections for 'Remote Services: VNC':\n\nUse of VNC may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC.\n\nOn macOS systems <code>log show --predicate 'process = \"screensharingd\" and eventMessage contains \"Authentication:\"'</code> can be used to review incoming VNC connection attempts for suspicious activity.\n\nMonitor for use of built-in debugging environment variables (such as those containing credentials or other sensitive information) as well as test/default users on VNC servers, as these can leave openings for adversaries to abuse.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Remote Services: VNC",
      "answer": "Here are some possible detections for 'Remote Services: VNC':\n\nUse of VNC may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC.\n\nOn macOS systems <code>log show --predicate 'process = \"screensharingd\" and eventMessage contains \"Authentication:\"'</code> can be used to review incoming VNC connection attempts for suspicious activity.\n\nMonitor for use of built-in debugging environment variables (such as those containing credentials or other sensitive information) as well as test/default users on VNC servers, as these can leave openings for adversaries to abuse.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Virtualization/Sandbox Evasion: User Activity Based Checks?",
    "context": "",
    "output": "Here are some possible detections for 'Virtualization/Sandbox Evasion: User Activity Based Checks':\n\nUser activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Virtualization/Sandbox Evasion: User Activity Based Checks",
      "answer": "Here are some possible detections for 'Virtualization/Sandbox Evasion: User Activity Based Checks':\n\nUser activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Taint Shared Content - T1080, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Taint Shared Content' are:\n\nProcesses that write or overwrite many files to a network shared directory may be suspicious. Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.\n\nFrequently scan shared network directories for malicious files, hidden files, .LNK files, and other file types that may not typical exist in directories used to share specific types of content.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Taint Shared Content - T1080, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Taint Shared Content' are:\n\nProcesses that write or overwrite many files to a network shared directory may be suspicious. Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.\n\nFrequently scan shared network directories for malicious files, hidden files, .LNK files, and other file types that may not typical exist in directories used to share specific types of content.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Content Injection - T1659",
    "context": "",
    "output": "In order to detect Content Injection (T1659), you can apply the following detection options:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Content Injection - T1659",
      "answer": "In order to detect Content Injection (T1659), you can apply the following detection options:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Serverless Execution' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Serverless Execution:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Serverless Execution' ",
      "answer": "Sure! Here are the detection options for MITRE Serverless Execution:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Acquire Access - T1650, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Acquire Access' are:\n\nMuch of this takes place outside the visibility of the target organization, making detection difficult for defenders. \n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Acquire Access - T1650, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Acquire Access' are:\n\nMuch of this takes place outside the visibility of the target organization, making detection difficult for defenders. \n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Search Victim-Owned Websites",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Search Victim-Owned Websites",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Multi-Factor Authentication Interception' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Multi-Factor Authentication Interception:\nDetecting use of proxied smart card connections by an adversary may be difficult because it requires the token to be inserted into a system; thus it is more likely to be in use by a legitimate user and blend in with other network behavior.\n\nSimilar to Input Capture, keylogging activity can take various forms but can may be detected via installation of a driver, setting a hook, or usage of particular API calls associated with polling to intercept keystrokes.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Multi-Factor Authentication Interception' ",
      "answer": "Sure! Here are the detection options for MITRE Multi-Factor Authentication Interception:\nDetecting use of proxied smart card connections by an adversary may be difficult because it requires the token to be inserted into a system; thus it is more likely to be in use by a legitimate user and blend in with other network behavior.\n\nSimilar to Input Capture, keylogging activity can take various forms but can may be detected via installation of a driver, setting a hook, or usage of particular API calls associated with polling to intercept keystrokes.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Gather Victim Org Information: Determine Physical Locations?",
    "context": "",
    "output": "Here are some possible detections for 'Gather Victim Org Information: Determine Physical Locations':\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Gather Victim Org Information: Determine Physical Locations",
      "answer": "Here are some possible detections for 'Gather Victim Org Information: Determine Physical Locations':\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: System Network Configuration Discovery: Internet Connection Discovery",
    "context": "",
    "output": "Here are some possible detections for 'System Network Configuration Discovery: Internet Connection Discovery':\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Command and Control, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to check Internet connectivity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: System Network Configuration Discovery: Internet Connection Discovery",
      "answer": "Here are some possible detections for 'System Network Configuration Discovery: Internet Connection Discovery':\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Command and Control, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to check Internet connectivity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Data Manipulation: Stored Data Manipulation - T1565.001, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Data Manipulation: Stored Data Manipulation' are:\n\nWhere applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Data Manipulation: Stored Data Manipulation - T1565.001, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Data Manipulation: Stored Data Manipulation' are:\n\nWhere applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Server Software Component: Terminal Services DLL - T1505.005",
    "context": "",
    "output": "In order to detect Server Software Component: Terminal Services DLL (T1505.005), you can apply the following detection options:\nMonitor for changes to Registry keys associated with <code>ServiceDll</code> and other subkey values under <code>HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\</code>.\n\nMonitor unexpected changes and/or interactions with <code>termsrv.dll</code>, which is typically stored in <code>%SystemRoot%\\System32\\</code>.\n\nMonitor commands as well as  processes and arguments for potential adversary actions to modify Registry values (ex: <code>reg.exe</code>) or modify/replace the legitimate <code>termsrv.dll</code>.\n\nMonitor module loads by the Terminal Services process (ex: <code>svchost.exe -k termsvcs</code>) for unexpected DLLs (the default is <code>%SystemRoot%\\System32\\termsrv.dll</code>, though an adversary could also use Match Legitimate Name or Location on a malicious payload).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Server Software Component: Terminal Services DLL - T1505.005",
      "answer": "In order to detect Server Software Component: Terminal Services DLL (T1505.005), you can apply the following detection options:\nMonitor for changes to Registry keys associated with <code>ServiceDll</code> and other subkey values under <code>HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\</code>.\n\nMonitor unexpected changes and/or interactions with <code>termsrv.dll</code>, which is typically stored in <code>%SystemRoot%\\System32\\</code>.\n\nMonitor commands as well as  processes and arguments for potential adversary actions to modify Registry values (ex: <code>reg.exe</code>) or modify/replace the legitimate <code>termsrv.dll</code>.\n\nMonitor module loads by the Terminal Services process (ex: <code>svchost.exe -k termsvcs</code>) for unexpected DLLs (the default is <code>%SystemRoot%\\System32\\termsrv.dll</code>, though an adversary could also use Match Legitimate Name or Location on a malicious payload).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Account Discovery (T1087)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nMonitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Account Discovery (T1087)",
      "answer": "Detections for the following MITRE attack technique:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nMonitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Hijack Execution Flow: Dylib Hijacking?",
    "context": "",
    "output": "Here are some possible detections for 'Hijack Execution Flow: Dylib Hijacking':\n\nMonitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process. \n\nRun path dependent libraries can include <code>LC_LOAD_DYLIB</code>, <code>LC_LOAD_WEAK_DYLIB</code>, and <code>LC_RPATH</code>. Other special keywords are recognized by the macOS loader are <code>@rpath</code>, <code>@loader_path</code>, and <code>@executable_path</code>. These loader instructions can be examined for individual binaries or frameworks using the <code>otool -l</code> command. Objective-See's Dylib Hijacking Scanner can be used to identify applications vulnerable to dylib hijacking.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Hijack Execution Flow: Dylib Hijacking",
      "answer": "Here are some possible detections for 'Hijack Execution Flow: Dylib Hijacking':\n\nMonitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process. \n\nRun path dependent libraries can include <code>LC_LOAD_DYLIB</code>, <code>LC_LOAD_WEAK_DYLIB</code>, and <code>LC_RPATH</code>. Other special keywords are recognized by the macOS loader are <code>@rpath</code>, <code>@loader_path</code>, and <code>@executable_path</code>. These loader instructions can be examined for individual binaries or frameworks using the <code>otool -l</code> command. Objective-See's Dylib Hijacking Scanner can be used to identify applications vulnerable to dylib hijacking.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor processes, command-line arguments, and logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Account Discovery: Cloud Account",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor processes, command-line arguments, and logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Account Discovery: Cloud Account",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Scheduled Task/Job: Cron (T1053.003)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Scheduled Task/Job: Cron:\n\nMonitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.  \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Scheduled Task/Job: Cron (T1053.003)",
      "answer": "Certainly. Here are some possible detection methods for Scheduled Task/Job: Cron:\n\nMonitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.  \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Look for attempts to read/write to sensitive locations like the master boot record and the disk partition table. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation. Monitor for unusual kernel driver installation activity.\n\nFor network infrastructure devices, collect AAA logging to monitor for `format` commands being run to erase the file structure and prevent recovery of the device.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Disk Wipe: Disk Structure Wipe",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Look for attempts to read/write to sensitive locations like the master boot record and the disk partition table. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation. Monitor for unusual kernel driver installation activity.\n\nFor network infrastructure devices, collect AAA logging to monitor for `format` commands being run to erase the file structure and prevent recovery of the device.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Disk Wipe: Disk Structure Wipe",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: System Information Discovery (T1082)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, Network Device CLI commands may also be used to gather  detailed system information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use  commands being run by non-standard users from non-standard locations. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nIn cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: System Information Discovery (T1082)",
      "answer": "Detections for the following MITRE attack technique:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, Network Device CLI commands may also be used to gather  detailed system information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use  commands being run by non-standard users from non-standard locations. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nIn cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.   Also monitor for network protocols  and other replication requests from IPs not associated with known domain controllers.\n\nNote: Domain controllers may not log replication requests originating from the default domain controller account.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: OS Credential Dumping: DCSync",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.   Also monitor for network protocols  and other replication requests from IPs not associated with known domain controllers.\n\nNote: Domain controllers may not log replication requests originating from the default domain controller account.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: OS Credential Dumping: DCSync",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: ?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Compromise Infrastructure: Network Devices",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: ",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Compromise Infrastructure: Network Devices",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Data Staged: Remote Data Staging (T1074.002)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Data Staged: Remote Data Staging:\n\nProcesses that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Data Staged: Remote Data Staging (T1074.002)",
      "answer": "Certainly. Here are some possible detection methods for Data Staged: Remote Data Staging:\n\nProcesses that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Scheduled Task/Job: Container Orchestration Job",
    "context": "",
    "output": "Here are some possible detections for 'Scheduled Task/Job: Container Orchestration Job':\n\nMonitor for the anomalous creation of scheduled jobs in container orchestration environments. Use logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Scheduled Task/Job: Container Orchestration Job",
      "answer": "Here are some possible detections for 'Scheduled Task/Job: Container Orchestration Job':\n\nMonitor for the anomalous creation of scheduled jobs in container orchestration environments. Use logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Consider comparing a copy of the network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS.  The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.  \n\nReview command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.  Check boot information including system uptime, image booted, and startup configuration to determine if results are consistent with expected behavior in the environment.  Monitor unusual connections or connection attempts to the device that may specifically target TFTP or other file-sharing protocols.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Pre-OS Boot: TFTP Boot",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Consider comparing a copy of the network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS.  The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.  \n\nReview command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.  Check boot information including system uptime, image booted, and startup configuration to determine if results are consistent with expected behavior in the environment.  Monitor unusual connections or connection attempts to the device that may specifically target TFTP or other file-sharing protocols.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Pre-OS Boot: TFTP Boot",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Execution Guardrails (T1480)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Execution Guardrails:\n\nDetecting the use of guardrails may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Execution Guardrails (T1480)",
      "answer": "Certainly. Here are some possible detection methods for Execution Guardrails:\n\nDetecting the use of guardrails may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Encrypted Channel: Symmetric Cryptography (T1573.001)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Encrypted Channel: Symmetric Cryptography:\n\nWith symmetric encryption, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Encrypted Channel: Symmetric Cryptography (T1573.001)",
      "answer": "Certainly. Here are some possible detection methods for Encrypted Channel: Symmetric Cryptography:\n\nWith symmetric encryption, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Obfuscated Files or Information: Encrypted/Encoded File?",
    "context": "",
    "output": "Here are some possible detections for 'Obfuscated Files or Information: Encrypted/Encoded File':\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Obfuscated Files or Information: Encrypted/Encoded File",
      "answer": "Here are some possible detections for 'Obfuscated Files or Information: Encrypted/Encoded File':\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: System Binary Proxy Execution: MMC (T1218.014)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor processes and command-line parameters for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious. \n\nMonitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as <code>services.msc</code> or <code>eventvwr.msc</code>. Invoking non-Microsoft .msc files may be an indicator of malicious activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: System Binary Proxy Execution: MMC (T1218.014)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor processes and command-line parameters for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious. \n\nMonitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as <code>services.msc</code> or <code>eventvwr.msc</code>. Invoking non-Microsoft .msc files may be an indicator of malicious activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Masquerading?",
    "context": "",
    "output": "Here are some possible detections for 'Masquerading':\n\nCollect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.  Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.\n\nLook for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters\"\\u202E\", \"U+202E\", and \"%E2%80%AE\u201d.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Masquerading",
      "answer": "Here are some possible detections for 'Masquerading':\n\nCollect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.  Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.\n\nLook for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters\"\\u202E\", \"U+202E\", and \"%E2%80%AE\u201d.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Data from Network Shared Drive' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Data from Network Shared Drive:\nMonitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Data from Network Shared Drive' ",
      "answer": "Sure! Here are the detection options for MITRE Data from Network Shared Drive:\nMonitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Proxy: Domain Fronting?",
    "context": "",
    "output": "Here are some possible detections for 'Proxy: Domain Fronting':\n\nIf SSL inspection is in place or the traffic is not encrypted, the Host field of the HTTP header can be checked if it matches the HTTPS SNI or against a blocklist or allowlist of domain names.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Proxy: Domain Fronting",
      "answer": "Here are some possible detections for 'Proxy: Domain Fronting':\n\nIf SSL inspection is in place or the traffic is not encrypted, the Host field of the HTTP header can be checked if it matches the HTTPS SNI or against a blocklist or allowlist of domain names.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Network Denial of Service: Reflection Amplification (T1498.002)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Network Denial of Service: Reflection Amplification:\n\nDetection of reflection amplification can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a reflection amplification DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Network Denial of Service: Reflection Amplification (T1498.002)",
      "answer": "Certainly. Here are some possible detection methods for Network Denial of Service: Reflection Amplification:\n\nDetection of reflection amplification can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a reflection amplification DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Process Discovery (T1057)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nFor network infrastructure devices, collect AAA logging to monitor for `show` commands being run by non-standard users from non-standard locations.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Process Discovery (T1057)",
      "answer": "Detections for the following MITRE attack technique:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nFor network infrastructure devices, collect AAA logging to monitor for `show` commands being run by non-standard users from non-standard locations.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Phishing - T1566?",
    "context": "",
    "output": "In order to detect Phishing (T1566), you can apply the following detection options:\nNetwork intrusion detection systems and email gateways can be used to detect phishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.\n\nURL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.\n\nBecause most common third-party services used for phishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Many possible detections of follow-on behavior may take place once User Execution occurs.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Phishing - T1566",
      "answer": "In order to detect Phishing (T1566), you can apply the following detection options:\nNetwork intrusion detection systems and email gateways can be used to detect phishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.\n\nURL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.\n\nBecause most common third-party services used for phishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Many possible detections of follow-on behavior may take place once User Execution occurs.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Modify Registry - T1112, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Modify Registry' are:\n\nModifications to the Registry are normal and occur throughout typical use of the Windows operating system. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods).  Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. The Registry may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor for processes, command-line arguments, and API calls associated with concealing Registry keys, such as Reghide.  Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns  and RegDelNull .",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Modify Registry - T1112, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Modify Registry' are:\n\nModifications to the Registry are normal and occur throughout typical use of the Windows operating system. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods).  Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. The Registry may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor for processes, command-line arguments, and API calls associated with concealing Registry keys, such as Reghide.  Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns  and RegDelNull .",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Communication Through Removable Media",
    "context": "",
    "output": "Here are some possible detections for 'Communication Through Removable Media':\n\nMonitor file access on removable media. Detect processes that execute when removable media is mounted.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Communication Through Removable Media",
      "answer": "Here are some possible detections for 'Communication Through Removable Media':\n\nMonitor file access on removable media. Detect processes that execute when removable media is mounted.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Access Token Manipulation: SID-History Injection (T1134.005)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Access Token Manipulation: SID-History Injection:\n\nExamine data in user\u2019s SID-History attributes using the PowerShell <code>Get-ADUser</code> cmdlet , especially users who have SID-History values from the same domain.  Also monitor account management events on Domain Controllers for successful and failed changes to SID-History.  \n\nMonitor for Windows API calls to the <code>DsAddSidHistory</code> function.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Access Token Manipulation: SID-History Injection (T1134.005)",
      "answer": "Certainly. Here are some possible detection methods for Access Token Manipulation: SID-History Injection:\n\nExamine data in user\u2019s SID-History attributes using the PowerShell <code>Get-ADUser</code> cmdlet , especially users who have SID-History values from the same domain.  Also monitor account management events on Domain Controllers for successful and failed changes to SID-History.  \n\nMonitor for Windows API calls to the <code>DsAddSidHistory</code> function.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Supply Chain Compromise' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Supply Chain Compromise:\nUse verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. Perform physical inspection of hardware to look for potential tampering.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Supply Chain Compromise' ",
      "answer": "Sure! Here are the detection options for MITRE Supply Chain Compromise:\nUse verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. Perform physical inspection of hardware to look for potential tampering.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Endpoint Denial of Service: Service Exhaustion Flood (T1499.002)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Endpoint Denial of Service: Service Exhaustion Flood:\n\nDetection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\n\nExternally monitor the availability of services that may be targeted by an Endpoint DoS.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Endpoint Denial of Service: Service Exhaustion Flood (T1499.002)",
      "answer": "Certainly. Here are some possible detection methods for Endpoint Denial of Service: Service Exhaustion Flood:\n\nDetection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\n\nExternally monitor the availability of services that may be targeted by an Endpoint DoS.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Process Injection (T1055)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Process Injection:\n\nMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique. \n\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \n\nMonitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.       \n\nMonitor for named pipe creation and connection events (Event IDs 17 and 18) for possible indicators of infected processes with external modules. \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Process Injection (T1055)",
      "answer": "Certainly. Here are some possible detection methods for Process Injection:\n\nMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique. \n\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \n\nMonitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.       \n\nMonitor for named pipe creation and connection events (Event IDs 17 and 18) for possible indicators of infected processes with external modules. \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: System Binary Proxy Execution: Regsvr32 - T1218.010, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'System Binary Proxy Execution: Regsvr32' are:\n\nUse process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: System Binary Proxy Execution: Regsvr32 - T1218.010, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'System Binary Proxy Execution: Regsvr32' are:\n\nUse process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Command and Scripting Interpreter: PowerShell - T1059.001",
    "context": "",
    "output": "In order to detect Command and Scripting Interpreter: PowerShell (T1059.001), you can apply the following detection options:\nIf proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nMonitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations).  PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features. An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.\n\nConsider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the <code>EngineVersion</code> field (which may also be relevant to detecting a potential Downgrade Attack) as well as if PowerShell is running locally or remotely in the <code>HostName</code> field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Command and Scripting Interpreter: PowerShell - T1059.001",
      "answer": "In order to detect Command and Scripting Interpreter: PowerShell (T1059.001), you can apply the following detection options:\nIf proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nMonitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations).  PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features. An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.\n\nConsider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the <code>EngineVersion</code> field (which may also be relevant to detecting a potential Downgrade Attack) as well as if PowerShell is running locally or remotely in the <code>HostName</code> field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.\n\nMonitor for DNS traffic to/from known-bad or suspicious domains.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Application Layer Protocol: DNS",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.\n\nMonitor for DNS traffic to/from known-bad or suspicious domains.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Application Layer Protocol: DNS",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Remote Access Software - T1219, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Remote Access Software' are:\n\nMonitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.\n\nDomain Fronting may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Remote Access Software - T1219, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Remote Access Software' are:\n\nMonitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.\n\nDomain Fronting may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Develop Capabilities: Malware - T1587.001, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Develop Capabilities: Malware' are:\n\nConsider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Develop Capabilities: Malware - T1587.001, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Develop Capabilities: Malware' are:\n\nConsider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Modify Authentication Process: Conditional Access Policies (T1556.009)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Modify Authentication Process: Conditional Access Policies (T1556.009)",
      "answer": "Detections for the following MITRE attack technique:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor and analyze logs from host-based detection mechanisms, such as Sysmon, for events such as process creations that include or are resulting from parameters associated with invoking programs/commands/files and/or spawning child processes/network connections.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Indirect Command Execution",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor and analyze logs from host-based detection mechanisms, such as Sysmon, for events such as process creations that include or are resulting from parameters associated with invoking programs/commands/files and/or spawning child processes/network connections.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Indirect Command Execution",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: System Services (T1569)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor for command line invocations of tools capable of modifying services that doesn\u2019t correspond to normal usage patterns and known software, patch cycles, etc. Also monitor for changes to executables and other files associated with services. Changes to Windows services may also be reflected in the Registry.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: System Services (T1569)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor for command line invocations of tools capable of modifying services that doesn\u2019t correspond to normal usage patterns and known software, patch cycles, etc. Also monitor for changes to executables and other files associated with services. Changes to Windows services may also be reflected in the Registry.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Hijack Execution Flow: COR_PROFILER",
    "context": "",
    "output": "Here are some possible detections for 'Hijack Execution Flow: COR_PROFILER':\n\nFor detecting system and user scope abuse of the COR_PROFILER, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools. Extra scrutiny should be placed on suspicious modification of these Registry keys by command line tools like wmic.exe, setx.exe, and Reg, monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection. For system, user, and process scope abuse of the COR_PROFILER, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior. Consider monitoring for DLL files that are associated with COR_PROFILER environment variables.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Hijack Execution Flow: COR_PROFILER",
      "answer": "Here are some possible detections for 'Hijack Execution Flow: COR_PROFILER':\n\nFor detecting system and user scope abuse of the COR_PROFILER, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools. Extra scrutiny should be placed on suspicious modification of these Registry keys by command line tools like wmic.exe, setx.exe, and Reg, monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection. For system, user, and process scope abuse of the COR_PROFILER, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior. Consider monitoring for DLL files that are associated with COR_PROFILER environment variables.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Exploitation for Credential Access?",
    "context": "",
    "output": "Here are some possible detections for 'Exploitation for Credential Access':\n\nDetecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Exploitation for Credential Access",
      "answer": "Here are some possible detections for 'Exploitation for Credential Access':\n\nDetecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: System Location Discovery: System Language Discovery (T1614.001)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for System Location Discovery: System Language Discovery:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system language information. This may include calls to various API functions and interaction with system configuration settings such as the Windows Registry.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: System Location Discovery: System Language Discovery (T1614.001)",
      "answer": "Certainly. Here are some possible detection methods for System Location Discovery: System Language Discovery:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system language information. This may include calls to various API functions and interaction with system configuration settings such as the Windows Registry.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Replication Through Removable Media - T1091",
    "context": "",
    "output": "In order to detect Replication Through Removable Media (T1091), you can apply the following detection options:\nMonitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Replication Through Removable Media - T1091",
      "answer": "In order to detect Replication Through Removable Media (T1091), you can apply the following detection options:\nMonitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Boot or Logon Autostart Execution: Shortcut Modification' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Boot or Logon Autostart Execution: Shortcut Modification:\nSince a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.\n\nMonitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Boot or Logon Autostart Execution: Shortcut Modification' ",
      "answer": "Sure! Here are the detection options for MITRE Boot or Logon Autostart Execution: Shortcut Modification:\nSince a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.\n\nMonitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Valid Accounts: Default Accounts' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Valid Accounts: Default Accounts:\nMonitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Valid Accounts: Default Accounts' ",
      "answer": "Sure! Here are the detection options for MITRE Valid Accounts: Default Accounts:\nMonitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex: <code>powershell \u2013v 2</code>). Also monitor for other abnormal events, such as execution of and/or processes spawning from a version of a tool that is not expected in the environment.\n\nMonitor for Windows event ID (EID) 400, specifically the <code>EngineVersion</code> field which shows the version of PowerShell running and may highlight a malicious downgrade attack.\n\nMonitor network data to detect cases where HTTP is used instead of HTTPS.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Impair Defenses: Downgrade Attack",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex: <code>powershell \u2013v 2</code>). Also monitor for other abnormal events, such as execution of and/or processes spawning from a version of a tool that is not expected in the environment.\n\nMonitor for Windows event ID (EID) 400, specifically the <code>EngineVersion</code> field which shows the version of PowerShell running and may highlight a malicious downgrade attack.\n\nMonitor network data to detect cases where HTTP is used instead of HTTPS.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Impair Defenses: Downgrade Attack",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Modify Cloud Compute Infrastructure: Revert Cloud Instance",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Modify Cloud Compute Infrastructure: Revert Cloud Instance",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Office Application Startup (T1137)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Office Application Startup:\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.\n\nMany Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.\n\nMicrosoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output. SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Office Application Startup (T1137)",
      "answer": "Certainly. Here are some possible detection methods for Office Application Startup:\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.\n\nMany Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.\n\nMicrosoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output. SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Account Manipulation: Additional Cloud Credentials?",
    "context": "",
    "output": "Here are some possible detections for 'Account Manipulation: Additional Cloud Credentials':\n\nMonitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.\n\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Account Manipulation: Additional Cloud Credentials",
      "answer": "Here are some possible detections for 'Account Manipulation: Additional Cloud Credentials':\n\nMonitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.\n\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Impair Defenses: Impair Command History Logging (T1562.003)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nCorrelating a user session with a distinct lack of new commands in their <code>.bash_history</code> can be a clue to suspicious behavior. Additionally, users checking or changing their <code>HISTCONTROL</code>, <code>HISTFILE</code>, or <code>HISTFILESIZE</code> environment variables may be suspicious.\n\nMonitor for modification of PowerShell command history settings through processes being created with <code>-HistorySaveStyle SaveNothing</code> command-line arguments and use of the PowerShell commands <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code> and <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. Further, Network Device CLI commands may also be used to clear or disable historical log data with built-in features native to the network device platform.  Monitor such command activity for unexpected or unauthorized use of commands being run by non-standard users from non-standard locations.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Impair Defenses: Impair Command History Logging (T1562.003)",
      "answer": "Detections for the following MITRE attack technique:\n\nCorrelating a user session with a distinct lack of new commands in their <code>.bash_history</code> can be a clue to suspicious behavior. Additionally, users checking or changing their <code>HISTCONTROL</code>, <code>HISTFILE</code>, or <code>HISTFILESIZE</code> environment variables may be suspicious.\n\nMonitor for modification of PowerShell command history settings through processes being created with <code>-HistorySaveStyle SaveNothing</code> command-line arguments and use of the PowerShell commands <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code> and <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. Further, Network Device CLI commands may also be used to clear or disable historical log data with built-in features native to the network device platform.  Monitor such command activity for unexpected or unauthorized use of commands being run by non-standard users from non-standard locations.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Server Software Component - T1505, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Server Software Component' are:\n\nConsider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.\n\nProcess monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Server Software Component - T1505, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Server Software Component' are:\n\nConsider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.\n\nProcess monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Obtain Capabilities: Tool (T1588.002)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nIn some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in Cobalt Strike payloads.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Obtain Capabilities: Tool (T1588.002)",
      "answer": "Detections for the following MITRE attack technique:\n\nIn some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in Cobalt Strike payloads.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Impair Defenses: Disable or Modify Cloud Logs (T1562.008)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor logs for API calls to disable logging. In AWS, monitor for: <code>StopLogging</code> and <code>DeleteTrail</code>. In GCP, monitor for: <code>google.logging.v2.ConfigServiceV2.UpdateSink</code>.  In Azure, monitor for <code>az monitor diagnostic-settings delete</code>. Additionally, a sudden loss of a log source may indicate that it has been disabled.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Impair Defenses: Disable or Modify Cloud Logs (T1562.008)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor logs for API calls to disable logging. In AWS, monitor for: <code>StopLogging</code> and <code>DeleteTrail</code>. In GCP, monitor for: <code>google.logging.v2.ConfigServiceV2.UpdateSink</code>.  In Azure, monitor for <code>az monitor diagnostic-settings delete</code>. Additionally, a sudden loss of a log source may indicate that it has been disabled.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Network intrusion detection systems and email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing campaigns.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Internal Spearphishing",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Network intrusion detection systems and email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing campaigns.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Internal Spearphishing",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Transfer Data to Cloud Account (T1537)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor account activity for attempts to share data, snapshots, or backups with untrusted or unusual accounts on the same cloud service provider. Monitor for anomalous file transfer activity between accounts and to untrusted VPCs. \n\nIn AWS, sharing an Elastic Block Store (EBS) snapshot, either with specified users or publicly, generates a ModifySnapshotAttribute event in CloudTrail logs. Similarly, in Azure, creating a Shared Access Signature (SAS) URI for a Virtual Hard Disk (VHS) snapshot generates a \"Get Snapshot SAS URL\" event in Activity Logs.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Transfer Data to Cloud Account (T1537)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor account activity for attempts to share data, snapshots, or backups with untrusted or unusual accounts on the same cloud service provider. Monitor for anomalous file transfer activity between accounts and to untrusted VPCs. \n\nIn AWS, sharing an Elastic Block Store (EBS) snapshot, either with specified users or publicly, generates a ModifySnapshotAttribute event in CloudTrail logs. Similarly, in Azure, creating a Shared Access Signature (SAS) URI for a Virtual Hard Disk (VHS) snapshot generates a \"Get Snapshot SAS URL\" event in Activity Logs.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Dynamic Resolution: Domain Generation Algorithms' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Dynamic Resolution: Domain Generation Algorithms:\nDetecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more. CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.\n\nMachine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA. Another approach is to use deep learning to classify domains as DGA-generated.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Dynamic Resolution: Domain Generation Algorithms' ",
      "answer": "Sure! Here are the detection options for MITRE Dynamic Resolution: Domain Generation Algorithms:\nDetecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more. CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.\n\nMachine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA. Another approach is to use deep learning to classify domains as DGA-generated.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Hijack Execution Flow: Services File Permissions Weakness - T1574.010",
    "context": "",
    "output": "In order to detect Hijack Execution Flow: Services File Permissions Weakness (T1574.010), you can apply the following detection options:\nLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Hijack Execution Flow: Services File Permissions Weakness - T1574.010",
      "answer": "In order to detect Hijack Execution Flow: Services File Permissions Weakness (T1574.010), you can apply the following detection options:\nLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Unsecured Credentials: Cloud Instance Metadata API (T1552.005)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor access to the Instance Metadata API and look for anomalous queries.\n\nIt may be possible to detect adversary use of credentials they have obtained such as in Valid Accounts.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Unsecured Credentials: Cloud Instance Metadata API (T1552.005)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor access to the Instance Metadata API and look for anomalous queries.\n\nIt may be possible to detect adversary use of credentials they have obtained such as in Valid Accounts.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: BITS runs as a service and its status can be checked with the Sc query utility (<code>sc query bits</code>). Active BITS tasks can be enumerated using the BITSAdmin tool (<code>bitsadmin /list /allusers /verbose</code>).\n\nMonitor usage of the BITSAdmin tool (especially the \u2018Transfer\u2019, 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options) Admin logs, PowerShell logs, and the Windows Event log for BITS activity. Also consider investigating more detailed information about jobs by parsing the BITS job database.\n\nMonitor and analyze network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: BITS Jobs",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: BITS runs as a service and its status can be checked with the Sc query utility (<code>sc query bits</code>). Active BITS tasks can be enumerated using the BITSAdmin tool (<code>bitsadmin /list /allusers /verbose</code>).\n\nMonitor usage of the BITSAdmin tool (especially the \u2018Transfer\u2019, 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options) Admin logs, PowerShell logs, and the Windows Event log for BITS activity. Also consider investigating more detailed information about jobs by parsing the BITS job database.\n\nMonitor and analyze network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).",
      "answer": "A technique that can be detected with the MITRE detections listed above is: BITS Jobs",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Network Boundary Bridging: Network Address Translation Traversal - T1599.001, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Network Boundary Bridging: Network Address Translation Traversal' are:\n\nConsider monitoring network traffic on both interfaces of border network devices.  Compare packets transmitted by the device between networks to look for signs of NAT being implemented.  Packets which have their IP addresses changed should still have the same size and contents in the data encapsulated beyond Layer 3.  In some cases, Port Address Translation (PAT) may also be used by an adversary.\n\nMonitor the border network device\u2019s configuration to determine if any unintended NAT rules have been added without authorization.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Network Boundary Bridging: Network Address Translation Traversal - T1599.001, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Network Boundary Bridging: Network Address Translation Traversal' are:\n\nConsider monitoring network traffic on both interfaces of border network devices.  Compare packets transmitted by the device between networks to look for signs of NAT being implemented.  Packets which have their IP addresses changed should still have the same size and contents in the data encapsulated beyond Layer 3.  In some cases, Port Address Translation (PAT) may also be used by an adversary.\n\nMonitor the border network device\u2019s configuration to determine if any unintended NAT rules have been added without authorization.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Masquerading: Masquerade File Type (T1036.008)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Masquerading: Masquerade File Type:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Masquerading: Masquerade File Type (T1036.008)",
      "answer": "Certainly. Here are some possible detection methods for Masquerading: Masquerade File Type:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Network Sniffing (T1040)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Network Sniffing:\n\nDetecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a Adversary-in-the-Middle attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes.\n\nIn cloud-based environments, monitor for the creation of new traffic mirrors or modification of existing traffic mirrors. For network infrastructure devices, collect AAA logging to monitor for the capture of network traffic.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Network Sniffing (T1040)",
      "answer": "Certainly. Here are some possible detection methods for Network Sniffing:\n\nDetecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a Adversary-in-the-Middle attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes.\n\nIn cloud-based environments, monitor for the creation of new traffic mirrors or modification of existing traffic mirrors. For network infrastructure devices, collect AAA logging to monitor for the capture of network traffic.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Process Injection: Asynchronous Procedure Call",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Process Injection: Asynchronous Procedure Call",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Establish Accounts: Social Media Accounts (T1585.001)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Establish Accounts: Social Media Accounts:\n\nConsider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Spearphishing via Service).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Establish Accounts: Social Media Accounts (T1585.001)",
      "answer": "Certainly. Here are some possible detection methods for Establish Accounts: Social Media Accounts:\n\nConsider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Spearphishing via Service).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Account Discovery: Email Account",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Account Discovery: Email Account",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: OS Credential Dumping: NTDS - T1003.003, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'OS Credential Dumping: NTDS' are:\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping, especially attempts to access or copy the NTDS.dit.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: OS Credential Dumping: NTDS - T1003.003, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'OS Credential Dumping: NTDS' are:\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping, especially attempts to access or copy the NTDS.dit.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Active Scanning: Vulnerability Scanning' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Active Scanning: Vulnerability Scanning:\nMonitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Active Scanning: Vulnerability Scanning' ",
      "answer": "Sure! Here are the detection options for MITRE Active Scanning: Vulnerability Scanning:\nMonitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Hijack Execution Flow - T1574, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Hijack Execution Flow' are:\n\nMonitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.\n\nLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nMonitor for changes to environment variables, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.\n\nService changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information.  Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Hijack Execution Flow - T1574, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Hijack Execution Flow' are:\n\nMonitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.\n\nLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nMonitor for changes to environment variables, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.\n\nService changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information.  Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: The creation of a snapshot is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities such as the creation of one or more snapshots and the restoration of these snapshots by a new user account.\n\nIn AWS, CloudTrail logs capture the creation of snapshots and all API calls for AWS Backup as events. Using the information collected by CloudTrail, you can determine the request that was made, the IP address from which the request was made, which user made the request, when it was made, and additional details..\n\nIn Azure, the creation of a snapshot may be captured in Azure activity logs. Backup restoration events can also be detected through Azure Monitor Log Data by creating a custom alert for completed restore jobs.\n\nGoogle's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of the <code>gcloud compute instances create</code> command to create a new VM disk from a snapshot. It is also possible to detect the usage of the GCP API with the <code>\"sourceSnapshot\":</code> parameter pointed to <code>\"global/snapshots/BOOT_SNAPSHOT_NAME</code>.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Modify Cloud Compute Infrastructure: Create Snapshot",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: The creation of a snapshot is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities such as the creation of one or more snapshots and the restoration of these snapshots by a new user account.\n\nIn AWS, CloudTrail logs capture the creation of snapshots and all API calls for AWS Backup as events. Using the information collected by CloudTrail, you can determine the request that was made, the IP address from which the request was made, which user made the request, when it was made, and additional details..\n\nIn Azure, the creation of a snapshot may be captured in Azure activity logs. Backup restoration events can also be detected through Azure Monitor Log Data by creating a custom alert for completed restore jobs.\n\nGoogle's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of the <code>gcloud compute instances create</code> command to create a new VM disk from a snapshot. It is also possible to detect the usage of the GCP API with the <code>\"sourceSnapshot\":</code> parameter pointed to <code>\"global/snapshots/BOOT_SNAPSHOT_NAME</code>.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Modify Cloud Compute Infrastructure: Create Snapshot",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Remote Services: Remote Desktop Protocol - T1021.001, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Remote Services: Remote Desktop Protocol' are:\n\nUse of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Remote Services: Remote Desktop Protocol - T1021.001, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Remote Services: Remote Desktop Protocol' are:\n\nUse of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Hijack Execution Flow: Executable Installer File Permissions Weakness' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Hijack Execution Flow: Executable Installer File Permissions Weakness:\nLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Hijack Execution Flow: Executable Installer File Permissions Weakness' ",
      "answer": "Sure! Here are the detection options for MITRE Hijack Execution Flow: Executable Installer File Permissions Weakness:\nLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Masquerading: Double File Extension",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Masquerading: Double File Extension",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Gather Victim Network Information (T1590)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Gather Victim Network Information:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Gather Victim Network Information (T1590)",
      "answer": "Certainly. Here are some possible detection methods for Gather Victim Network Information:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: User Execution: Malicious File",
    "context": "",
    "output": "Here are some possible detections for 'User Execution: Malicious File':\n\nMonitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: User Execution: Malicious File",
      "answer": "Here are some possible detections for 'User Execution: Malicious File':\n\nMonitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder:\nMonitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.  Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder' ",
      "answer": "Sure! Here are the detection options for MITRE Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder:\nMonitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.  Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Search Open Technical Databases: DNS/Passive DNS (T1596.001)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Search Open Technical Databases: DNS/Passive DNS:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Search Open Technical Databases: DNS/Passive DNS (T1596.001)",
      "answer": "Certainly. Here are some possible detection methods for Search Open Technical Databases: DNS/Passive DNS:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Data from Information Repositories: Sharepoint (T1213.002)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nThe user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. . As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Data from Information Repositories: Sharepoint (T1213.002)",
      "answer": "Detections for the following MITRE attack technique:\n\nThe user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. . As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Weaken Encryption: Reduce Key Space",
    "context": "",
    "output": "Here are some possible detections for 'Weaken Encryption: Reduce Key Space':\n\nThere is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Weaken Encryption: Reduce Key Space",
      "answer": "Here are some possible detections for 'Weaken Encryption: Reduce Key Space':\n\nThere is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Exploitation of Remote Services - T1210",
    "context": "",
    "output": "In order to detect Exploitation of Remote Services (T1210), you can apply the following detection options:\nDetecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Exploitation of Remote Services - T1210",
      "answer": "In order to detect Exploitation of Remote Services (T1210), you can apply the following detection options:\nDetecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Process Injection: Ptrace System Calls' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Process Injection: Ptrace System Calls:\nMonitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.       \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Process Injection: Ptrace System Calls' ",
      "answer": "Sure! Here are the detection options for MITRE Process Injection: Ptrace System Calls:\nMonitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.       \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: System Script Proxy Execution?",
    "context": "",
    "output": "Here are some possible detections for 'System Script Proxy Execution':\n\nMonitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: System Script Proxy Execution",
      "answer": "Here are some possible detections for 'System Script Proxy Execution':\n\nMonitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Masquerading: Invalid Code Signature",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Masquerading: Invalid Code Signature",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Event Triggered Execution: Emond (T1546.014)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Event Triggered Execution: Emond:\n\nMonitor emond rules creation by checking for files created or modified in <code>/etc/emond.d/rules/</code> and <code>/private/var/db/emondClients</code>.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Event Triggered Execution: Emond (T1546.014)",
      "answer": "Certainly. Here are some possible detection methods for Event Triggered Execution: Emond:\n\nMonitor emond rules creation by checking for files created or modified in <code>/etc/emond.d/rules/</code> and <code>/private/var/db/emondClients</code>.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Exfiltration Over Web Service: Exfiltration to Text Storage Sites - T1567.003, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Exfiltration Over Web Service: Exfiltration to Text Storage Sites' are:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Exfiltration Over Web Service: Exfiltration to Text Storage Sites - T1567.003, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Exfiltration Over Web Service: Exfiltration to Text Storage Sites' are:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Stage Capabilities: SEO Poisoning' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Stage Capabilities: SEO Poisoning:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Stage Capabilities: SEO Poisoning' ",
      "answer": "Sure! Here are the detection options for MITRE Stage Capabilities: SEO Poisoning:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: System Binary Proxy Execution: Verclsid - T1218.012, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'System Binary Proxy Execution: Verclsid' are:\n\nUse process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: System Binary Proxy Execution: Verclsid - T1218.012, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'System Binary Proxy Execution: Verclsid' are:\n\nUse process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: File and Directory Discovery (T1083)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for File and Directory Discovery:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. Further, Network Device CLI commands may also be used to gather file and directory information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use of commands being run by non-standard users from non-standard locations.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: File and Directory Discovery (T1083)",
      "answer": "Certainly. Here are some possible detection methods for File and Directory Discovery:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. Further, Network Device CLI commands may also be used to gather file and directory information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use of commands being run by non-standard users from non-standard locations.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Compromise Infrastructure: Serverless' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Compromise Infrastructure: Serverless:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Compromise Infrastructure: Serverless' ",
      "answer": "Sure! Here are the detection options for MITRE Compromise Infrastructure: Serverless:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Exploitation for Client Execution - T1203",
    "context": "",
    "output": "In order to detect Exploitation for Client Execution (T1203), you can apply the following detection options:\nDetecting software exploitation may be difficult depending on the tools available. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the browser or Office processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Exploitation for Client Execution - T1203",
      "answer": "In order to detect Exploitation for Client Execution (T1203), you can apply the following detection options:\nDetecting software exploitation may be difficult depending on the tools available. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the browser or Office processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Access Token Manipulation: Create Process with Token - T1134.002, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Access Token Manipulation: Create Process with Token' are:\n\nIf an adversary is using a standard command-line shell (i.e. Windows Command Shell), analysts may detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts may detect token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior.\n\nAnalysts can also monitor for use of Windows APIs such as <code>CreateProcessWithTokenW</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Access Token Manipulation: Create Process with Token - T1134.002, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Access Token Manipulation: Create Process with Token' are:\n\nIf an adversary is using a standard command-line shell (i.e. Windows Command Shell), analysts may detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts may detect token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior.\n\nAnalysts can also monitor for use of Windows APIs such as <code>CreateProcessWithTokenW</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Hide Artifacts: Resource Forking?",
    "context": "",
    "output": "Here are some possible detections for 'Hide Artifacts: Resource Forking':\n\nIdentify files with the <code>com.apple.ResourceFork</code> extended attribute and large data amounts stored in resource forks. \n\nMonitor command-line activity leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Hide Artifacts: Resource Forking",
      "answer": "Here are some possible detections for 'Hide Artifacts: Resource Forking':\n\nIdentify files with the <code>com.apple.ResourceFork</code> extended attribute and large data amounts stored in resource forks. \n\nMonitor command-line activity leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Phishing for Information: Spearphishing Voice - T1598.004",
    "context": "",
    "output": "In order to detect Phishing for Information: Spearphishing Voice (T1598.004), you can apply the following detection options:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Phishing for Information: Spearphishing Voice - T1598.004",
      "answer": "In order to detect Phishing for Information: Spearphishing Voice (T1598.004), you can apply the following detection options:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Cloud Service Discovery - T1526",
    "context": "",
    "output": "In order to detect Cloud Service Discovery (T1526), you can apply the following detection options:\nCloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nNormal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Cloud Service Discovery - T1526",
      "answer": "In order to detect Cloud Service Discovery (T1526), you can apply the following detection options:\nCloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nNormal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Brute Force: Credential Stuffing (T1110.004)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Brute Force: Credential Stuffing:\n\nMonitor authentication logs for system and application login failures of Valid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Brute Force: Credential Stuffing (T1110.004)",
      "answer": "Certainly. Here are some possible detection methods for Brute Force: Credential Stuffing:\n\nMonitor authentication logs for system and application login failures of Valid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Input Capture: Keylogging (T1056.001)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Input Capture: Keylogging:\n\nKeyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`. Monitor the Registry and file system for such changes, monitor driver installs, and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Input Capture: Keylogging (T1056.001)",
      "answer": "Certainly. Here are some possible detection methods for Input Capture: Keylogging:\n\nKeyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`. Monitor the Registry and file system for such changes, monitor driver installs, and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Brute Force' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Brute Force:\nMonitor authentication logs for system and application login failures of Valid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials. Also monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Brute Force' ",
      "answer": "Sure! Here are the detection options for MITRE Brute Force:\nMonitor authentication logs for system and application login failures of Valid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials. Also monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Account Manipulation: Additional Email Delegate Permissions' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Account Manipulation: Additional Email Delegate Permissions:\nMonitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.\n\nEnable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None. \n\nA larger than normal volume of emails sent from an account and similar phishing emails sent from \u202freal accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Account Manipulation: Additional Email Delegate Permissions' ",
      "answer": "Sure! Here are the detection options for MITRE Account Manipulation: Additional Email Delegate Permissions:\nMonitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.\n\nEnable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None. \n\nA larger than normal volume of emails sent from an account and similar phishing emails sent from \u202freal accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Modify Authentication Process - T1556, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Modify Authentication Process' are:\n\nMonitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages</code>) and correlate then investigate the DLL files these files reference. \n\nPassword filters will also show up as an autorun and loaded DLL in lsass.exe.\n\nMonitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll). \n\nMonitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.\n\nMonitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services.  Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nMonitor property changes in Group Policy that manage authentication mechanisms (i.e. Group Policy Modification). The <code>Store passwords using reversible encryption</code> configuration should be set to Disabled. Additionally, monitor and/or block suspicious command/script execution of <code>-AllowReversiblePasswordEncryption $true</code>, <code>Set-ADUser</code> and <code>Set-ADAccountControl</code>. Finally, monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Modify Authentication Process - T1556, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Modify Authentication Process' are:\n\nMonitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages</code>) and correlate then investigate the DLL files these files reference. \n\nPassword filters will also show up as an autorun and loaded DLL in lsass.exe.\n\nMonitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll). \n\nMonitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.\n\nMonitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services.  Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nMonitor property changes in Group Policy that manage authentication mechanisms (i.e. Group Policy Modification). The <code>Store passwords using reversible encryption</code> configuration should be set to Disabled. Additionally, monitor and/or block suspicious command/script execution of <code>-AllowReversiblePasswordEncryption $true</code>, <code>Set-ADUser</code> and <code>Set-ADAccountControl</code>. Finally, monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'System Location Discovery' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE System Location Discovery:\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system location information. Remote access tools with built-in features may interact directly with the Windows API, such as calling <code> GetLocaleInfoW</code> to gather information.\n\nMonitor traffic flows to geo-location service provider sites, such as ip-api and ipinfo.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'System Location Discovery' ",
      "answer": "Sure! Here are the detection options for MITRE System Location Discovery:\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system location information. Remote access tools with built-in features may interact directly with the Windows API, such as calling <code> GetLocaleInfoW</code> to gather information.\n\nMonitor traffic flows to geo-location service provider sites, such as ip-api and ipinfo.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Subvert Trust Controls' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Subvert Trust Controls:\nCollect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers. Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.  A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.\n\nAnalyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \"Hide Microsoft Entries\" and \"Hide Windows Entries\" are both deselected. \n\nMonitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Subvert Trust Controls' ",
      "answer": "Sure! Here are the detection options for MITRE Subvert Trust Controls:\nCollect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers. Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.  A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.\n\nAnalyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \"Hide Microsoft Entries\" and \"Hide Windows Entries\" are both deselected. \n\nMonitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Gather Victim Host Information: Firmware",
    "context": "",
    "output": "Here are some possible detections for 'Gather Victim Host Information: Firmware':\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Gather Victim Host Information: Firmware",
      "answer": "Here are some possible detections for 'Gather Victim Host Information: Firmware':\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Inter-Process Communication' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Inter-Process Communication:\nMonitor for strings in files/commands, loaded DLLs/libraries, or spawned processes that are associated with abuse of IPC mechanisms.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Inter-Process Communication' ",
      "answer": "Sure! Here are the detection options for MITRE Inter-Process Communication:\nMonitor for strings in files/commands, loaded DLLs/libraries, or spawned processes that are associated with abuse of IPC mechanisms.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Modify Cloud Compute Infrastructure: Create Cloud Instance - T1578.002, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Modify Cloud Compute Infrastructure: Create Cloud Instance' are:\n\nThe creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.\n\nIn AWS, CloudTrail logs capture the creation of an instance in the <code>RunInstances</code> event, and in Azure the creation of a VM may be captured in Azure activity logs. Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances create</code> to create a VM.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Modify Cloud Compute Infrastructure: Create Cloud Instance - T1578.002, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Modify Cloud Compute Infrastructure: Create Cloud Instance' are:\n\nThe creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.\n\nIn AWS, CloudTrail logs capture the creation of an instance in the <code>RunInstances</code> event, and in Azure the creation of a VM may be captured in Azure activity logs. Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances create</code> to create a VM.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Hide Artifacts: Run Virtual Instance - T1564.006?",
    "context": "",
    "output": "In order to detect Hide Artifacts: Run Virtual Instance (T1564.006), you can apply the following detection options:\nConsider monitoring for files and processes associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V). Consider monitoring the size of virtual machines running on the system. Adversaries may create virtual images which are smaller than those of typical virtual machines. Network adapter information may also be helpful in detecting the use of virtual instances.\n\nConsider monitoring for process command-line arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex. <code>-silent</code>, <code>-ignore-reboot</code>), as well as those associated with running a headless (in the background with no UI) virtual instance (ex. <code>VBoxManage startvm $VM --type headless</code>). Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex. <code>VBoxManage.exe setextradata global GUI/SuppressMessages \"all\"</code>).\n\nMonitor for commands which enable hypervisors such as Hyper-V.  If virtualization software is installed by the adversary, the Registry may provide detection opportunities. Consider monitoring for Windows Service, with respect to virtualization software. \n\nBenign usage of virtualization technology is common in enterprise environments, data and events should not be viewed in isolation, but as part of a chain of behavior.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Hide Artifacts: Run Virtual Instance - T1564.006",
      "answer": "In order to detect Hide Artifacts: Run Virtual Instance (T1564.006), you can apply the following detection options:\nConsider monitoring for files and processes associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V). Consider monitoring the size of virtual machines running on the system. Adversaries may create virtual images which are smaller than those of typical virtual machines. Network adapter information may also be helpful in detecting the use of virtual instances.\n\nConsider monitoring for process command-line arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex. <code>-silent</code>, <code>-ignore-reboot</code>), as well as those associated with running a headless (in the background with no UI) virtual instance (ex. <code>VBoxManage startvm $VM --type headless</code>). Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex. <code>VBoxManage.exe setextradata global GUI/SuppressMessages \"all\"</code>).\n\nMonitor for commands which enable hypervisors such as Hyper-V.  If virtualization software is installed by the adversary, the Registry may provide detection opportunities. Consider monitoring for Windows Service, with respect to virtualization software. \n\nBenign usage of virtualization technology is common in enterprise environments, data and events should not be viewed in isolation, but as part of a chain of behavior.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Impair Defenses: Disable or Modify Linux Audit System - T1562.012",
    "context": "",
    "output": "In order to detect Impair Defenses: Disable or Modify Linux Audit System (T1562.012), you can apply the following detection options:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Impair Defenses: Disable or Modify Linux Audit System - T1562.012",
      "answer": "In order to detect Impair Defenses: Disable or Modify Linux Audit System (T1562.012), you can apply the following detection options:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Unsecured Credentials: Credentials In Files - T1552.001",
    "context": "",
    "output": "In order to detect Unsecured Credentials: Credentials In Files (T1552.001), you can apply the following detection options:\nWhile detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See Valid Accounts for more information.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Unsecured Credentials: Credentials In Files - T1552.001",
      "answer": "In order to detect Unsecured Credentials: Credentials In Files (T1552.001), you can apply the following detection options:\nWhile detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See Valid Accounts for more information.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Data Manipulation (T1565)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Data Manipulation:\n\nWhere applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Data Manipulation (T1565)",
      "answer": "Certainly. Here are some possible detection methods for Data Manipulation:\n\nWhere applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: `System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nFor network infrastructure devices, collect AAA logging to monitor `show` commands being run by non-standard users from non-standard locations.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: System Owner/User Discovery",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: `System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nFor network infrastructure devices, collect AAA logging to monitor `show` commands being run by non-standard users from non-standard locations.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: System Owner/User Discovery",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: System Binary Proxy Execution: Electron Applications?",
    "context": "",
    "output": "Here are some possible detections for 'System Binary Proxy Execution: Electron Applications':\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: System Binary Proxy Execution: Electron Applications",
      "answer": "Here are some possible detections for 'System Binary Proxy Execution: Electron Applications':\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Protocol Tunneling?",
    "context": "",
    "output": "Here are some possible detections for 'Protocol Tunneling':\n\nMonitoring for systems listening and/or establishing external connections using ports/protocols commonly associated with tunneling, such as SSH (port 22). Also monitor for processes commonly associated with tunneling, such as Plink and the OpenSSH client. \n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Protocol Tunneling",
      "answer": "Here are some possible detections for 'Protocol Tunneling':\n\nMonitoring for systems listening and/or establishing external connections using ports/protocols commonly associated with tunneling, such as SSH (port 22). Also monitor for processes commonly associated with tunneling, such as Plink and the OpenSSH client. \n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Valid Accounts: Domain Accounts' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Valid Accounts: Domain Accounts:\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services. Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nOn Linux, check logs and other artifacts created by use of domain authentication services, such as the System Security Services Daemon (sssd). \n\nPerform regular audits of domain accounts to detect accounts that may have been created by an adversary for persistence.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Valid Accounts: Domain Accounts' ",
      "answer": "Sure! Here are the detection options for MITRE Valid Accounts: Domain Accounts:\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services. Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nOn Linux, check logs and other artifacts created by use of domain authentication services, such as the System Security Services Daemon (sssd). \n\nPerform regular audits of domain accounts to detect accounts that may have been created by an adversary for persistence.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: System Script Proxy Execution: PubPrn?",
    "context": "",
    "output": "Here are some possible detections for 'System Script Proxy Execution: PubPrn':\n\nMonitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: System Script Proxy Execution: PubPrn",
      "answer": "Here are some possible detections for 'System Script Proxy Execution: PubPrn':\n\nMonitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\n\nFile access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\n\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nDetection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account.\n\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include <code>X-MS-Exchange-Organization-AutoForwarded</code> set to true, <code>X-MailFwdBy</code> and <code>X-Forwarded-To</code>. The <code>forwardingSMTPAddress</code> parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox. High volumes of emails that bear the <code>X-MS-Exchange-Organization-AutoForwarded</code> header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Email Collection",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\n\nFile access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\n\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nDetection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account.\n\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include <code>X-MS-Exchange-Organization-AutoForwarded</code> set to true, <code>X-MailFwdBy</code> and <code>X-Forwarded-To</code>. The <code>forwardingSMTPAddress</code> parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox. High volumes of emails that bear the <code>X-MS-Exchange-Organization-AutoForwarded</code> header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Email Collection",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: System Binary Proxy Execution: Odbcconf (T1218.008)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nUse process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: System Binary Proxy Execution: Odbcconf (T1218.008)",
      "answer": "Detections for the following MITRE attack technique:\n\nUse process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems. If attempts are detected, then investigate endpoint data sources to find the root cause. For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.\n\nMonitor creation and modification of .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources as these could be used to gather credentials when the files are rendered.?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Forced Authentication",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems. If attempts are detected, then investigate endpoint data sources to find the root cause. For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.\n\nMonitor creation and modification of .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources as these could be used to gather credentials when the files are rendered.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Forced Authentication",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Input Capture: Web Portal Capture - T1056.003, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Input Capture: Web Portal Capture' are:\n\nFile monitoring may be used to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Input Capture: Web Portal Capture - T1056.003, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Input Capture: Web Portal Capture' are:\n\nFile monitoring may be used to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Account Manipulation: Additional Container Cluster Roles",
    "context": "",
    "output": "Here are some possible detections for 'Account Manipulation: Additional Container Cluster Roles':\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Account Manipulation: Additional Container Cluster Roles",
      "answer": "Here are some possible detections for 'Account Manipulation: Additional Container Cluster Roles':\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Indicator Removal (T1070)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Indicator Removal:\n\nFile system monitoring may be used to detect improper deletion or modification of indicator files.  Events not stored on the file system may require different detection mechanisms.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Indicator Removal (T1070)",
      "answer": "Certainly. Here are some possible detection methods for Indicator Removal:\n\nFile system monitoring may be used to detect improper deletion or modification of indicator files.  Events not stored on the file system may require different detection mechanisms.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Boot or Logon Autostart Execution: LSASS Driver - T1547.008",
    "context": "",
    "output": "In order to detect Boot or Logon Autostart Execution: LSASS Driver (T1547.008), you can apply the following detection options:\nWith LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers.  Also monitor DLL load operations in lsass.exe. \n\nUtilize the Sysinternals Autoruns/Autorunsc utility  to examine loaded drivers associated with the LSA.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Boot or Logon Autostart Execution: LSASS Driver - T1547.008",
      "answer": "In order to detect Boot or Logon Autostart Execution: LSASS Driver (T1547.008), you can apply the following detection options:\nWith LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers.  Also monitor DLL load operations in lsass.exe. \n\nUtilize the Sysinternals Autoruns/Autorunsc utility  to examine loaded drivers associated with the LSA.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Compromise Accounts: Email Accounts' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Compromise Accounts: Email Accounts:\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Phishing).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Compromise Accounts: Email Accounts' ",
      "answer": "Sure! Here are the detection options for MITRE Compromise Accounts: Email Accounts:\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Phishing).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Impair Defenses: Disable or Modify Cloud Firewall (T1562.007)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Impair Defenses: Disable or Modify Cloud Firewall:\n\nMonitor cloud logs for modification or creation of new security groups or firewall rules.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Impair Defenses: Disable or Modify Cloud Firewall (T1562.007)",
      "answer": "Certainly. Here are some possible detection methods for Impair Defenses: Disable or Modify Cloud Firewall:\n\nMonitor cloud logs for modification or creation of new security groups or firewall rules.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Create or Modify System Process - T1543?",
    "context": "",
    "output": "In order to detect Create or Modify System Process (T1543), you can apply the following detection options:\nMonitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline. New, benign system processes may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  \n\nCommand-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. \n\nMonitor for changes to files associated with system-level processes.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Create or Modify System Process - T1543",
      "answer": "In order to detect Create or Modify System Process (T1543), you can apply the following detection options:\nMonitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline. New, benign system processes may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  \n\nCommand-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. \n\nMonitor for changes to files associated with system-level processes.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Application Layer Protocol: Web Protocols - T1071.001, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Application Layer Protocol: Web Protocols' are:\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.\n\nMonitor for web traffic to/from known-bad or suspicious domains.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Application Layer Protocol: Web Protocols - T1071.001, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Application Layer Protocol: Web Protocols' are:\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.\n\nMonitor for web traffic to/from known-bad or suspicious domains.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: System Binary Proxy Execution: CMSTP (T1218.003)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for System Binary Proxy Execution: CMSTP:\n\nUse process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.\n\nSysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: \n\n* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe and/or Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.\n* To detect Bypass User Account Control via an auto-elevated COM interface - Event 10 (ProcessAccess) where CallTrace contains CMLUA.dll and/or Event 12 or 13 (RegistryEvent) where TargetObject contains CMMGR32.exe. Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: System Binary Proxy Execution: CMSTP (T1218.003)",
      "answer": "Certainly. Here are some possible detection methods for System Binary Proxy Execution: CMSTP:\n\nUse process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.\n\nSysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: \n\n* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe and/or Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.\n* To detect Bypass User Account Control via an auto-elevated COM interface - Event 10 (ProcessAccess) where CallTrace contains CMLUA.dll and/or Event 12 or 13 (RegistryEvent) where TargetObject contains CMMGR32.exe. Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Phishing for Information: Spearphishing Service",
    "context": "",
    "output": "Here are some possible detections for 'Phishing for Information: Spearphishing Service':\n\nMonitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Phishing for Information: Spearphishing Service",
      "answer": "Here are some possible detections for 'Phishing for Information: Spearphishing Service':\n\nMonitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Modify Authentication Process: Hybrid Identity - T1556.007",
    "context": "",
    "output": "In order to detect Modify Authentication Process: Hybrid Identity (T1556.007), you can apply the following detection options:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Modify Authentication Process: Hybrid Identity - T1556.007",
      "answer": "In order to detect Modify Authentication Process: Hybrid Identity (T1556.007), you can apply the following detection options:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Scheduled Transfer' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Scheduled Transfer:\nMonitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious. Network connections to the same destination that occur at the same time of day for multiple days are suspicious.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Scheduled Transfer' ",
      "answer": "Sure! Here are the detection options for MITRE Scheduled Transfer:\nMonitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious. Network connections to the same destination that occur at the same time of day for multiple days are suspicious.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Modify Authentication Process: Password Filter DLL (T1556.002)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Modify Authentication Process: Password Filter DLL:\n\nMonitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages</code>) and correlate then investigate the DLL files these files reference.\n\nPassword filters will also show up as an autorun and loaded DLL in lsass.exe.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Modify Authentication Process: Password Filter DLL (T1556.002)",
      "answer": "Certainly. Here are some possible detection methods for Modify Authentication Process: Password Filter DLL:\n\nMonitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages</code>) and correlate then investigate the DLL files these files reference.\n\nPassword filters will also show up as an autorun and loaded DLL in lsass.exe.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: File and Directory Permissions Modification (T1222)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: File and Directory Permissions Modification (T1222)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Pre-OS Boot: ROMMONkit (T1542.004)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nThere are no documented means for defenders to validate the operation of the ROMMON outside of vendor support. If a network device is suspected of being compromised, contact the vendor to assist in further investigation.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Pre-OS Boot: ROMMONkit (T1542.004)",
      "answer": "Detections for the following MITRE attack technique:\n\nThere are no documented means for defenders to validate the operation of the ROMMON outside of vendor support. If a network device is suspected of being compromised, contact the vendor to assist in further investigation.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Device Driver Discovery (T1652)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Device Driver Discovery (T1652)",
      "answer": "Detections for the following MITRE attack technique:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Pre-OS Boot?",
    "context": "",
    "output": "Here are some possible detections for 'Pre-OS Boot':\n\nPerform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes. Take snapshots of boot records and firmware and compare against known good images. Log changes to boot records, BIOS, and EFI, which can be performed by API calls, and compare against known good behavior and patching.\n\nDisk check, forensic utilities, and data from device drivers (i.e. processes and API calls) may reveal anomalies that warrant deeper investigation.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Pre-OS Boot",
      "answer": "Here are some possible detections for 'Pre-OS Boot':\n\nPerform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes. Take snapshots of boot records and firmware and compare against known good images. Log changes to boot records, BIOS, and EFI, which can be performed by API calls, and compare against known good behavior and patching.\n\nDisk check, forensic utilities, and data from device drivers (i.e. processes and API calls) may reveal anomalies that warrant deeper investigation.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: ",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Obfuscated Files or Information: Embedded Payloads",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: ",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Obfuscated Files or Information: Embedded Payloads",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Access Token Manipulation (T1134)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Access Token Manipulation:\n\nIf an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code> , <code>DuplicateTokenEx</code>, and <code>ImpersonateLoggedOnUser</code>). Please see the referenced Windows API pages for more information.\n\nQuery systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.\n\nLook for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Access Token Manipulation (T1134)",
      "answer": "Certainly. Here are some possible detection methods for Access Token Manipulation:\n\nIf an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code> , <code>DuplicateTokenEx</code>, and <code>ImpersonateLoggedOnUser</code>). Please see the referenced Windows API pages for more information.\n\nQuery systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.\n\nLook for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Hijack Execution Flow: Path Interception by PATH Environment Variable - T1574.007",
    "context": "",
    "output": "In order to detect Hijack Execution Flow: Path Interception by PATH Environment Variable (T1574.007), you can apply the following detection options:\nMonitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Hijack Execution Flow: Path Interception by PATH Environment Variable - T1574.007",
      "answer": "In order to detect Hijack Execution Flow: Path Interception by PATH Environment Variable (T1574.007), you can apply the following detection options:\nMonitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Use Alternate Authentication Material: Pass the Ticket?",
    "context": "",
    "output": "Here are some possible detections for 'Use Alternate Authentication Material: Pass the Ticket':\n\nAudit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.\n\nEvent ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to \"Integrity check on decrypted field failed\" and indicates misuse by a previously invalidated golden ticket.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Use Alternate Authentication Material: Pass the Ticket",
      "answer": "Here are some possible detections for 'Use Alternate Authentication Material: Pass the Ticket':\n\nAudit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.\n\nEvent ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to \"Integrity check on decrypted field failed\" and indicates misuse by a previously invalidated golden ticket.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Data Obfuscation",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Data Obfuscation",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Office Application Startup: Add-ins (T1137.006)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Office Application Startup: Add-ins:\n\nMonitor and validate the Office trusted locations on the file system and audit the Registry entries relevant for enabling add-ins.\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Office Application Startup: Add-ins (T1137.006)",
      "answer": "Certainly. Here are some possible detection methods for Office Application Startup: Add-ins:\n\nMonitor and validate the Office trusted locations on the file system and audit the Registry entries relevant for enabling add-ins.\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Inter-Process Communication: Dynamic Data Exchange (T1559.002)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).\n\nOLE, Office Open XML, CSV, and other files can be scanned for \u2018DDEAUTO', \u2018DDE\u2019, and other strings indicative of DDE execution.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Inter-Process Communication: Dynamic Data Exchange (T1559.002)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).\n\nOLE, Office Open XML, CSV, and other files can be scanned for \u2018DDEAUTO', \u2018DDE\u2019, and other strings indicative of DDE execution.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Unsecured Credentials (T1552)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Unsecured Credentials:\n\nWhile detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See Valid Accounts for more information.\n\nMonitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments  indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior.\n\nMonitoring when the user's <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like <code>cat ~/.bash_history</code>.\n\nAdditionally, monitor processes for applications that can be used to query the Registry, such as Reg, and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Unsecured Credentials (T1552)",
      "answer": "Certainly. Here are some possible detection methods for Unsecured Credentials:\n\nWhile detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See Valid Accounts for more information.\n\nMonitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments  indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior.\n\nMonitoring when the user's <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like <code>cat ~/.bash_history</code>.\n\nAdditionally, monitor processes for applications that can be used to query the Registry, such as Reg, and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Search Closed Sources: Purchase Technical Data - T1597.002, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Search Closed Sources: Purchase Technical Data' are:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Search Closed Sources: Purchase Technical Data - T1597.002, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Search Closed Sources: Purchase Technical Data' are:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Acquire Infrastructure - T1583",
    "context": "",
    "output": "In order to detect Acquire Infrastructure (T1583), you can apply the following detection options:\nConsider use of services that may aid in tracking of newly acquired infrastructure, such as WHOIS databases for domain registration information. \n\nOnce adversaries have provisioned infrastructure (ex: a server for use in command and control), internet scans may help proactively discover adversary acquired infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Acquire Infrastructure - T1583",
      "answer": "In order to detect Acquire Infrastructure (T1583), you can apply the following detection options:\nConsider use of services that may aid in tracking of newly acquired infrastructure, such as WHOIS databases for domain registration information. \n\nOnce adversaries have provisioned infrastructure (ex: a server for use in command and control), internet scans may help proactively discover adversary acquired infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Phishing for Information: Spearphishing Attachment - T1598.002, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Phishing for Information: Spearphishing Attachment' are:\n\nMonitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Phishing for Information: Spearphishing Attachment - T1598.002, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Phishing for Information: Spearphishing Attachment' are:\n\nMonitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Data Encoding (T1132)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Data Encoding:\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Data Encoding (T1132)",
      "answer": "Certainly. Here are some possible detection methods for Data Encoding:\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Subvert Trust Controls: Mark-of-the-Web Bypass - T1553.005?",
    "context": "",
    "output": "In order to detect Subvert Trust Controls: Mark-of-the-Web Bypass (T1553.005), you can apply the following detection options:\nMonitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Subvert Trust Controls: Mark-of-the-Web Bypass - T1553.005",
      "answer": "In order to detect Subvert Trust Controls: Mark-of-the-Web Bypass (T1553.005), you can apply the following detection options:\nMonitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data. Remote access tools with built-in features may also interact directly with the Windows API to perform these functions outside of typical system utilities. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.  \n\nLook for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.  \n\nCreation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 ). New, benign services may be created during installation of new software.\n\nSuspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Create or Modify System Process: Windows Service",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data. Remote access tools with built-in features may also interact directly with the Windows API to perform these functions outside of typical system utilities. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.  \n\nLook for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.  \n\nCreation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 ). New, benign services may be created during installation of new software.\n\nSuspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Create or Modify System Process: Windows Service",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Hijack Execution Flow: Path Interception by Unquoted Path - T1574.009, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Hijack Execution Flow: Path Interception by Unquoted Path' are:\n\nMonitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Hijack Execution Flow: Path Interception by Unquoted Path - T1574.009, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Hijack Execution Flow: Path Interception by Unquoted Path' are:\n\nMonitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: System Service Discovery - T1007?",
    "context": "",
    "output": "In order to detect System Service Discovery (T1007), you can apply the following detection options:\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: System Service Discovery - T1007",
      "answer": "In order to detect System Service Discovery (T1007), you can apply the following detection options:\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Account Discovery: Local Account (T1087.001)?",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Account Discovery: Local Account:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nMonitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Account Discovery: Local Account (T1087.001)",
      "answer": "Certainly. Here are some possible detection methods for Account Discovery: Local Account:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nMonitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Most embedded network devices provide a command to print the version of the currently running operating system.  Use this command to query the operating system for its version number and compare it to what is expected for the device in question.  Because this method may be used in conjunction with Patch System Image, it may be appropriate to also verify the integrity of the vendor provided operating system image file. \n\nCompare the checksum of the operating system file with the checksum of a known good copy from a trusted source.  Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not.  Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.  \n\nMany vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory.  If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Modify System Image",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Most embedded network devices provide a command to print the version of the currently running operating system.  Use this command to query the operating system for its version number and compare it to what is expected for the device in question.  Because this method may be used in conjunction with Patch System Image, it may be appropriate to also verify the integrity of the vendor provided operating system image file. \n\nCompare the checksum of the operating system file with the checksum of a known good copy from a trusted source.  Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not.  Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.  \n\nMany vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory.  If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Modify System Image",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Remote Services: Cloud Services (T1021.007)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Remote Services: Cloud Services:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Remote Services: Cloud Services (T1021.007)",
      "answer": "Certainly. Here are some possible detection methods for Remote Services: Cloud Services:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Hide Artifacts - T1564?",
    "context": "",
    "output": "In order to detect Hide Artifacts (T1564), you can apply the following detection options:\nMonitor files, processes, and command-line arguments for actions indicative of hidden artifacts. Monitor event and authentication logs for records of hidden artifacts being used. Monitor the file system and shell commands for hidden attribute usage.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Hide Artifacts - T1564",
      "answer": "In order to detect Hide Artifacts (T1564), you can apply the following detection options:\nMonitor files, processes, and command-line arguments for actions indicative of hidden artifacts. Monitor event and authentication logs for records of hidden artifacts being used. Monitor the file system and shell commands for hidden attribute usage.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Exfiltration Over Other Network Medium: Exfiltration Over Bluetooth (T1011.001)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.\n\nMonitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Exfiltration Over Other Network Medium: Exfiltration Over Bluetooth (T1011.001)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.\n\nMonitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Account Manipulation: Device Registration (T1098.005)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Account Manipulation: Device Registration (T1098.005)",
      "answer": "Detections for the following MITRE attack technique:\n\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Event Triggered Execution: Change Default File Association' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Event Triggered Execution: Change Default File Association:\nCollect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process.\n\nUser file association preferences are stored under <code> HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts</code> and override associations configured under <code>HKEY_CLASSES_ROOT</code>. Changes to a user's preference will occur under this entry's subkeys.\n\nAlso look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Event Triggered Execution: Change Default File Association' ",
      "answer": "Sure! Here are the detection options for MITRE Event Triggered Execution: Change Default File Association:\nCollect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process.\n\nUser file association preferences are stored under <code> HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts</code> and override associations configured under <code>HKEY_CLASSES_ROOT</code>. Changes to a user's preference will occur under this entry's subkeys.\n\nAlso look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Command and Scripting Interpreter: Python",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Command and Scripting Interpreter: Python",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Boot or Logon Initialization Scripts",
    "context": "",
    "output": "Here are some possible detections for 'Boot or Logon Initialization Scripts':\n\nMonitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Boot or Logon Initialization Scripts",
      "answer": "Here are some possible detections for 'Boot or Logon Initialization Scripts':\n\nMonitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Steal or Forge Kerberos Tickets: AS-REP Roasting - T1558.004, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Steal or Forge Kerberos Tickets: AS-REP Roasting' are:\n\nEnable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption Type 0x17, pre-authentication not required Type: 0x0).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Steal or Forge Kerberos Tickets: AS-REP Roasting - T1558.004, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Steal or Forge Kerberos Tickets: AS-REP Roasting' are:\n\nEnable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption Type 0x17, pre-authentication not required Type: 0x0).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Gather Victim Org Information: Identify Roles (T1591.004)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Gather Victim Org Information: Identify Roles (T1591.004)",
      "answer": "Detections for the following MITRE attack technique:\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Data Encrypted for Impact (T1486)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Data Encrypted for Impact:\n\nUse process monitoring to monitor the execution and command line parameters of binaries involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit. Monitor for the creation of suspicious files as well as unusual file modification activity. In particular, look for large quantities of file modifications in user directories.\n\nIn some cases, monitoring for unusual kernel driver installation activity can aid in detection.\n\nIn cloud environments, monitor for events that indicate storage objects have been anomalously replaced by copies.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Data Encrypted for Impact (T1486)",
      "answer": "Certainly. Here are some possible detection methods for Data Encrypted for Impact:\n\nUse process monitoring to monitor the execution and command line parameters of binaries involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit. Monitor for the creation of suspicious files as well as unusual file modification activity. In particular, look for large quantities of file modifications in user directories.\n\nIn some cases, monitoring for unusual kernel driver installation activity can aid in detection.\n\nIn cloud environments, monitor for events that indicate storage objects have been anomalously replaced by copies.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Remote System Discovery (T1018)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nMonitor for processes that can be used to discover remote systems, such as <code>ping.exe</code> and <code>tracert.exe</code>, especially when executed in quick succession.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Remote System Discovery (T1018)",
      "answer": "Detections for the following MITRE attack technique:\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nMonitor for processes that can be used to discover remote systems, such as <code>ping.exe</code> and <code>tracert.exe</code>, especially when executed in quick succession.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Credentials from Password Stores: Securityd Memory (T1555.002)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Credentials from Password Stores: Securityd Memory:\n\nMonitor processes and command-line arguments for activity surrounded users searching for credentials or using automated tools to scan memory for passwords.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Credentials from Password Stores: Securityd Memory (T1555.002)",
      "answer": "Certainly. Here are some possible detection methods for Credentials from Password Stores: Securityd Memory:\n\nMonitor processes and command-line arguments for activity surrounded users searching for credentials or using automated tools to scan memory for passwords.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: Consider monitoring network traffic on both interfaces of border network devices with out-of-band packet capture or network flow data, using a different device than the one in question.  Look for traffic that should be prohibited by the intended network traffic policy enforcement for the border network device.\n\nMonitor the border network device\u2019s configuration to validate that the policy enforcement sections are what was intended.  Look for rules that are less restrictive, or that allow specific traffic types that were not previously authorized.",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Network Boundary Bridging",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: Consider monitoring network traffic on both interfaces of border network devices with out-of-band packet capture or network flow data, using a different device than the one in question.  Look for traffic that should be prohibited by the intended network traffic policy enforcement for the border network device.\n\nMonitor the border network device\u2019s configuration to validate that the policy enforcement sections are what was intended.  Look for rules that are less restrictive, or that allow specific traffic types that were not previously authorized.",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Network Boundary Bridging",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: OS Credential Dumping: Cached Domain Credentials - T1003.005",
    "context": "",
    "output": "In order to detect OS Credential Dumping: Cached Domain Credentials (T1003.005), you can apply the following detection options:\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nDetection of compromised Valid Accounts in-use by adversaries may help as well.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: OS Credential Dumping: Cached Domain Credentials - T1003.005",
      "answer": "In order to detect OS Credential Dumping: Cached Domain Credentials (T1003.005), you can apply the following detection options:\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nDetection of compromised Valid Accounts in-use by adversaries may help as well.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Remote Services: SMB/Windows Admin Shares - T1021.002",
    "context": "",
    "output": "In order to detect Remote Services: SMB/Windows Admin Shares (T1021.002), you can apply the following detection options:\nEnsure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.  Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as Net, on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Remote Services: SMB/Windows Admin Shares - T1021.002",
      "answer": "In order to detect Remote Services: SMB/Windows Admin Shares (T1021.002), you can apply the following detection options:\nEnsure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.  Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as Net, on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Account Manipulation: Additional Cloud Roles",
    "context": "",
    "output": "Here are some possible detections for 'Account Manipulation: Additional Cloud Roles':\n\nCollect activity logs from IAM services and cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Account Manipulation: Additional Cloud Roles",
      "answer": "Here are some possible detections for 'Account Manipulation: Additional Cloud Roles':\n\nCollect activity logs from IAM services and cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Indicator Removal: File Deletion - T1070.004, how should I detect it?",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Indicator Removal: File Deletion' are:\n\nIt may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Indicator Removal: File Deletion - T1070.004, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Indicator Removal: File Deletion' are:\n\nIt may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Boot or Logon Autostart Execution: Port Monitors - T1547.010?",
    "context": "",
    "output": "In order to detect Boot or Logon Autostart Execution: Port Monitors (T1547.010), you can apply the following detection options:\nMonitor process API calls to <code>AddMonitor</code>. Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal. New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious. \n\nMonitor Registry writes to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>, paying particular attention to changes in the \"Driver\" subkey. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Boot or Logon Autostart Execution: Port Monitors - T1547.010",
      "answer": "In order to detect Boot or Logon Autostart Execution: Port Monitors (T1547.010), you can apply the following detection options:\nMonitor process API calls to <code>AddMonitor</code>. Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal. New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious. \n\nMonitor Registry writes to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>, paying particular attention to changes in the \"Driver\" subkey. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Archive Collected Data: Archive via Library (T1560.002)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Archive Collected Data: Archive via Library:\n\nMonitor processes for accesses to known archival libraries. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Archive Collected Data: Archive via Library (T1560.002)",
      "answer": "Certainly. Here are some possible detection methods for Archive Collected Data: Archive via Library:\n\nMonitor processes for accesses to known archival libraries. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Deobfuscate/Decode Files or Information - T1140?",
    "context": "",
    "output": "In order to detect Deobfuscate/Decode Files or Information (T1140), you can apply the following detection options:\nDetecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as certutil.\n\nMonitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Deobfuscate/Decode Files or Information - T1140",
      "answer": "In order to detect Deobfuscate/Decode Files or Information (T1140), you can apply the following detection options:\nDetecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as certutil.\n\nMonitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Obfuscated Files or Information: Steganography (T1027.003)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nDetection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Obfuscated Files or Information: Steganography (T1027.003)",
      "answer": "Detections for the following MITRE attack technique:\n\nDetection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: System Binary Proxy Execution: Compiled HTML File (T1218.001)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for System Binary Proxy Execution: Compiled HTML File:\n\nMonitor and analyze the execution and arguments of hh.exe.  Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.\n\nMonitor presence and use of CHM files, especially if they are not typically used within an environment.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: System Binary Proxy Execution: Compiled HTML File (T1218.001)",
      "answer": "Certainly. Here are some possible detection methods for System Binary Proxy Execution: Compiled HTML File:\n\nMonitor and analyze the execution and arguments of hh.exe.  Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.\n\nMonitor presence and use of CHM files, especially if they are not typically used within an environment.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Virtualization/Sandbox Evasion: System Checks' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Virtualization/Sandbox Evasion: System Checks:\nVirtualization/sandbox related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Virtualization/Sandbox Evasion: System Checks' ",
      "answer": "Sure! Here are the detection options for MITRE Virtualization/Sandbox Evasion: System Checks:\nVirtualization/sandbox related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Steal or Forge Kerberos Tickets: Kerberoasting - T1558.003",
    "context": "",
    "output": "In order to detect Steal or Forge Kerberos Tickets: Kerberoasting (T1558.003), you can apply the following detection options:\nEnable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption Type 0x17).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Steal or Forge Kerberos Tickets: Kerberoasting - T1558.003",
      "answer": "In order to detect Steal or Forge Kerberos Tickets: Kerberoasting (T1558.003), you can apply the following detection options:\nEnable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption Type 0x17).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Hide Artifacts: VBA Stomping' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Hide Artifacts: VBA Stomping:\nDetection efforts should be placed finding differences between VBA source code and p-code. VBA code can be extracted from p-code before execution with tools such as the pcodedmp disassembler. The oletools toolkit leverages the pcodedmp disassembler to detect VBA stomping by comparing keywords present in the VBA source code and p-code.\n\nIf the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the <code>PROJECT</code> stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the <code>PROJECT</code> stream will inhibit attempts of reading the VBA source code through the GUI.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Hide Artifacts: VBA Stomping' ",
      "answer": "Sure! Here are the detection options for MITRE Hide Artifacts: VBA Stomping:\nDetection efforts should be placed finding differences between VBA source code and p-code. VBA code can be extracted from p-code before execution with tools such as the pcodedmp disassembler. The oletools toolkit leverages the pcodedmp disassembler to detect VBA stomping by comparing keywords present in the VBA source code and p-code.\n\nIf the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the <code>PROJECT</code> stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the <code>PROJECT</code> stream will inhibit attempts of reading the VBA source code through the GUI.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Unsecured Credentials: Container API",
    "context": "",
    "output": "Here are some possible detections for 'Unsecured Credentials: Container API':\n\nEstablish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.\n\nIt may be possible to detect adversary use of credentials they have obtained such as in Valid Accounts.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Unsecured Credentials: Container API",
      "answer": "Here are some possible detections for 'Unsecured Credentials: Container API':\n\nEstablish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.\n\nIt may be possible to detect adversary use of credentials they have obtained such as in Valid Accounts.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Proxy (T1090)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. \n\nConsider monitoring for traffic to known anonymity networks (such as Tor).",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Proxy (T1090)",
      "answer": "Detections for the following MITRE attack technique:\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. \n\nConsider monitoring for traffic to known anonymity networks (such as Tor).",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Boot or Logon Autostart Execution: Security Support Provider (T1547.005)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Boot or Logon Autostart Execution: Security Support Provider (T1547.005)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Rogue Domain Controller - T1207",
    "context": "",
    "output": "In order to detect Rogue Domain Controller (T1207), you can apply the following detection options:\nMonitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts.   DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords). Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). \n\nLeverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies.  \n\nBaseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects. \n\nInvestigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with \u201cGC/\u201d) by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235\u20134B06\u201311D1-AB04\u201300C04FC2DCD2) can be set without logging.  A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Rogue Domain Controller - T1207",
      "answer": "In order to detect Rogue Domain Controller (T1207), you can apply the following detection options:\nMonitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts.   DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords). Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). \n\nLeverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies.  \n\nBaseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects. \n\nInvestigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with \u201cGC/\u201d) by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235\u20134B06\u201311D1-AB04\u201300C04FC2DCD2) can be set without logging.  A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Unsecured Credentials: Credentials in Registry' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Unsecured Credentials: Credentials in Registry:\nMonitor processes for applications that can be used to query the Registry, such as Reg, and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Unsecured Credentials: Credentials in Registry' ",
      "answer": "Sure! Here are the detection options for MITRE Unsecured Credentials: Credentials in Registry:\nMonitor processes for applications that can be used to query the Registry, such as Reg, and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Virtualization/Sandbox Evasion?",
    "context": "",
    "output": "Here are some possible detections for 'Virtualization/Sandbox Evasion':\n\nVirtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Virtualization/Sandbox Evasion",
      "answer": "Here are some possible detections for 'Virtualization/Sandbox Evasion':\n\nVirtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Server Software Component: Web Shell - T1505.003, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Server Software Component: Web Shell' are:\n\nWeb shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload:  \n\n<code>&lt;?php @eval($_POST'password');&gt;</code>\n\nNevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.\n\nFile monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.\n\nLog authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Server Software Component: Web Shell - T1505.003, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Server Software Component: Web Shell' are:\n\nWeb shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload:  \n\n<code>&lt;?php @eval($_POST'password');&gt;</code>\n\nNevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.\n\nFile monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.\n\nLog authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Masquerading: Masquerade Task or Service - T1036.004",
    "context": "",
    "output": "In order to detect Masquerading: Masquerade Task or Service (T1036.004), you can apply the following detection options:\nLook for changes to tasks and services that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks or services may show up as outlier processes that have not been seen before when compared against historical data. Monitor processes and command-line arguments for actions that could be taken to create tasks or services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Masquerading: Masquerade Task or Service - T1036.004",
      "answer": "In order to detect Masquerading: Masquerade Task or Service (T1036.004), you can apply the following detection options:\nLook for changes to tasks and services that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks or services may show up as outlier processes that have not been seen before when compared against historical data. Monitor processes and command-line arguments for actions that could be taken to create tasks or services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "What technique can be detected with the following MITRE detections: ?",
    "context": "",
    "output": "A technique that can be detected with the MITRE detections listed above is: Modify Cloud Compute Infrastructure: Modify Cloud Compute Configurations",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "What technique can be detected with the following MITRE detections: ",
      "answer": "A technique that can be detected with the MITRE detections listed above is: Modify Cloud Compute Infrastructure: Modify Cloud Compute Configurations",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Service Stop",
    "context": "",
    "output": "Here are some possible detections for 'Service Stop':\n\nMonitor processes and command-line arguments to see if critical processes are terminated or stop running.\n\nMonitor for edits for modifications to services and startup programs that correspond to services of high importance. Look for changes to services that do not correlate with known software, patch cycles, etc. Windows service information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. Systemd service unit files are stored within the /etc/systemd/system, /usr/lib/systemd/system/, and /home/.config/systemd/user/ directories, as well as associated symbolic links.\n\nAlterations to the service binary path or the service startup type changed to disabled may be suspicious.\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, <code>ChangeServiceConfigW</code> may be used by an adversary to prevent services from starting.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Service Stop",
      "answer": "Here are some possible detections for 'Service Stop':\n\nMonitor processes and command-line arguments to see if critical processes are terminated or stop running.\n\nMonitor for edits for modifications to services and startup programs that correspond to services of high importance. Look for changes to services that do not correlate with known software, patch cycles, etc. Windows service information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. Systemd service unit files are stored within the /etc/systemd/system, /usr/lib/systemd/system/, and /home/.config/systemd/user/ directories, as well as associated symbolic links.\n\nAlterations to the service binary path or the service startup type changed to disabled may be suspicious.\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, <code>ChangeServiceConfigW</code> may be used by an adversary to prevent services from starting.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Develop Capabilities: Digital Certificates (T1587.003)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Develop Capabilities: Digital Certificates:\n\nConsider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.\n\nDetection efforts may be focused on related behaviors, such as Web Protocols, Asymmetric Cryptography, and/or Install Root Certificate.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Develop Capabilities: Digital Certificates (T1587.003)",
      "answer": "Certainly. Here are some possible detection methods for Develop Capabilities: Digital Certificates:\n\nConsider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.\n\nDetection efforts may be focused on related behaviors, such as Web Protocols, Asymmetric Cryptography, and/or Install Root Certificate.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Trusted Developer Utilities Proxy Execution (T1127)",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.\n\nUse process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Trusted Developer Utilities Proxy Execution (T1127)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.\n\nUse process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Data from Removable Media - T1025, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Data from Removable Media' are:\n\nMonitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Data from Removable Media - T1025, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Data from Removable Media' are:\n\nMonitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Browser Extensions - T1176, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Browser Extensions' are:\n\nInventory and monitor browser extension installations that deviate from normal, expected, and benign extensions. Process and network monitoring can be used to detect browsers communicating with a C2 server. However, this may prove to be a difficult way of initially detecting a malicious extension depending on the nature and volume of the traffic it generates.\n\nMonitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.\n\nOn macOS, monitor the command line for usage of the profiles tool, such as <code>profiles install -type=configuration</code>. Additionally, all installed extensions maintain a <code>plist</code> file in the <code>/Library/Managed Preferences/username/</code> directory. Ensure all listed files are in alignment with approved extensions.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Browser Extensions - T1176, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Browser Extensions' are:\n\nInventory and monitor browser extension installations that deviate from normal, expected, and benign extensions. Process and network monitoring can be used to detect browsers communicating with a C2 server. However, this may prove to be a difficult way of initially detecting a malicious extension depending on the nature and volume of the traffic it generates.\n\nMonitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.\n\nOn macOS, monitor the command line for usage of the profiles tool, such as <code>profiles install -type=configuration</code>. Additionally, all installed extensions maintain a <code>plist</code> file in the <code>/Library/Managed Preferences/username/</code> directory. Ensure all listed files are in alignment with approved extensions.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: Abuse Elevation Control Mechanism (T1548)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nMonitor the file system for files that have the setuid or setgid bits set. Also look for any process API calls for behavior that may be indicative of Process Injection and unusual loaded DLLs through DLL Search Order Hijacking, which indicate attempts to gain access to higher privileged processes. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).\n\nConsider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.\n\nOn Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.\n\nThere are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: Abuse Elevation Control Mechanism (T1548)",
      "answer": "Detections for the following MITRE attack technique:\n\nMonitor the file system for files that have the setuid or setgid bits set. Also look for any process API calls for behavior that may be indicative of Process Injection and unusual loaded DLLs through DLL Search Order Hijacking, which indicate attempts to gain access to higher privileged processes. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).\n\nConsider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.\n\nOn Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.\n\nThere are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Given the Mitre attack technique: Exploit Public-Facing Application - T1190, how should I detect it",
    "context": "",
    "output": "Sure. Possible detection methods for the given Mitre attack technique 'Exploit Public-Facing Application' are:\n\nMonitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Given the Mitre attack technique: Exploit Public-Facing Application - T1190, how should I detect it",
      "answer": "Sure. Possible detection methods for the given Mitre attack technique 'Exploit Public-Facing Application' are:\n\nMonitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Trusted Developer Utilities Proxy Execution: MSBuild?",
    "context": "",
    "output": "Here are some possible detections for 'Trusted Developer Utilities Proxy Execution: MSBuild':\n\nUse process monitoring to monitor the execution and arguments of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Trusted Developer Utilities Proxy Execution: MSBuild",
      "answer": "Here are some possible detections for 'Trusted Developer Utilities Proxy Execution: MSBuild':\n\nUse process monitoring to monitor the execution and arguments of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Hijack Execution Flow: Path Interception by Search Order Hijacking' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Hijack Execution Flow: Path Interception by Search Order Hijacking:\nMonitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Hijack Execution Flow: Path Interception by Search Order Hijacking' ",
      "answer": "Sure! Here are the detection options for MITRE Hijack Execution Flow: Path Interception by Search Order Hijacking:\nMonitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Return the detections for the following MITRE ATT&CK technique: External Remote Services (T1133)?",
    "context": "",
    "output": "Detections for the following MITRE attack technique:\n\nFollow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.\n\nWhen authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Return the detections for the following MITRE ATT&CK technique: External Remote Services (T1133)",
      "answer": "Detections for the following MITRE attack technique:\n\nFollow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.\n\nWhen authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Give me possible detections for the given technique: Exploitation for Defense Evasion?",
    "context": "",
    "output": "Here are some possible detections for 'Exploitation for Defense Evasion':\n\nExploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution or evidence of Discovery.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Give me possible detections for the given technique: Exploitation for Defense Evasion",
      "answer": "Here are some possible detections for 'Exploitation for Defense Evasion':\n\nExploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution or evidence of Discovery.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "Tell me how to detect the following: Stage Capabilities: Upload Tool (T1608.002)",
    "context": "",
    "output": "Certainly. Here are some possible detection methods for Stage Capabilities: Upload Tool:\n\nIf infrastructure or patterns in tooling have been previously identified, internet scanning may uncover when an adversary has staged tools to make them accessible for targeting.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as Ingress Tool Transfer.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "Tell me how to detect the following: Stage Capabilities: Upload Tool (T1608.002)",
      "answer": "Certainly. Here are some possible detection methods for Stage Capabilities: Upload Tool:\n\nIf infrastructure or patterns in tooling have been previously identified, internet scanning may uncover when an adversary has staged tools to make them accessible for targeting.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as Ingress Tool Transfer.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Indicator Removal: Clear Mailbox Data - T1070.008",
    "context": "",
    "output": "In order to detect Indicator Removal: Clear Mailbox Data (T1070.008), you can apply the following detection options:\n",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Indicator Removal: Clear Mailbox Data - T1070.008",
      "answer": "In order to detect Indicator Removal: Clear Mailbox Data (T1070.008), you can apply the following detection options:\n",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: Data from Cloud Storage - T1530",
    "context": "",
    "output": "In order to detect Data from Cloud Storage (T1530), you can apply the following detection options:\nMonitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set that is allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: Data from Cloud Storage - T1530",
      "answer": "In order to detect Data from Cloud Storage (T1530), you can apply the following detection options:\nMonitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set that is allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Impair Defenses: Disable or Modify Tools' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Impair Defenses: Disable or Modify Tools:\nMonitor processes and command-line arguments to see if security tools/services are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Monitoring for changes to other known features used by deployed security tools may also expose malicious activity.\n\nLack of expected log events may be suspicious.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Impair Defenses: Disable or Modify Tools' ",
      "answer": "Sure! Here are the detection options for MITRE Impair Defenses: Disable or Modify Tools:\nMonitor processes and command-line arguments to see if security tools/services are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Monitoring for changes to other known features used by deployed security tools may also expose malicious activity.\n\nLack of expected log events may be suspicious.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Container and Resource Discovery' ?",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Container and Resource Discovery:\nEstablish centralized logging for the activity of container and Kubernetes cluster components. This can be done by deploying logging agents on Kubernetes nodes and retrieving logs from sidecar proxies for application pods to detect malicious activity at the cluster level.\n\nMonitor logs for actions that could be taken to gather information about container infrastructure, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Container and Resource Discovery' ",
      "answer": "Sure! Here are the detection options for MITRE Container and Resource Discovery:\nEstablish centralized logging for the activity of container and Kubernetes cluster components. This can be done by deploying logging agents on Kubernetes nodes and retrieving logs from sidecar proxies for application pods to detect malicious activity at the cluster level.\n\nMonitor logs for actions that could be taken to gather information about container infrastructure, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "List detection options for MITRE 'Create Account: Domain Account' ",
    "context": "",
    "output": "Sure! Here are the detection options for MITRE Create Account: Domain Account:\nMonitor for processes and command-line parameters associated with domain account creation, such as <code>net user /add /domain</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows domain controller.  Perform regular audits of domain accounts to detect suspicious accounts that may have been created by an adversary.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "List detection options for MITRE 'Create Account: Domain Account' ",
      "answer": "Sure! Here are the detection options for MITRE Create Account: Domain Account:\nMonitor for processes and command-line parameters associated with domain account creation, such as <code>net user /add /domain</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows domain controller.  Perform regular audits of domain accounts to detect suspicious accounts that may have been created by an adversary.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  },
  {
    "instruction": "How to detect Mitre technique: OS Credential Dumping: LSASS Memory - T1003.001",
    "context": "",
    "output": "In order to detect OS Credential Dumping: LSASS Memory (T1003.001), you can apply the following detection options:\nMonitor for unexpected processes interacting with LSASS.exe. Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity.\n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",
    "category": "MitreFlan",
    "instruction_type": "mitre_detection_detection",
    "parsed_raw_data": {
      "question": "How to detect Mitre technique: OS Credential Dumping: LSASS Memory - T1003.001",
      "answer": "In order to detect OS Credential Dumping: LSASS Memory (T1003.001), you can apply the following detection options:\nMonitor for unexpected processes interacting with LSASS.exe. Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity.\n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",
      "category": [
        "MITREFlan"
      ],
      "instruction_type": "mitre_detection_detection"
    }
  }
]